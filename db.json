{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"source/robots.txt","path":"robots.txt","modified":1,"renderable":0},{"_id":"source/img/icon_wechat.png","path":"img/icon_wechat.png","modified":1,"renderable":0},{"_id":"source/img/icon_wechat_BACKUP.png","path":"img/icon_wechat_BACKUP.png","modified":1,"renderable":0},{"_id":"source/img/ironman-draw.png","path":"img/ironman-draw.png","modified":1,"renderable":0},{"_id":"source/img/404-bg.jpg","path":"img/404-bg.jpg","modified":1,"renderable":0},{"_id":"source/img/signature/BeanTechSign-black.png","path":"img/signature/BeanTechSign-black.png","modified":1,"renderable":0},{"_id":"source/img/signature/BeanTechSign-white.png","path":"img/signature/BeanTechSign-white.png","modified":1,"renderable":0},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.eot","path":"fonts/glyphicons-halflings-regular.eot","modified":1,"renderable":1},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.ttf","path":"fonts/glyphicons-halflings-regular.ttf","modified":1,"renderable":1},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.woff2","path":"fonts/glyphicons-halflings-regular.woff2","modified":1,"renderable":1},{"_id":"themes/beantech/source/css/archive.styl","path":"css/archive.styl","modified":1,"renderable":1},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.woff","path":"fonts/glyphicons-halflings-regular.woff","modified":1,"renderable":1},{"_id":"themes/beantech/source/css/beantech.css","path":"css/beantech.css","modified":1,"renderable":1},{"_id":"themes/beantech/source/css/beantech.min.css","path":"css/beantech.min.css","modified":1,"renderable":1},{"_id":"themes/beantech/source/css/highlight.styl","path":"css/highlight.styl","modified":1,"renderable":1},{"_id":"themes/beantech/source/css/hux-blog.min.css","path":"css/hux-blog.min.css","modified":1,"renderable":1},{"_id":"themes/beantech/source/css/signature.styl","path":"css/signature.styl","modified":1,"renderable":1},{"_id":"themes/beantech/source/css/rocket.styl","path":"css/rocket.styl","modified":1,"renderable":1},{"_id":"themes/beantech/source/css/widget.styl","path":"css/widget.styl","modified":1,"renderable":1},{"_id":"themes/beantech/source/css/toc.styl","path":"css/toc.styl","modified":1,"renderable":1},{"_id":"themes/beantech/source/js/bootstrap.min.js","path":"js/bootstrap.min.js","modified":1,"renderable":1},{"_id":"themes/beantech/source/js/hux-blog.js","path":"js/hux-blog.js","modified":1,"renderable":1},{"_id":"themes/beantech/source/js/hux-blog.min.js","path":"js/hux-blog.min.js","modified":1,"renderable":1},{"_id":"themes/beantech/source/js/jquery.nav.js","path":"js/jquery.nav.js","modified":1,"renderable":1},{"_id":"themes/beantech/source/js/jquery.tagcloud.js","path":"js/jquery.tagcloud.js","modified":1,"renderable":1},{"_id":"themes/beantech/source/js/toc.js","path":"js/toc.js","modified":1,"renderable":1},{"_id":"themes/beantech/source/js/totop.js","path":"js/totop.js","modified":1,"renderable":1},{"_id":"source/img/[backup]ironman-draw.png","path":"img/[backup]ironman-draw.png","modified":1,"renderable":0},{"_id":"source/img/Head.png","path":"img/Head.png","modified":1,"renderable":0},{"_id":"source/img/header_img/Iron-Man-3.jpg","path":"img/header_img/Iron-Man-3.jpg","modified":1,"renderable":0},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.svg","path":"fonts/glyphicons-halflings-regular.svg","modified":1,"renderable":1},{"_id":"themes/beantech/source/css/bootstrap.min.css","path":"css/bootstrap.min.css","modified":1,"renderable":1},{"_id":"themes/beantech/source/js/bootstrap.js","path":"js/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/beantech/source/js/jquery.min.js","path":"js/jquery.min.js","modified":1,"renderable":1},{"_id":"source/img/contact-bg.jpg","path":"img/contact-bg.jpg","modified":1,"renderable":0},{"_id":"source/img/signature/BeanTechSign-white_BACK.png","path":"img/signature/BeanTechSign-white_BACK.png","modified":1,"renderable":0},{"_id":"themes/beantech/source/css/bootstrap.css","path":"css/bootstrap.css","modified":1,"renderable":1},{"_id":"themes/beantech/source/css/images/ironman.png","path":"css/images/ironman.png","modified":1,"renderable":1},{"_id":"themes/beantech/source/css/images/rocket.png","path":"css/images/rocket.png","modified":1,"renderable":1},{"_id":"source/img/header_img/tf-logo-dark.png","path":"img/header_img/tf-logo-dark.png","modified":1,"renderable":0},{"_id":"source/img/signature/BeanTechSign-black_BACK.png","path":"img/signature/BeanTechSign-black_BACK.png","modified":1,"renderable":0},{"_id":"themes/beantech/source/js/jquery.js","path":"js/jquery.js","modified":1,"renderable":1},{"_id":"source/img/header_img/home-bg-2-dark.png","path":"img/header_img/home-bg-2-dark.png","modified":1,"renderable":0},{"_id":"source/img/header_img/tag-bg.jpg","path":"img/header_img/tag-bg.jpg","modified":1,"renderable":0},{"_id":"source/img/header_img/home-bg-o.png","path":"img/header_img/home-bg-o.png","modified":1,"renderable":0},{"_id":"source/img/beantech-desktop.png","path":"img/beantech-desktop.png","modified":1,"renderable":0},{"_id":"source/img/header_img/[Backup]tag-bg.png","path":"img/header_img/[Backup]tag-bg.png","modified":1,"renderable":0},{"_id":"source/img/header_img/archive-bg.png","path":"img/header_img/archive-bg.png","modified":1,"renderable":0},{"_id":"source/img/header_img/[Backup]home-bg-o.png","path":"img/header_img/[Backup]home-bg-o.png","modified":1,"renderable":0},{"_id":"source/img/header_img/[Backup]home-bg-2-dark.png","path":"img/header_img/[Backup]home-bg-2-dark.png","modified":1,"renderable":0},{"_id":"source/img/header_img/[Backup]archive-bg.png","path":"img/header_img/[Backup]archive-bg.png","modified":1,"renderable":0}],"Cache":[{"_id":"source/404.md","hash":"4ed5ec9e4a853af1f0904c76d07ea484e51b27e6","modified":1732155600142},{"_id":"source/CNAME","hash":"3f1284826f0ae981edf7dc3f84bf0401877a8721","modified":1732155600143},{"_id":"source/google9fbfe2a92e19226d.html","hash":"dadbc7ef5c67706011ea1c4f8a2c4511a90d700f","modified":1732155600298},{"_id":"source/robots.txt","hash":"76f45958db0c8ed3d874cf4164cd855fddab1680","modified":1732155600367},{"_id":"themes/beantech/LICENSE","hash":"c48eaae47a703282e0ffe7b91d69366452046214","modified":1732155600369},{"_id":"themes/beantech/_config.yml","hash":"f0796b8e85fe6b3154a5fa442420003fe18dff0a","modified":1732155600370},{"_id":"source/archive/index.md","hash":"21806fd262da492f2634d224f5846ccee9cd3b45","modified":1732155600298},{"_id":"source/about/index.md","hash":"d4cf7207ded88c694ff6f620f36ce1b9774f1eee","modified":1732155600297},{"_id":"source/_posts/C-Dynamic-Linq.md","hash":"29905d549977527ee59b1d4e609ac8ec80ec656f","modified":1732155600152},{"_id":"source/_posts/AppCenter.md","hash":"4a0412658ef804cccbe533052cf85c4ff967cf0d","modified":1732155600146},{"_id":"source/_posts/Async-Await.md","hash":"f7dd55c460b054b448ec24b4b2118a949b65f30b","modified":1732155600152},{"_id":"source/_posts/C-Selenium不指定Chromedriver位置.md","hash":"bf4daa7c57a4bf7b763e3b224861eefa1bbd3429","modified":1732155600154},{"_id":"source/_posts/C-自訂事件.md","hash":"9701d7d8029bd20c80f002b8b5961d3a9bdc2046","modified":1732155600156},{"_id":"source/_posts/CentOS相關.md","hash":"58ccee457c7fd25b5ebfd81c28975c370d9c63a5","modified":1732155600156},{"_id":"source/_posts/C-常用方法.md","hash":"20a6ded8d14a23606915998eec944fd771b6e944","modified":1732155600155},{"_id":"source/_posts/Command、dotnet.md","hash":"b0e374b523e3e4f77d32d1fe620b64b3560a83b9","modified":1732155600157},{"_id":"source/_posts/DIP.md","hash":"4ff3347202b1eff8926881fe409c6fde5f4ab566","modified":1732155600158},{"_id":"source/_posts/DI注入依賴.md","hash":"b5cc43539bea52f82429a3bb07ca374f57135226","modified":1732155600158},{"_id":"source/_posts/DomainKnowhow.md","hash":"46d1a72570b4b373a37f5ae0dc84ab8b272ab554","modified":1732155600160},{"_id":"source/_posts/Dapper.md","hash":"74d2a3f1c52be6e717a08122070c2187a7c4b998","modified":1732155600159},{"_id":"source/_posts/Jetbrains-Rider-同步設定.md","hash":"37a31e547f8a640a80d6e473c08b94a93c2d3d8b","modified":1732155600161},{"_id":"source/_posts/Linux安裝mysql-phpmyadmin.md","hash":"58dd92c3bd32573ba8add1d63ce94dc5d6f5a4e6","modified":1732155600162},{"_id":"source/_posts/Jetbrains工具快捷鍵名稱.md","hash":"227f345ee43ede892a2048ce6edd58af8a1b55cb","modified":1732155600161},{"_id":"source/_posts/Linux背景執行.md","hash":"f2e6c3015cdc8d3c094670ce3038e437f60d179f","modified":1732155600162},{"_id":"source/_posts/MS-SQL-Temp-Table.md","hash":"94ac9e2778001f8261835a6d649b5e97ccc233d5","modified":1732155600163},{"_id":"source/_posts/NUnit.md","hash":"ea555ecfc565818eb042ccf963dadbc952579974","modified":1732155600164},{"_id":"source/_posts/Powerful-Commit-Message.md","hash":"16fecaa936ade44ab0a726bdaae286417526e82c","modified":1732155600172},{"_id":"source/_posts/Python-Request.md","hash":"28c35a582e9bd7d262265cdf4478eb03dc3dc658","modified":1732155600175},{"_id":"source/_posts/Python常用語法.md","hash":"d409da061006a1511fefd92737ec74b99387ad13","modified":1732155600176},{"_id":"source/_posts/Python-Selenium-解決requests沒辦法解決的問題.md","hash":"8a751a1b2cfa55a17497f81583f35d2685f8214c","modified":1732155600176},{"_id":"source/_posts/Rider-Live-Templates.md","hash":"ca9f9ba09f06f832716933d0299e52837c9baaa8","modified":1732155600177},{"_id":"source/_posts/SQL-Server-Replication-發布資料庫失敗.md","hash":"907a13796ac311359ae77656ce5c5396e0e0a9cf","modified":1732155600181},{"_id":"source/_posts/StyleCop.md","hash":"c39a7b1b277507f17edb360758d0d101057fed65","modified":1732155600185},{"_id":"source/_posts/WPF-AutoComplete-textbox.md","hash":"c779b8591563f7c6070827c9c3228080171b4f5e","modified":1732155600191},{"_id":"source/_posts/WPF-Binding-Command.md","hash":"5cc1620918476c177e3f193ee61ebe29b9706d9a","modified":1732155600195},{"_id":"source/_posts/WPF-Chart.md","hash":"9c3a50275f90d86e3cf3de049f3e3019bbeab95c","modified":1732155600196},{"_id":"source/_posts/WPF-DataGrid.md","hash":"160776565ef3e49853e1a5454152826ba30f9932","modified":1732155600199},{"_id":"source/_posts/WPF-DataBinding.md","hash":"67e0a1051d080ed27401561544a3026f6afc8c7f","modified":1732155600198},{"_id":"source/_posts/WPF-DataGrid值發生改變時改變背景顏色.md","hash":"046d7fc8db27cce9dd65d50a3de638f09b01cf1c","modified":1732155600203},{"_id":"source/_posts/WPF-DataGrid中的元件Binding-Command失敗.md","hash":"542105beec22b4f968dc4d57e129949cb3e67146","modified":1732155600202},{"_id":"source/_posts/WPF-DataTemplate-ControlTemplate.md","hash":"e728ffec2749e82783d901e9f0aee122044a24a0","modified":1732155600203},{"_id":"source/_posts/WPF-Dockable.md","hash":"57cf5cea7887a292b44be76373610db4b6b1a482","modified":1732155600205},{"_id":"source/_posts/WPF-OnPropertyChanged不寫死參數PropertyName.md","hash":"55f1d9dada533072b9ff97dde97037aef2575122","modified":1732155600209},{"_id":"source/_posts/WPF-Property、Dependency-Property.md","hash":"b4d66a8cbecf9129a44c43172da718719593d2de","modified":1732155600209},{"_id":"source/_posts/WPF-MultiBinding.md","hash":"6e58217e211b8d3ece3ddf512d1ad8ec3192ad4d","modified":1732155600208},{"_id":"source/_posts/WPF-Storyboard.md","hash":"cfe6243354dc01f6ed72ea2d827f096576d4afea","modified":1732155600210},{"_id":"source/_posts/WPF-Trigger.md","hash":"15c9c2ad88e49148ecf6db71c418c7433e2633b8","modified":1732155600211},{"_id":"source/_posts/WPF-TextBox浮水印.md","hash":"0488731ecd4d4b8184c90608a56cac5232815736","modified":1732155600210},{"_id":"source/_posts/WPF-元件Resource.md","hash":"2d03f65454f49ccea8c845d20789afb2203f55a1","modified":1732155600212},{"_id":"source/_posts/WPF-套用Metro樣式.md","hash":"ba37006bb6cf843027b1935e0650bec461e7b4e1","modified":1732155600212},{"_id":"source/_posts/WPF-漸層背景顏色.md","hash":"d9184af4f9c007b2cbcb7c361ffa50c16118f196","modified":1732155600215},{"_id":"source/_posts/WPF-綁定自訂元件屬性.md","hash":"f14e160e0b81ac63e47998574d134591bb85a846","modified":1732155600215},{"_id":"source/_posts/hexo-theme-beantech.md","hash":"e4c59603efc406df786d5dd9f48c0c26b43fd034","modified":1732155600216},{"_id":"source/_posts/WPF-引動過程的目標傳回例外狀況.md","hash":"a0d23e10dc87c9ec556621d99dea75d9f2d36db9","modified":1732155600214},{"_id":"source/_posts/jenkins自動部屬WPF.md","hash":"2c7d58cbf0e0a18eaa5c3cd62e1c9709899ffd41","modified":1732155600228},{"_id":"source/_posts/net-framework-注入依賴.md","hash":"49e7268b01945e8ace56516d4d8fce926916cf9d","modified":1732155600242},{"_id":"source/_posts/npm-windows安裝套件、執行.md","hash":"d5dd03e8c51d1a2ce06df5e2234d4158da51b7e6","modified":1732587897387},{"_id":"source/_posts/yolo.md","hash":"d79524c7d54630e3cbae038fa8cb2e448de7bd32","modified":1732155600250},{"_id":"source/_posts/使用HierarchicalDataTemplate讓TreeView自動長整棵樹.md","hash":"9a7ad32a7dfbaa8b04d0d30623f1cb3dbd7d118d","modified":1732155600250},{"_id":"source/_posts/visual-studio-2019-測試涵蓋率工具-Fine-Code-Coverage.md","hash":"12d6f12b345d4df09f62bace4d1836e1c3151edf","modified":1732155600244},{"_id":"source/_posts/常用Git.md","hash":"c5410808915011d760f59ec891105b01432d8f47","modified":1732589380660},{"_id":"source/_posts/元件事件、委派、interactivity-Command-觸發順序.md","hash":"7fbf570c14ddf3fa3e5008ab40c3c1a55b0eaba6","modified":1732155600252},{"_id":"source/_posts/快速產生Python爬蟲程式碼.md","hash":"ff15b06b3f9f3dce55f1a2f0e5ebfe4ecf3fe035","modified":1732155600253},{"_id":"source/_posts/現金權益補償.md","hash":"ca048c60e99db7ba777cc623dadbe4c3bb6b2a1c","modified":1732155600254},{"_id":"source/_posts/用Sonarqube做靜態程式碼分析.md","hash":"4cf7b9a70359154917e681839f332ac0efff7724","modified":1732155600256},{"_id":"source/_posts/當沖券差.md","hash":"14acdbdbaa40b2a54a9c13bc1b55bc8b26264de9","modified":1732155600278},{"_id":"source/_posts/發布-Net-Core-Webapi到IIS.md","hash":"d91395829c186dee1391770fde3e1522402ca9ee","modified":1732155600280},{"_id":"source/_posts/資料結構.md","hash":"5baf30d66a82abfe5d1f7a6e8909cd5a69be6366","modified":1732155600286},{"_id":"source/_posts/透過Git-Hook，push時部屬程式-pre-push.md","hash":"c9f67e2f8e9a6ab49f2ef2c02774d8bb8d73a08e","modified":1732155600287},{"_id":"source/_posts/部屬-Net-Core-Webapi-到Linux.md","hash":"3e0b368914f38bef7997a2bf7a9edaf71ed7ea3b","modified":1732155600291},{"_id":"source/img/icon_wechat.png","hash":"a34f37dab4a65f5a4ad80537d18a6a3f3c9e015b","modified":1732155600359},{"_id":"source/img/icon_wechat_BACKUP.png","hash":"4188058026609de06c6cac88b349a2da831a1783","modified":1732155600360},{"_id":"source/img/ironman-draw.png","hash":"f02972d477485e619e222684b8b162d4d3af29c9","modified":1732155600361},{"_id":"source/tags/index.md","hash":"a4cdcade4001fdc71547462e0bd7feedee96038b","modified":1732155600368},{"_id":"themes/beantech/layout/404.ejs","hash":"c9b488d74c21fe9f35f642a5d19a138099ddf8a8","modified":1732155600375},{"_id":"themes/beantech/layout/archive.ejs","hash":"62781e8b0ce4de9c3db6042fedeaf13c26d138f8","modified":1732155600383},{"_id":"themes/beantech/layout/about.ejs","hash":"96c08fc3580b842ad9d8f37f2cdf02e6fa57d7bc","modified":1732155600382},{"_id":"themes/beantech/layout/keynote.ejs","hash":"e177b9e4a159f40b512f4ae1bfd928be4ab60840","modified":1732155600384},{"_id":"themes/beantech/layout/index.ejs","hash":"f293cefe4bf9f9c6848dff08b6dac4aeb7948892","modified":1732155600383},{"_id":"themes/beantech/layout/layout.ejs","hash":"389fc11a45676f94b77ebd2cb0d658a0358979c8","modified":1732155600384},{"_id":"themes/beantech/layout/post.ejs","hash":"5a408fd5d759e70dc95c23a993550cee7d1c6cd5","modified":1732155600385},{"_id":"themes/beantech/layout/tags.ejs","hash":"63911a99e6daf9968bfdd7d69f0d3d697039902e","modified":1732155600386},{"_id":"themes/beantech/layout/page.ejs","hash":"f7fc5282ad55131aa67dcde03c9189faa450a7c9","modified":1732155600385},{"_id":"themes/beantech/languages_to_be_added/de.yml","hash":"02a98ba2b93e30a00ae7979fbe90b767a27290f0","modified":1732155600370},{"_id":"themes/beantech/languages_to_be_added/default.yml","hash":"3cd0873b310cbf2fe022ee18d55a6113b347ea09","modified":1732155600371},{"_id":"themes/beantech/languages_to_be_added/en.yml","hash":"3cd0873b310cbf2fe022ee18d55a6113b347ea09","modified":1732155600372},{"_id":"themes/beantech/languages_to_be_added/no.yml","hash":"5ce3a1043ff85cecf83f3b5b0cdad2df44fa0192","modified":1732155600373},{"_id":"themes/beantech/languages_to_be_added/pl.yml","hash":"6dc5d1b2aa75ae4c527089a770f43bafb91d80f4","modified":1732155600373},{"_id":"themes/beantech/languages_to_be_added/ru.yml","hash":"2cfaf93704ea4ac3f374c69bab89ca31916faa33","modified":1732155600373},{"_id":"themes/beantech/languages_to_be_added/es.yml","hash":"fb089145368422ac47da9eb00fed05b15c904aa2","modified":1732155600372},{"_id":"themes/beantech/languages_to_be_added/zh-CN.yml","hash":"6d712d9eb6ba12213dcd76b532cd86e9da83cfa3","modified":1732155600374},{"_id":"themes/beantech/languages_to_be_added/zh-TW.yml","hash":"45c84384a05fdb7e32a3e2d498ea180be7dccfa9","modified":1732155600374},{"_id":"source/_posts/AppCenter/AddAppCenter.PNG","hash":"ee2a1181828b65f5093eba680ab04a4c65506d07","modified":1732155600148},{"_id":"source/_posts/AppCenter/Error.PNG","hash":"9d84cd363520de1fe68a9e32657c96134a73e6b8","modified":1732155600149},{"_id":"source/_posts/AppCenter/infomation.PNG","hash":"74f2b48e4edca9b332cecc2e8b45e6e53c139e15","modified":1732155600151},{"_id":"source/_posts/AppCenter/Nuget.PNG","hash":"542dec8489535126336cddfa7053ae562904f53a","modified":1732155600150},{"_id":"source/_posts/C-Dynamic-Linq/dynamicLinq.png","hash":"e6d30e7b0ed01c2573c331ed2889cfcbc0057528","modified":1732155600153},{"_id":"source/_posts/NUnit/NUnitAttrNewResult.PNG","hash":"ba1650b7497c743ce65fe31fca3e4d7294cbcace","modified":1732155600165},{"_id":"source/_posts/NUnit/Report.PNG","hash":"f8c6ec219209a87b98020ec2f8f5201e47e2662b","modified":1732155600166},{"_id":"source/_posts/NUnit/attribute.PNG","hash":"c1a44019f4dd8ac9d617ff1f44b40963fc3ce253","modified":1732155600166},{"_id":"source/_posts/NUnit/axoCover.PNG","hash":"2e790680ebd894045725e699dedcccf3e4721df9","modified":1732155600168},{"_id":"source/_posts/NUnit/axo.PNG","hash":"59baf2a9f7b5cb67f6f8b28ed29bafa5f39859fd","modified":1732155600167},{"_id":"source/_posts/NUnit/axoResult.PNG","hash":"6f3bec32c80ab90102954481d2651083c3820d33","modified":1732155600168},{"_id":"source/_posts/NUnit/cover.PNG","hash":"bdb718b6f8a2d8bf6cb73be332fc1d30401fbef0","modified":1732155600169},{"_id":"source/_posts/NUnit/nunitResult.PNG","hash":"fa3d1ed1cfa50d153b0f9dcaed432f486c05d8d7","modified":1732155600170},{"_id":"source/_posts/NUnit/testExplorer.PNG","hash":"3d56e40b90fc0dd8049158df3716c15ca9c743cd","modified":1732155600171},{"_id":"source/_posts/NUnit/nunittestadapter.PNG","hash":"df15c5486f05104dca7d8b27a4abf13b345dacac","modified":1732155600170},{"_id":"source/_posts/Powerful-Commit-Message/powerfulCommit.png","hash":"5d07cae5b6ad8eb7a4081cd841adc9ef290723af","modified":1732155600173},{"_id":"source/_posts/Powerful-Commit-Message/powerfulD.jpg","hash":"f02972d477485e619e222684b8b162d4d3af29c9","modified":1732155600174},{"_id":"source/_posts/SQL-Server-Replication-發布資料庫失敗/ReplicationQ.PNG","hash":"3df2d76398b1124cb2e52b0b6b185e05dcf85da8","modified":1732155600182},{"_id":"source/_posts/SQL-Server-Replication-發布資料庫失敗/ReplicationResult.PNG","hash":"787f74397c407a0faa78ac7f3ca1bb0e7b6d2d65","modified":1732155600183},{"_id":"source/_posts/SQL-Server-Replication-發布資料庫失敗/ReplicationSolution.PNG","hash":"ae2970b13916e1135e5fc6fd42f564eb352388e7","modified":1732155600184},{"_id":"source/_posts/Rider-Live-Templates/demo.png","hash":"0e5d3b450c42fbded29c872d24cb9ec83de0a3c7","modified":1732155600178},{"_id":"source/_posts/Rider-Live-Templates/show.png","hash":"5d8f1dcea2eab674ef463aa880cb589b30780dd2","modified":1732155600180},{"_id":"source/_posts/Rider-Live-Templates/setting.png","hash":"8b116d5199dfc28777bc32f6fe81ac5dde4b7c53","modified":1732155600179},{"_id":"source/_posts/StyleCop/extension.PNG","hash":"f56940b70a345e7625f12b275edc14e3129aebe8","modified":1732155600186},{"_id":"source/_posts/StyleCop/result.PNG","hash":"7b80604392cc72310c26a72198a572e8920c5dff","modified":1732155600188},{"_id":"source/_posts/StyleCop/result2.PNG","hash":"80a44c3bbf33667237b67fdf1d11f6cb41339d9c","modified":1732155600189},{"_id":"source/_posts/StyleCop/run.PNG","hash":"3e8c516be256812da5d6b1aba905a8140dba2101","modified":1732155600189},{"_id":"source/_posts/StyleCop/run2.PNG","hash":"d51d36a19e7c455cf572b044c1a684d97025aab9","modified":1732155600190},{"_id":"source/_posts/WPF-AutoComplete-textbox/AutoComplete2.png","hash":"cabacc8a379e3779b53d6778c016e47e5b6bb449","modified":1732155600194},{"_id":"source/_posts/WPF-AutoComplete-textbox/AutoNuget.png","hash":"e404b95843ef3131b5c355c7646cb45bf3ae4cd5","modified":1732155600195},{"_id":"source/_posts/WPF-DataGrid/DataGridNoHeader.PNG","hash":"e78b93b167aa68b98aef9921d1ceed911d3986b6","modified":1732155600200},{"_id":"source/_posts/WPF-DataGrid/DataGridSample.PNG","hash":"97b198ab2f6c021d27160898aa18e5e1ef10cbd5","modified":1732155600200},{"_id":"source/_posts/WPF-DataGrid/DataGridTemplateHeader.PNG","hash":"0b1d4acd9e81b0d55224120ffbb84ce6e6c04dbd","modified":1732155600201},{"_id":"source/_posts/WPF-Chart/result.PNG","hash":"eeaa2310d7be84e82b97782817dc58fdc8883960","modified":1732155600197},{"_id":"source/_posts/WPF-DataGrid/DataGridWithHeader.PNG","hash":"afb19b6e8c446388698f77ca4393ba5ea2d4fc10","modified":1732155600202},{"_id":"source/_posts/WPF-DataTemplate-ControlTemplate/DataResult.PNG","hash":"4e6d70aa652ff9e580bbadf3ac6ade27a1af9952","modified":1732155600204},{"_id":"source/_posts/WPF-DataTemplate-ControlTemplate/ControlTemplate.PNG","hash":"41b3ae38168897112b2ad0e914acc6128e417dfe","modified":1732155600204},{"_id":"source/_posts/WPF-Dockable/nuget.PNG","hash":"88749ff8d13e41288a3eb911ef0ee97b344971e0","modified":1732155600207},{"_id":"source/_posts/WPF-Dockable/result.PNG","hash":"ea1970068bdef1ffe4fa1d735e07c17bd71b259a","modified":1732155600208},{"_id":"source/_posts/WPF-TextBox浮水印/result.PNG","hash":"367240dce26a77f7156b756c860044c65ddec4c1","modified":1732155600211},{"_id":"source/_posts/WPF-套用Metro樣式/Mahapps.PNG","hash":"7b69f9864b9a1f9454df1c357bc6a7db3d967f2a","modified":1732155600213},{"_id":"source/_posts/git.png","hash":"ca24b69d6a73aeae7f75ebd836e4364a7c36e9b6","modified":1732589248529},{"_id":"source/_posts/jenkins自動部屬WPF/FTPError.png","hash":"3ca3eaf041c3aaca87912d02408870ac530af655","modified":1732155600229},{"_id":"source/_posts/jenkins自動部屬WPF/Step1.PNG","hash":"e56568c748f06c6fac1c9edbf762eef9052880d9","modified":1732155600229},{"_id":"source/_posts/jenkins自動部屬WPF/Step2.PNG","hash":"2baebf46da8126707a90afa7706a4d3d3c995270","modified":1732155600230},{"_id":"source/_posts/jenkins自動部屬WPF/Step3.PNG","hash":"95fb879a8e11c15d1000ed37d4238e78531bc175","modified":1732155600231},{"_id":"source/_posts/jenkins自動部屬WPF/Step4.PNG","hash":"30b2eab42713c52877f164aa2ebc8e0e1386ad42","modified":1732155600231},{"_id":"source/_posts/jenkins自動部屬WPF/Step5.PNG","hash":"6a8cb077ea27661d47fa04c42c1be3fbad120918","modified":1732155600232},{"_id":"source/_posts/jenkins自動部屬WPF/chkPID.PNG","hash":"9c465ea3dc079628df088dd0d5dc62fa50eeeab6","modified":1732155600232},{"_id":"source/_posts/jenkins自動部屬WPF/globalTool.PNG","hash":"83407db12eca41c3b224e4cebf9e0df26e435a3f","modified":1732155600234},{"_id":"source/_posts/jenkins自動部屬WPF/install.PNG","hash":"5b4dd8f0e18bc2d2ebc1b2fe7f1a332ac33f691b","modified":1732155600235},{"_id":"source/_posts/jenkins自動部屬WPF/localhost.PNG","hash":"31d69d6ff451fd271379875cdc83508b6f8d32eb","modified":1732155600236},{"_id":"source/_posts/jenkins自動部屬WPF/main.PNG","hash":"3b577440cd7e6d1940bf842220ecd35bd6523e5c","modified":1732155600236},{"_id":"source/_posts/jenkins自動部屬WPF/publish.PNG","hash":"719f789ddddcad0c80297de6d346b5ce3a391428","modified":1732155600240},{"_id":"source/_posts/jenkins自動部屬WPF/setGit.PNG","hash":"1074eb762d844bb4e0da2b17b3e3e8b11cfd2739","modified":1732155600241},{"_id":"source/_posts/jenkins自動部屬WPF/setMSBuild.PNG","hash":"e5b48fbb70ee400747397c8bba8912c235f744f1","modified":1732155600242},{"_id":"source/_posts/net-framework-注入依賴/ninject.PNG","hash":"37530f05aca1b762b0b6c201bd915101f92db591","modified":1732155600244},{"_id":"source/_posts/visual-studio-2019-測試涵蓋率工具-Fine-Code-Coverage/RESULT.PNG","hash":"39c85da6dcb478f8c52f24ce5c153d062c8f7aa3","modified":1732155600246},{"_id":"source/_posts/visual-studio-2019-測試涵蓋率工具-Fine-Code-Coverage/RUNTEST.PNG","hash":"4cb6b82b73d2814feb51879ba83bcc1d93acff57","modified":1732155600247},{"_id":"source/_posts/visual-studio-2019-測試涵蓋率工具-Fine-Code-Coverage/EXTENSION.PNG","hash":"8a55fae09e90783e2dea10d6aec50e3c99e968cf","modified":1732155600245},{"_id":"source/_posts/visual-studio-2019-測試涵蓋率工具-Fine-Code-Coverage/SOURCECODE.PNG","hash":"fc3505f6303a7887ff6ada6c184128ab2ef375a3","modified":1732155600248},{"_id":"source/_posts/visual-studio-2019-測試涵蓋率工具-Fine-Code-Coverage/TESTCODE.PNG","hash":"20774daa2012fde9981f6f56aa61608536894df7","modified":1732155600249},{"_id":"source/_posts/使用HierarchicalDataTemplate讓TreeView自動長整棵樹/Result.PNG","hash":"67ebb606b550e9f5342a995c71a603c6170db702","modified":1732155600251},{"_id":"source/_posts/現金權益補償/work.png","hash":"e1dcc4a7997a6ba05fb2815d99689a250c7abb71","modified":1732155600255},{"_id":"source/_posts/用Sonarqube做靜態程式碼分析/java18.PNG","hash":"aa6bdd42cd6ee2ec27b5e187f1dd6b4e2fb9046d","modified":1732155600263},{"_id":"source/_posts/用Sonarqube做靜態程式碼分析/run.PNG","hash":"21044c97b898d19fe3f5b976c51ffaf1c67beb9b","modified":1732155600268},{"_id":"source/_posts/發布-Net-Core-Webapi到IIS/r1.png","hash":"e17d35e3f26d30b457321fd033fe1e75a6002694","modified":1732155600280},{"_id":"source/_posts/發布-Net-Core-Webapi到IIS/r3.png","hash":"d5d2eaa838e9180055f6ae67b87e45410bb7a453","modified":1732155600282},{"_id":"source/_posts/發布-Net-Core-Webapi到IIS/r2.png","hash":"a23be030f5305b77549b129072832afa38cf1ba2","modified":1732155600281},{"_id":"source/_posts/發布-Net-Core-Webapi到IIS/r5.png","hash":"47fc53298a3b8f7a8101c665311160e300ab7132","modified":1732155600283},{"_id":"source/_posts/發布-Net-Core-Webapi到IIS/r6.png","hash":"71e95cc7e94eb0cb32ecd6eda563e781e005aad4","modified":1732155600284},{"_id":"source/_posts/發布-Net-Core-Webapi到IIS/r7.png","hash":"0f839c6855c0fdf20a919f885004944c96056eac","modified":1732155600285},{"_id":"source/_posts/發布-Net-Core-Webapi到IIS/r4.png","hash":"8c5e298bc27f318ed6dabfc6b6e109740a2b9bfe","modified":1732155600282},{"_id":"source/_posts/發布-Net-Core-Webapi到IIS/r8.png","hash":"c6b6e8d36fedb013a29654065bbaebf831a72248","modified":1732155600286},{"_id":"source/_posts/部屬-Net-Core-Webapi-到Linux/chmod777.PNG","hash":"42bcec7b173b2465868723a8836f8b09515166d3","modified":1732155600292},{"_id":"source/_posts/部屬-Net-Core-Webapi-到Linux/downlaod.PNG","hash":"3a365884ab81906f58c0ecc798dc5696c9a271d2","modified":1732155600293},{"_id":"source/_posts/部屬-Net-Core-Webapi-到Linux/run.PNG","hash":"12b385781a3c852741a82c9c814a5dbe38136868","modified":1732155600294},{"_id":"source/_posts/部屬-Net-Core-Webapi-到Linux/setPath.PNG","hash":"1f07a23866d514b9dfd53882950af1341713ebb8","modified":1732155600294},{"_id":"source/_posts/部屬-Net-Core-Webapi-到Linux/unzip.PNG","hash":"7e547ea2e894c74622559d08eaf71cf6839b5b90","modified":1732155600295},{"_id":"source/_posts/部屬-Net-Core-Webapi-到Linux/mkdir.PNG","hash":"e35a7dde49dc56da9e720068e68a86fc9ff8aeff","modified":1732155600293},{"_id":"source/img/404-bg.jpg","hash":"68f7d525269a94287e0ad18713ae232fb59dcf71","modified":1732155600300},{"_id":"source/img/signature/BeanTechSign-black.png","hash":"7bf103d0e82f0853e2eee553cba3a5cc82af19be","modified":1732155600361},{"_id":"source/img/signature/BeanTechSign-white.png","hash":"39335d6ce04f38d29c899b705251f93223cf11d5","modified":1732155600365},{"_id":"themes/beantech/layout/_partial/footer.ejs","hash":"2e46a57f965ae6f9c582145e4aa4cc082a40bb08","modified":1732155600376},{"_id":"themes/beantech/layout/_partial/head.ejs","hash":"183cd10329de2e999fcd42c56ebb3e105972e504","modified":1732155600376},{"_id":"themes/beantech/layout/_partial/header.ejs","hash":"9aea336d3907735eedabcfb21c286cd54a01f45f","modified":1732155600377},{"_id":"themes/beantech/layout/_partial/pagination.ejs","hash":"cd61e4dbbf6020ad094c8e66ec06e8c38ebcd122","modified":1732155600377},{"_id":"themes/beantech/layout/_partial/sidebar.ejs","hash":"bc7834dd769eeac94a76ffd9cfbb13a622861b62","modified":1732155600378},{"_id":"themes/beantech/layout/_partial/nav.ejs","hash":"e65bfec3d14a9eb9f1e09b592bb34023e6bf6e83","modified":1732155600377},{"_id":"themes/beantech/layout/_partial/toc.ejs","hash":"a765433a33b3613f4664de2da48d0c58f68f8cd6","modified":1732155600378},{"_id":"themes/beantech/layout/_widget/archive.ejs","hash":"ad9fb0073d40fe90bfe3a1e3246e0b07e12b3ecf","modified":1732155600379},{"_id":"themes/beantech/layout/_widget/category.ejs","hash":"c32e6fb8f3a07c5cbaffcebf93c357237c18b009","modified":1732155600379},{"_id":"themes/beantech/layout/_widget/friends-blog.ejs","hash":"b185fcffb0d181ddd9eb2259af38cf7d82fb2846","modified":1732155600380},{"_id":"themes/beantech/layout/_widget/recent-posts.ejs","hash":"814dd716083a8a75eb31f9d2d6ab28150b01c533","modified":1732155600381},{"_id":"themes/beantech/layout/_widget/featured-tags.ejs","hash":"e29431fa78c81d7c521bb1f7be356651fcde959c","modified":1732155600380},{"_id":"themes/beantech/layout/_widget/short-about.ejs","hash":"91288381dbd98f1c6b91d419094934ff59437021","modified":1732155600381},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.eot","hash":"86b6f62b7853e67d3e635f6512a5a5efc58ea3c3","modified":1732155600397},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.ttf","hash":"44bc1850f570972267b169ae18f1cb06b611ffa2","modified":1732155600399},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.woff2","hash":"ca35b697d99cae4d1b60f2d60fcd37771987eb07","modified":1732155600400},{"_id":"themes/beantech/source/css/archive.styl","hash":"bcb216ef65804c97b1a5dbe5f519fc171a13aaf1","modified":1732155600387},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.woff","hash":"278e49a86e634da6f2a02f3b47dd9d2a8f26210f","modified":1732155600399},{"_id":"themes/beantech/source/css/beantech.css","hash":"5e9bee0a553da83a3efd4e9bc975a0ebd13b1b7d","modified":1732155600388},{"_id":"themes/beantech/source/css/beantech.min.css","hash":"05a06230b1a9eca0b30cece54a397008cb77dc50","modified":1732155600388},{"_id":"themes/beantech/source/css/highlight.styl","hash":"831f8195f3577ba5bea374f2e24b90054d445055","modified":1732155600391},{"_id":"themes/beantech/source/css/hux-blog.min.css","hash":"1baef04de262aeb7023d835429b49a805ac4ab40","modified":1732155600392},{"_id":"themes/beantech/source/css/signature.styl","hash":"63ae8051f59d5e69544647cc4173eabc81d99aae","modified":1732155600395},{"_id":"themes/beantech/source/css/rocket.styl","hash":"0abbccdbcd6cce70e8a0bab7152c38adc0b708f1","modified":1732155600394},{"_id":"themes/beantech/source/css/widget.styl","hash":"f996466e299c68274145ba5afaca9b6d1dd83114","modified":1732155600396},{"_id":"themes/beantech/source/css/toc.styl","hash":"822aca17c885109452cc75a9aa384d9f3c07ea81","modified":1732155600395},{"_id":"themes/beantech/source/js/bootstrap.min.js","hash":"313da686ebbe387064f2d1899c64ea562b81eb40","modified":1732155600403},{"_id":"themes/beantech/source/js/hux-blog.js","hash":"3d3c93e42a9990b2a2e6df5a08e9816f9a221e0f","modified":1732155600404},{"_id":"themes/beantech/source/js/hux-blog.min.js","hash":"ee99af17a1a69ac8d85a695fed0349ba202789ae","modified":1732155600405},{"_id":"themes/beantech/source/js/jquery.nav.js","hash":"bc6383fa2aa8f437978cf044a3b6f10a65114398","modified":1732155600413},{"_id":"themes/beantech/source/js/jquery.tagcloud.js","hash":"448017ff32f75f444ed7985d10a21b3ad92ab100","modified":1732155600414},{"_id":"themes/beantech/source/js/toc.js","hash":"4ffe95b7755b035ee1b41664fa72b0ebea29c3f8","modified":1732155600415},{"_id":"themes/beantech/source/js/totop.js","hash":"f796b09b4f6177c3674a8c1542a8c92e8590cb5c","modified":1732155600416},{"_id":"source/_posts/WPF-AutoComplete-textbox/AutoComplete.png","hash":"a44d9ef69f4ba94c0bf611e8b46eb1ee84d24b9b","modified":1732155600193},{"_id":"source/_posts/WPF-Chart/result2.PNG","hash":"8ad5989781b8149b802c33404658d15a92216990","modified":1732155600198},{"_id":"source/_posts/WPF-Dockable/avalondock.png","hash":"c8ab813aa739389c92fa86510fe5a53fe8084ba1","modified":1732155600207},{"_id":"source/_posts/jenkins自動部屬WPF/chkService.PNG","hash":"0d7ed0d4982d0218d68b2de53721112c8016aa63","modified":1732155600233},{"_id":"source/_posts/jenkins自動部屬WPF/managePlugin.PNG","hash":"8ff4248196fbee270759cdd20dbcd5beff3001fd","modified":1732155600237},{"_id":"source/_posts/jenkins自動部屬WPF/new1.PNG","hash":"921573bcaee6d364241d73c231c319bd7faadd6a","modified":1732155600239},{"_id":"source/_posts/用Sonarqube做靜態程式碼分析/add.PNG","hash":"3aa7db17c3a211daee3067d8631a179dd5ad459d","modified":1732155600257},{"_id":"source/_posts/當沖券差/work.png","hash":"5954cf15b5d14a05ae6d390b1eb8164b00d02c1a","modified":1732155600279},{"_id":"source/_posts/部屬-Net-Core-Webapi-到Linux/upload.PNG","hash":"7f4683c246aa02577d6c672c9ca9cb78619e7e7c","modified":1732155600296},{"_id":"source/img/[backup]ironman-draw.png","hash":"7d6a06b4b544ab146c3b3e8474edc33f14ac6e4d","modified":1732155600304},{"_id":"source/img/Head.png","hash":"d2fd32aff626b786a5a67f84e3081d9b12ea0ee5","modified":1732155600301},{"_id":"source/img/header_img/Iron-Man-3.jpg","hash":"62a9a76854503c327990cc8d10de293ab6e9588f","modified":1732155600314},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.svg","hash":"4dcf0ab896f5417047f881de91bad10dcbda48c6","modified":1732155600398},{"_id":"themes/beantech/source/css/bootstrap.min.css","hash":"1818a346630e7133a1f194669f613f613fcfa97c","modified":1732155600391},{"_id":"themes/beantech/source/js/bootstrap.js","hash":"5d69034fb6eded2e5961ea54dd47129a88cd5182","modified":1732155600401},{"_id":"themes/beantech/source/js/jquery.min.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1732155600411},{"_id":"source/_posts/hexo-theme-beantech/home_posts_tag-false.png","hash":"86a3a4320012981f2d42eabc6ea172425f2f941a","modified":1732155600225},{"_id":"source/_posts/用Sonarqube做靜態程式碼分析/security.PNG","hash":"d59b7e2c1d7d302f0ca093bf5eb27c1132fd865a","modified":1732155600276},{"_id":"source/_posts/用Sonarqube做靜態程式碼分析/sonar.PNG","hash":"c5723abe466f9758e5c0deb0c12bbe5f4b9556da","modified":1732155600277},{"_id":"source/_posts/透過Git-Hook，push時部屬程式-pre-push/Line.png","hash":"c4210d07f8f1ff3d2b82e8ec9952a79df20e1f2b","modified":1732155600289},{"_id":"source/_posts/透過Git-Hook，push時部屬程式-pre-push/Mail.png","hash":"5ff4789a3e1aa35a412e526a84023545ca4e2d01","modified":1732155600291},{"_id":"source/img/contact-bg.jpg","hash":"6af63305c923899017e727b5ca968a2703bc08cf","modified":1732155600312},{"_id":"source/img/signature/BeanTechSign-white_BACK.png","hash":"34289ed41cf9ddac2d56be46fbb1515b7d5913cd","modified":1732155600366},{"_id":"themes/beantech/source/css/bootstrap.css","hash":"d1a24afac31222d70b4e001e0361ef045aa42043","modified":1732155600390},{"_id":"themes/beantech/source/css/images/ironman.png","hash":"2f0db0ab15d466c4065d9f6102fdf829726d9e3f","modified":1732155600393},{"_id":"themes/beantech/source/css/images/rocket.png","hash":"6dee0406955aa9b7a261161d30f2538a671e806b","modified":1732155600394},{"_id":"source/_posts/hexo-theme-beantech/home_posts_tag-true.png","hash":"a704520b43f26b88d650098f60689af3af5eb106","modified":1732155600227},{"_id":"source/_posts/用Sonarqube做靜態程式碼分析/issue.PNG","hash":"2c53942688323ca87fd8c37db15d51bbf748f54e","modified":1732155600259},{"_id":"source/_posts/用Sonarqube做靜態程式碼分析/login.PNG","hash":"a28e80238f615300a8164750e82d465970b429bc","modified":1732155600265},{"_id":"source/_posts/用Sonarqube做靜態程式碼分析/main.PNG","hash":"a43f69cc07de04da91a00c9229e2aa8f355e7ff9","modified":1732155600267},{"_id":"source/img/header_img/tf-logo-dark.png","hash":"5c7bf8ade9de134f8c77a3c59e575abe9fc6cdd4","modified":1732155600359},{"_id":"source/img/signature/BeanTechSign-black_BACK.png","hash":"94b7102e819fd6ee082d3fb0166f4de7458c22ff","modified":1732155600364},{"_id":"themes/beantech/source/js/jquery.js","hash":"4bb763dc96da604aed08ac024a1a3f5de73eea39","modified":1732155600407},{"_id":"source/img/header_img/home-bg-2-dark.png","hash":"bafbaaa78f3cdfe476a9ef675dfd7cb5a1b06a66","modified":1732155600352},{"_id":"source/img/header_img/tag-bg.jpg","hash":"5137ea4afba757abf20487c737993fc74a33505b","modified":1732155600357},{"_id":"source/img/header_img/home-bg-o.png","hash":"bafbaaa78f3cdfe476a9ef675dfd7cb5a1b06a66","modified":1732155600355},{"_id":"source/_posts/用Sonarqube做靜態程式碼分析/issue1.PNG","hash":"288f33d629ea679cae71ecde3cec332f3689c3f5","modified":1732155600262},{"_id":"source/_posts/用Sonarqube做靜態程式碼分析/running.PNG","hash":"f067aca59ad34f29f772026bb23acad911a7d7ae","modified":1732155600271},{"_id":"source/_posts/用Sonarqube做靜態程式碼分析/scanner.PNG","hash":"a3c4c089d36b71b85387b1e76398c8079eac587e","modified":1732155600274},{"_id":"source/img/beantech-desktop.png","hash":"4a8f8b209c9db8fd5209f15b8e4590525e258b0f","modified":1732155600310},{"_id":"source/img/header_img/[Backup]tag-bg.png","hash":"e83cd7b04ff85bcbc9bd3ebf5e57a55166e82568","modified":1732155600343},{"_id":"source/_posts/hexo-theme-beantech/Demo.png","hash":"d9fa12f1e40924a0db57761d09d52dce450b4f7b","modified":1732155600223},{"_id":"source/img/header_img/archive-bg.png","hash":"af15aadb0738370d2ab8e166ee519377a41db99f","modified":1732155600350},{"_id":"source/img/header_img/[Backup]home-bg-o.png","hash":"134ece4cb4c49c7ca1403a5afe7f46d0e2f9ecbb","modified":1732155600338},{"_id":"source/img/header_img/[Backup]home-bg-2-dark.png","hash":"da6a3d5ca787bdc25e69655abd879b4f821aeb30","modified":1732155600330},{"_id":"source/img/header_img/[Backup]archive-bg.png","hash":"6bf9c224543ec54e250309db89cbdf46e0c4b5ba","modified":1732155600322}],"Category":[{"name":"uncategorized","_id":"cm3xvfy750006ewi9brm94co1"}],"Data":[],"Page":[{"layout":"404","description":"你來到了沒有知識的荒野","header-img":"img/404-bg.jpg","_content":"","source":"404.md","raw":"---\nlayout: 404\ndescription: \"你來到了沒有知識的荒野\"\nheader-img: \"img/404-bg.jpg\"\n---\n","date":"2024-11-21T02:20:00.142Z","updated":"2024-11-21T02:20:00.142Z","path":"404.html","title":"","comments":1,"_id":"cm3xvfy630000ewi9cjlw873n","content":"","site":{"data":{}},"excerpt":"","more":""},{"_content":"google-site-verification: google9fbfe2a92e19226d.html","source":"google9fbfe2a92e19226d.html","raw":"google-site-verification: google9fbfe2a92e19226d.html","date":"2024-11-21T02:20:00.298Z","updated":"2024-11-21T02:20:00.298Z","path":"google9fbfe2a92e19226d.html","title":"","comments":1,"layout":"page","_id":"cm3xvfy6g0001ewi98fobmoco","content":"google-site-verification: google9fbfe2a92e19226d.html","site":{"data":{}},"excerpt":"","more":"google-site-verification: google9fbfe2a92e19226d.html"},{"layout":"archive","title":"Archives","header-img":"img/header_img/archive-bg.png","comments":0,"date":"2017-03-20T12:49:56.000Z","description":"Hey, this is archives","_content":"","source":"archive/index.md","raw":"---\nlayout: \"archive\"\ntitle: \"Archives\"\nheader-img: \"img/header_img/archive-bg.png\"\ncomments: false\ndate: 2017-03-20 20:49:56\ndescription: \"Hey, this is archives\"\n---\n","updated":"2024-11-21T02:20:00.298Z","path":"archive/index.html","_id":"cm3xvfy6z0002ewi907md7739","content":"","site":{"data":{}},"excerpt":"","more":""},{"layout":"about","title":"About","date":"2016-04-20T20:48:33.000Z","description":"Wish for the Best, Prepare for the Worst","header-img":"img/header_img/Iron-Man-3.jpg","comments":1,"_content":"\n> 光有好奇心而不去實踐，等於自願放棄成功機會\n> 別為自己畫地自限，Just Do It！！\n","source":"about/index.md","raw":"---\nlayout: \"about\"\ntitle: \"About\"\ndate: 2016-04-21 04:48:33\ndescription: \"Wish for the Best, Prepare for the Worst\"\nheader-img: \"img/header_img/Iron-Man-3.jpg\"\ncomments: true\n---\n\n> 光有好奇心而不去實踐，等於自願放棄成功機會\n> 別為自己畫地自限，Just Do It！！\n","updated":"2024-11-21T02:20:00.297Z","path":"about/index.html","_id":"cm3xvfy730004ewi9niiurx3n","content":"<blockquote>\n<p>光有好奇心而不去實踐，等於自願放棄成功機會<br>\n別為自己畫地自限，Just Do It！！</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>光有好奇心而不去實踐，等於自願放棄成功機會<br>\n別為自己畫地自限，Just Do It！！</p>\n</blockquote>\n"},{"layout":"tags","title":"Tags","description":"Hey, this is Tags.","header-img":"img/header_img/tag-bg.png","_content":"","source":"tags/index.md","raw":"---\nlayout: \"tags\"\ntitle: \"Tags\"\ndescription: \"Hey, this is Tags.\"\nheader-img: \"img/header_img/tag-bg.png\"\n---\n","date":"2024-11-21T02:20:00.368Z","updated":"2024-11-21T02:20:00.368Z","path":"tags/index.html","comments":1,"_id":"cm3xvfyak0090ewi9wmx29yj5","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"AppCenter","catalog":true,"abbrlink":"99460de0","date":"2020-07-02T12:25:17.000Z","subtitle":null,"header-img":null,"_content":"\n## nuget安裝套件\n```\nMicrosoft.AppCenter\nMicrosoft.AppCenter.Analytics\nMicrosoft.AppCenter.Crashes\n```\n![AppCenter](Nuget.PNG)\n\n## AppCenter中建立應用程式\n建立完會拿到一組Key 長得像這樣 007e393d-9250-4bfa-aaaa-cccc0000oooo\n\n[AppCenter](https://appcenter.ms/apps/create)\n![AppCenter](AddAppCenter.PNG)\n\n\n## App.xaml加入AppCenter程式碼\n```csharp\nusing System.Windows;\nusing Microsoft.AppCenter;\nusing Microsoft.AppCenter.Analytics;\nusing Microsoft.AppCenter.Crashes;\n\nnamespace DataGridDemo\n{\n    /// <summary>\n    /// App.xaml 的互動邏輯\n    /// </summary>\n    public partial class App : Application\n    {\n        protected override void OnStartup(StartupEventArgs e)\n        {\n            base.OnStartup(e);\n            AppCenter.Start(\"{key}\", typeof(Analytics), typeof(Crashes));\n        }\n    }\n}\n\n```\n    \n## 可以幹嘛\n可以知道使用者相關資訊(地區、作業系統)還有程式Crash的相關資訊\n![AppCenter](Error.PNG)\n![AppCenter](infomation.PNG)","source":"_posts/AppCenter.md","raw":"---\ntitle: AppCenter\ncatalog: true\ntags:\n  - C#\n  - WPF\n  - AppCenter\nabbrlink: 99460de0\ncategories: uncategorized\ndate: 2020-07-02 20:25:17\nsubtitle:\nheader-img:\n---\n\n## nuget安裝套件\n```\nMicrosoft.AppCenter\nMicrosoft.AppCenter.Analytics\nMicrosoft.AppCenter.Crashes\n```\n![AppCenter](Nuget.PNG)\n\n## AppCenter中建立應用程式\n建立完會拿到一組Key 長得像這樣 007e393d-9250-4bfa-aaaa-cccc0000oooo\n\n[AppCenter](https://appcenter.ms/apps/create)\n![AppCenter](AddAppCenter.PNG)\n\n\n## App.xaml加入AppCenter程式碼\n```csharp\nusing System.Windows;\nusing Microsoft.AppCenter;\nusing Microsoft.AppCenter.Analytics;\nusing Microsoft.AppCenter.Crashes;\n\nnamespace DataGridDemo\n{\n    /// <summary>\n    /// App.xaml 的互動邏輯\n    /// </summary>\n    public partial class App : Application\n    {\n        protected override void OnStartup(StartupEventArgs e)\n        {\n            base.OnStartup(e);\n            AppCenter.Start(\"{key}\", typeof(Analytics), typeof(Crashes));\n        }\n    }\n}\n\n```\n    \n## 可以幹嘛\n可以知道使用者相關資訊(地區、作業系統)還有程式Crash的相關資訊\n![AppCenter](Error.PNG)\n![AppCenter](infomation.PNG)","slug":"AppCenter","published":1,"updated":"2024-11-21T02:20:00.146Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cm3xvfy6z0003ewi99qu8na82","content":"<h2><span id=\"nuget安裝套件\">nuget安裝套件</span></h2>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">Microsoft</span><span class=\"selector-class\">.AppCenter</span></span><br><span class=\"line\"><span class=\"selector-tag\">Microsoft</span><span class=\"selector-class\">.AppCenter</span><span class=\"selector-class\">.Analytics</span></span><br><span class=\"line\"><span class=\"selector-tag\">Microsoft</span><span class=\"selector-class\">.AppCenter</span><span class=\"selector-class\">.Crashes</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"Nuget.PNG\" alt=\"AppCenter\"></p>\n<h2><span id=\"appcenter中建立應用程式\">AppCenter中建立應用程式</span></h2>\n<p>建立完會拿到一組Key 長得像這樣 007e393d-9250-4bfa-aaaa-cccc0000oooo</p>\n<p><a href=\"https://appcenter.ms/apps/create\" target=\"_blank\" rel=\"noopener\">AppCenter</a><br>\n<img src=\"AddAppCenter.PNG\" alt=\"AppCenter\"></p>\n<h2><span id=\"appxaml加入appcenter程式碼\">App.xaml加入AppCenter程式碼</span></h2>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.Windows;</span><br><span class=\"line\"><span class=\"keyword\">using</span> Microsoft.AppCenter;</span><br><span class=\"line\"><span class=\"keyword\">using</span> Microsoft.AppCenter.Analytics;</span><br><span class=\"line\"><span class=\"keyword\">using</span> Microsoft.AppCenter.Crashes;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">DataGridDemo</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> App.xaml 的互動邏輯</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">partial</span> <span class=\"keyword\">class</span> <span class=\"title\">App</span> : <span class=\"title\">Application</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">override</span> <span class=\"keyword\">void</span> <span class=\"title\">OnStartup</span>(<span class=\"params\">StartupEventArgs e</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">base</span>.OnStartup(e);</span><br><span class=\"line\">            AppCenter.Start(<span class=\"string\">\"&#123;key&#125;\"</span>, <span class=\"keyword\">typeof</span>(Analytics), <span class=\"keyword\">typeof</span>(Crashes));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2><span id=\"可以幹嘛\">可以幹嘛</span></h2>\n<p>可以知道使用者相關資訊(地區、作業系統)還有程式Crash的相關資訊<br>\n<img src=\"Error.PNG\" alt=\"AppCenter\"><br>\n<img src=\"infomation.PNG\" alt=\"AppCenter\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h2>nuget安裝套件</h2>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">Microsoft</span><span class=\"selector-class\">.AppCenter</span></span><br><span class=\"line\"><span class=\"selector-tag\">Microsoft</span><span class=\"selector-class\">.AppCenter</span><span class=\"selector-class\">.Analytics</span></span><br><span class=\"line\"><span class=\"selector-tag\">Microsoft</span><span class=\"selector-class\">.AppCenter</span><span class=\"selector-class\">.Crashes</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"Nuget.PNG\" alt=\"AppCenter\"></p>\n<h2>AppCenter中建立應用程式</h2>\n<p>建立完會拿到一組Key 長得像這樣 007e393d-9250-4bfa-aaaa-cccc0000oooo</p>\n<p><a href=\"https://appcenter.ms/apps/create\" target=\"_blank\" rel=\"noopener\">AppCenter</a><br>\n<img src=\"AddAppCenter.PNG\" alt=\"AppCenter\"></p>\n<h2>App.xaml加入AppCenter程式碼</h2>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.Windows;</span><br><span class=\"line\"><span class=\"keyword\">using</span> Microsoft.AppCenter;</span><br><span class=\"line\"><span class=\"keyword\">using</span> Microsoft.AppCenter.Analytics;</span><br><span class=\"line\"><span class=\"keyword\">using</span> Microsoft.AppCenter.Crashes;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">DataGridDemo</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> App.xaml 的互動邏輯</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">partial</span> <span class=\"keyword\">class</span> <span class=\"title\">App</span> : <span class=\"title\">Application</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">override</span> <span class=\"keyword\">void</span> <span class=\"title\">OnStartup</span>(<span class=\"params\">StartupEventArgs e</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">base</span>.OnStartup(e);</span><br><span class=\"line\">            AppCenter.Start(<span class=\"string\">\"&#123;key&#125;\"</span>, <span class=\"keyword\">typeof</span>(Analytics), <span class=\"keyword\">typeof</span>(Crashes));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2>可以幹嘛</h2>\n<p>可以知道使用者相關資訊(地區、作業系統)還有程式Crash的相關資訊<br>\n<img src=\"Error.PNG\" alt=\"AppCenter\"><br>\n<img src=\"infomation.PNG\" alt=\"AppCenter\"></p>\n"},{"title":"C# Dynamic Linq","catalog":true,"comments":1,"abbrlink":60785,"date":"2022-09-07T07:54:42.000Z","_content":"## Dynamic Linq\n### 要用到的情境\n我們常常用Linq去做篩選資料或是加總資料的動作\n```csharp\nList<className> list = new List<className>();\nlist.where(x=>x.FieldA == \"\" && x.FieldB > 123);\n```\n但是有些情況linq裡面的敘述不能寫死，必須要是動態的，如果在有需要的時候可能就要一次把所有欄位都寫上去，再做判斷，如果欄位很多的時候就會很痛苦....\n\n### 安裝套件\n![Install](dynamicLinq.png)\n\n### 如何使用\n```csharp\nstring linqQuery = \"FieldA in ('1', '2', '3') and FieldB > 10\"\nList<className> list = new List<className>();\nvar result = list.AsQueryable().Where(LinqQuery);\n```\n[更多DynamicLinq用法](https://dynamic-linq.net/) \n","source":"_posts/C-Dynamic-Linq.md","raw":"---\ntitle: C# Dynamic Linq\ncatalog: true\ncomments: true\ntags:\n  - C#\nabbrlink: 60785\ncategories: uncategorized\ndate: 2022-09-07 15:54:42\n---\n## Dynamic Linq\n### 要用到的情境\n我們常常用Linq去做篩選資料或是加總資料的動作\n```csharp\nList<className> list = new List<className>();\nlist.where(x=>x.FieldA == \"\" && x.FieldB > 123);\n```\n但是有些情況linq裡面的敘述不能寫死，必須要是動態的，如果在有需要的時候可能就要一次把所有欄位都寫上去，再做判斷，如果欄位很多的時候就會很痛苦....\n\n### 安裝套件\n![Install](dynamicLinq.png)\n\n### 如何使用\n```csharp\nstring linqQuery = \"FieldA in ('1', '2', '3') and FieldB > 10\"\nList<className> list = new List<className>();\nvar result = list.AsQueryable().Where(LinqQuery);\n```\n[更多DynamicLinq用法](https://dynamic-linq.net/) \n","slug":"C-Dynamic-Linq","published":1,"updated":"2024-11-21T02:20:00.152Z","layout":"post","photos":[],"link":"","_id":"cm3xvfy730005ewi97jobbms8","content":"<h2><span id=\"dynamic-linq\">Dynamic Linq</span></h2>\n<h3><span id=\"要用到的情境\">要用到的情境</span></h3>\n<p>我們常常用Linq去做篩選資料或是加總資料的動作</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">List&lt;className&gt; list = <span class=\"keyword\">new</span> List&lt;className&gt;();</span><br><span class=\"line\">list.<span class=\"keyword\">where</span>(x=&gt;x.FieldA == <span class=\"string\">\"\"</span> &amp;&amp; x.FieldB &gt; <span class=\"number\">123</span>);</span><br></pre></td></tr></table></figure>\n<p>但是有些情況linq裡面的敘述不能寫死，必須要是動態的，如果在有需要的時候可能就要一次把所有欄位都寫上去，再做判斷，如果欄位很多的時候就會很痛苦…</p>\n<h3><span id=\"安裝套件\">安裝套件</span></h3>\n<p><img src=\"dynamicLinq.png\" alt=\"Install\"></p>\n<h3><span id=\"如何使用\">如何使用</span></h3>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">string</span> linqQuery = <span class=\"string\">\"FieldA in ('1', '2', '3') and FieldB &gt; 10\"</span></span><br><span class=\"line\">List&lt;className&gt; list = <span class=\"keyword\">new</span> List&lt;className&gt;();</span><br><span class=\"line\"><span class=\"keyword\">var</span> result = list.AsQueryable().Where(LinqQuery);</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://dynamic-linq.net/\" target=\"_blank\" rel=\"noopener\">更多DynamicLinq用法</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2>Dynamic Linq</h2>\n<h3>要用到的情境</h3>\n<p>我們常常用Linq去做篩選資料或是加總資料的動作</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">List&lt;className&gt; list = <span class=\"keyword\">new</span> List&lt;className&gt;();</span><br><span class=\"line\">list.<span class=\"keyword\">where</span>(x=&gt;x.FieldA == <span class=\"string\">\"\"</span> &amp;&amp; x.FieldB &gt; <span class=\"number\">123</span>);</span><br></pre></td></tr></table></figure>\n<p>但是有些情況linq裡面的敘述不能寫死，必須要是動態的，如果在有需要的時候可能就要一次把所有欄位都寫上去，再做判斷，如果欄位很多的時候就會很痛苦…</p>\n<h3>安裝套件</h3>\n<p><img src=\"dynamicLinq.png\" alt=\"Install\"></p>\n<h3>如何使用</h3>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">string</span> linqQuery = <span class=\"string\">\"FieldA in ('1', '2', '3') and FieldB &gt; 10\"</span></span><br><span class=\"line\">List&lt;className&gt; list = <span class=\"keyword\">new</span> List&lt;className&gt;();</span><br><span class=\"line\"><span class=\"keyword\">var</span> result = list.AsQueryable().Where(LinqQuery);</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://dynamic-linq.net/\" target=\"_blank\" rel=\"noopener\">更多DynamicLinq用法</a></p>\n"},{"title":"C# Selenium不指定Chromedriver位置","catalog":true,"comments":1,"abbrlink":56496,"date":"2022-09-07T06:36:15.000Z","subtitle":null,"header-img":null,"_content":"\n### 一般在C#中使用Selenium\n一般我們要在C#中使用Selenium會從nuget上安裝Selenium.WebDriver這個套件\ncode會長這樣，在ChromeDriver裡指定ChromeDriver的路徑，如果Chrome更新的時候就要重新下載ChromeDriver到指定目錄下，很不方便\n```csharp\nvar chromeOptions = new ChromeOptions();\nchromeOptions.AddArguments(\"headless\");\nvar driver = new ChromeDriver(chromeOptions);\nvar loginUrl = \"https://emp.com/EIM/User/WallMain.aspx\";\ndriver.Navigate().GoToUrl(loginUrl);\n```\n\n### 更方便的方法\n其實只要再安裝 Selenium.WebDriver.ChromeDriver 就可以自動帶入對應版本的chromedriver","source":"_posts/C-Selenium不指定Chromedriver位置.md","raw":"---\ntitle: C# Selenium不指定Chromedriver位置\ncatalog: true\ncomments: true\ntags:\n  - C#\ncategories: uncategorized\nabbrlink: 56496\ndate: 2022-09-07 14:36:15\nsubtitle:\nheader-img:\n---\n\n### 一般在C#中使用Selenium\n一般我們要在C#中使用Selenium會從nuget上安裝Selenium.WebDriver這個套件\ncode會長這樣，在ChromeDriver裡指定ChromeDriver的路徑，如果Chrome更新的時候就要重新下載ChromeDriver到指定目錄下，很不方便\n```csharp\nvar chromeOptions = new ChromeOptions();\nchromeOptions.AddArguments(\"headless\");\nvar driver = new ChromeDriver(chromeOptions);\nvar loginUrl = \"https://emp.com/EIM/User/WallMain.aspx\";\ndriver.Navigate().GoToUrl(loginUrl);\n```\n\n### 更方便的方法\n其實只要再安裝 Selenium.WebDriver.ChromeDriver 就可以自動帶入對應版本的chromedriver","slug":"C-Selenium不指定Chromedriver位置","published":1,"updated":"2024-11-21T02:20:00.154Z","layout":"post","photos":[],"link":"","_id":"cm3xvfy770008ewi9lkw512qs","content":"<h3><span id=\"一般在c中使用selenium\">一般在C#中使用Selenium</span></h3>\n<p>一般我們要在C#中使用Selenium會從nuget上安裝Selenium.WebDriver這個套件<br>\ncode會長這樣，在ChromeDriver裡指定ChromeDriver的路徑，如果Chrome更新的時候就要重新下載ChromeDriver到指定目錄下，很不方便</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> chromeOptions = <span class=\"keyword\">new</span> ChromeOptions();</span><br><span class=\"line\">chromeOptions.AddArguments(<span class=\"string\">\"headless\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> driver = <span class=\"keyword\">new</span> ChromeDriver(chromeOptions);</span><br><span class=\"line\"><span class=\"keyword\">var</span> loginUrl = <span class=\"string\">\"https://emp.com/EIM/User/WallMain.aspx\"</span>;</span><br><span class=\"line\">driver.Navigate().GoToUrl(loginUrl);</span><br></pre></td></tr></table></figure>\n<h3><span id=\"更方便的方法\">更方便的方法</span></h3>\n<p>其實只要再安裝 Selenium.WebDriver.ChromeDriver 就可以自動帶入對應版本的chromedriver</p>\n","site":{"data":{}},"excerpt":"","more":"<h3>一般在C#中使用Selenium</h3>\n<p>一般我們要在C#中使用Selenium會從nuget上安裝Selenium.WebDriver這個套件<br>\ncode會長這樣，在ChromeDriver裡指定ChromeDriver的路徑，如果Chrome更新的時候就要重新下載ChromeDriver到指定目錄下，很不方便</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> chromeOptions = <span class=\"keyword\">new</span> ChromeOptions();</span><br><span class=\"line\">chromeOptions.AddArguments(<span class=\"string\">\"headless\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> driver = <span class=\"keyword\">new</span> ChromeDriver(chromeOptions);</span><br><span class=\"line\"><span class=\"keyword\">var</span> loginUrl = <span class=\"string\">\"https://emp.com/EIM/User/WallMain.aspx\"</span>;</span><br><span class=\"line\">driver.Navigate().GoToUrl(loginUrl);</span><br></pre></td></tr></table></figure>\n<h3>更方便的方法</h3>\n<p>其實只要再安裝 Selenium.WebDriver.ChromeDriver 就可以自動帶入對應版本的chromedriver</p>\n"},{"title":"Async/Await","catalog":true,"comments":1,"abbrlink":42023,"date":"2020-08-24T10:17:08.000Z","_content":"## Async、Await、Task\n\n```csharp\nstatic void Main(string[] args)\n{\n    TestService sv = new TestService();\n    sv.Function();\n    Console.WriteLine(\"done\");\n    Console.Read();\n}\n\n\npublic class TestService\n{\n    public TestService()\n    {\n        \n    }\n\n    public async Task Function()\n    {\n        Stopwatch st = new Stopwatch();\n        st.Start();\n        await Task.Delay(10000);\n        st.Stop();\n        Console.WriteLine(st.ElapsedMilliseconds/1000);\n    }\n}\n```\n\n## Task更新資料\n```csharp\nprivate async void CommonFlowClickCommandAction(object obj)\n{\n    await Task.Run(() => CommonFlow());\n}\n```","source":"_posts/Async-Await.md","raw":"---\ntitle: Async/Await\ncatalog: true\ncomments: true\ntags:\n  - C#\n  - async\n  - await\nabbrlink: 42023\ncategories: uncategorized\ndate: 2020-08-24 18:17:08\n---\n## Async、Await、Task\n\n```csharp\nstatic void Main(string[] args)\n{\n    TestService sv = new TestService();\n    sv.Function();\n    Console.WriteLine(\"done\");\n    Console.Read();\n}\n\n\npublic class TestService\n{\n    public TestService()\n    {\n        \n    }\n\n    public async Task Function()\n    {\n        Stopwatch st = new Stopwatch();\n        st.Start();\n        await Task.Delay(10000);\n        st.Stop();\n        Console.WriteLine(st.ElapsedMilliseconds/1000);\n    }\n}\n```\n\n## Task更新資料\n```csharp\nprivate async void CommonFlowClickCommandAction(object obj)\n{\n    await Task.Run(() => CommonFlow());\n}\n```","slug":"Async-Await","published":1,"updated":"2024-11-21T02:20:00.152Z","layout":"post","photos":[],"link":"","_id":"cm3xvfy790009ewi95y8gke83","content":"<h2><span id=\"async-await-task\">Async、Await、Task</span></h2>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    TestService sv = <span class=\"keyword\">new</span> TestService();</span><br><span class=\"line\">    sv.Function();</span><br><span class=\"line\">    Console.WriteLine(<span class=\"string\">\"done\"</span>);</span><br><span class=\"line\">    Console.Read();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">TestService</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">TestService</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">async</span> Task <span class=\"title\">Function</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        Stopwatch st = <span class=\"keyword\">new</span> Stopwatch();</span><br><span class=\"line\">        st.Start();</span><br><span class=\"line\">        <span class=\"keyword\">await</span> Task.Delay(<span class=\"number\">10000</span>);</span><br><span class=\"line\">        st.Stop();</span><br><span class=\"line\">        Console.WriteLine(st.ElapsedMilliseconds/<span class=\"number\">1000</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2><span id=\"task更新資料\">Task更新資料</span></h2>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">async</span> <span class=\"keyword\">void</span> <span class=\"title\">CommonFlowClickCommandAction</span>(<span class=\"params\"><span class=\"keyword\">object</span> obj</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">await</span> Task.Run(() =&gt; CommonFlow());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h2>Async、Await、Task</h2>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    TestService sv = <span class=\"keyword\">new</span> TestService();</span><br><span class=\"line\">    sv.Function();</span><br><span class=\"line\">    Console.WriteLine(<span class=\"string\">\"done\"</span>);</span><br><span class=\"line\">    Console.Read();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">TestService</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">TestService</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">async</span> Task <span class=\"title\">Function</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        Stopwatch st = <span class=\"keyword\">new</span> Stopwatch();</span><br><span class=\"line\">        st.Start();</span><br><span class=\"line\">        <span class=\"keyword\">await</span> Task.Delay(<span class=\"number\">10000</span>);</span><br><span class=\"line\">        st.Stop();</span><br><span class=\"line\">        Console.WriteLine(st.ElapsedMilliseconds/<span class=\"number\">1000</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2>Task更新資料</h2>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">async</span> <span class=\"keyword\">void</span> <span class=\"title\">CommonFlowClickCommandAction</span>(<span class=\"params\"><span class=\"keyword\">object</span> obj</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">await</span> Task.Run(() =&gt; CommonFlow());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"C# 自訂事件","catalog":true,"abbrlink":"21fa8ebb","date":"2020-07-02T10:17:17.000Z","subtitle":null,"header-img":null,"_content":"\n### C# 自訂事件\n##### 宣告\n```csharp\n//宣告委派\npublic delegate void TestEvent(object sender, EventArgs e);\n//宣告事件、委派類型\npublic event TestEvent OnEyesWatch();\n```\n##### 使用方法\n```csharp\n//調用事件\npublic void TestFunction()\n{\n\tOnEyesWatch?.Invoke(this, new EventArgs());\n}\n\n//委派事件\nclassName.OnEyesWatch+= xxxxxxx;\n```","source":"_posts/C-自訂事件.md","raw":"---\ntitle: C# 自訂事件\ncatalog: true\ntags:\n  - C#\nabbrlink: 21fa8ebb\ncategories: uncategorized\ndate: 2020-07-02 18:17:17\nsubtitle:\nheader-img:\n---\n\n### C# 自訂事件\n##### 宣告\n```csharp\n//宣告委派\npublic delegate void TestEvent(object sender, EventArgs e);\n//宣告事件、委派類型\npublic event TestEvent OnEyesWatch();\n```\n##### 使用方法\n```csharp\n//調用事件\npublic void TestFunction()\n{\n\tOnEyesWatch?.Invoke(this, new EventArgs());\n}\n\n//委派事件\nclassName.OnEyesWatch+= xxxxxxx;\n```","slug":"C-自訂事件","published":1,"updated":"2024-11-21T02:20:00.156Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cm3xvfy7a000aewi9pa2oidf8","content":"<h3><span id=\"c-自訂事件\">C# 自訂事件</span></h3>\n<h5><span id=\"宣告\">宣告</span></h5>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//宣告委派</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">delegate</span> <span class=\"keyword\">void</span> <span class=\"title\">TestEvent</span>(<span class=\"params\"><span class=\"keyword\">object</span> sender, EventArgs e</span>)</span>;</span><br><span class=\"line\"><span class=\"comment\">//宣告事件、委派類型</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">event</span> TestEvent <span class=\"title\">OnEyesWatch</span>(<span class=\"params\"></span>)</span>;</span><br></pre></td></tr></table></figure>\n<h5><span id=\"使用方法\">使用方法</span></h5>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//調用事件</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">TestFunction</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tOnEyesWatch?.Invoke(<span class=\"keyword\">this</span>, <span class=\"keyword\">new</span> EventArgs());</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//委派事件</span></span><br><span class=\"line\">className.OnEyesWatch+= xxxxxxx;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h3>C# 自訂事件</h3>\n<h5>宣告</h5>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//宣告委派</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">delegate</span> <span class=\"keyword\">void</span> <span class=\"title\">TestEvent</span>(<span class=\"params\"><span class=\"keyword\">object</span> sender, EventArgs e</span>)</span>;</span><br><span class=\"line\"><span class=\"comment\">//宣告事件、委派類型</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">event</span> TestEvent <span class=\"title\">OnEyesWatch</span>(<span class=\"params\"></span>)</span>;</span><br></pre></td></tr></table></figure>\n<h5>使用方法</h5>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//調用事件</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">TestFunction</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tOnEyesWatch?.Invoke(<span class=\"keyword\">this</span>, <span class=\"keyword\">new</span> EventArgs());</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//委派事件</span></span><br><span class=\"line\">className.OnEyesWatch+= xxxxxxx;</span><br></pre></td></tr></table></figure>"},{"title":"CentOS相關","catalog":true,"comments":1,"abbrlink":52241,"date":"2023-02-17T05:08:56.000Z","_content":"\n# CentOS常用指令\n## 安裝\n yum install 要裝的東西\n - 網路相關工具\n ```\n yum install net-tools\n ```\n - SSH Server\n ```\n yum install openssh openssh-server\n ```\n - SSH Client\n ```\n yum install openssh-clients\n ```\n ---\n\n## 安裝可能會遇到的問題\n### failed to download metadata for repo.....\n因為CentOS8已經沒有維護了，要換一個下載套件的位置\n```\nsed -i 's/mirrorlist/#mirrorlist/g' /etc/yum.repos.d/CentOS-*\nsed -i 's|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' /etc/yum.repos.d/CentOS-*\n```\n### Errors during downloading metadata for repository 'appstream'.....:\n更新SSL憑證\n``` \ncurl http://www.example.com/ca/cacert.pem -o /etc/pki/tls/certs/ca-bundle.crt\ncurl -v https://example.com\n```\n### Failed to download metadata for repo 'appstream': Cannot download repomd.xml: Curl error (77): Problem with the SSL CA cert (path? access rights?) for https://vault.centos.org/centos/8/AppStream/x86_64/os/repodata/repomd.xml .....\n關閉sslverify\n```\nvi /etc/yum.conf\n增加內容\nsslverify=false\n```\n### System has not been booted with systemd as init system (PID 1). Can't operate.Failed to connect to bus: Host is down\n1.系統尚未使用systemd作為初始化系統重新啟動系統，檢查systemd有沒有安裝(yum install systemd)\n2.如果訊息還是出現的話，切換初始化系統從舊的SysVinit到systemd\n```\nsystemctl enable systemd\n```\n\n---\n## 檢查目前已經裝的東西\nrpm -q 套件名稱\n```\nrpm -q openssh-server\n```\n---\n## 啟動服務\n- 啟動SSH SERVER\n```\nsystemctl start sshd\n```\n---\n## 開機啟動服務\n- 啟動SSH SERVER\n```\nsystemctl enable sshd\n```\n## 查目前IP\n```\nip a\nip r\n```\n## clear screen\n```\nctrl+L\n```\n## 列出目前有開的所有port\n```\n(需要安裝套件net-tools)yum install net-tools\nnetstat -tlnp\n```\n## 設定防火牆打開某個port\n```\nfirewall-cmd --permanent --zone=public --add-port=22/tcp\n```\n## SSH連線到某台機器\n```\nssh 帳號@ip\nssh root@123.456.789\n```\n## ping 某台機器確定是否可以連線\n```\nping ip\nping 123.456.789\n```\n## sudo command not found\n1.檢查sudoers.d是否存在\n```\nfind /etc/suders.d\n```\n如果不存在的話安裝sudo\n```\nyum install sudo\n```","source":"_posts/CentOS相關.md","raw":"---\ntitle: CentOS相關\ncatalog: true\ncomments: true\ntags: '-Linux -CentOS'\nabbrlink: 52241\ncategories: uncategorized\ndate: 2023-02-17 13:08:56\n---\n\n# CentOS常用指令\n## 安裝\n yum install 要裝的東西\n - 網路相關工具\n ```\n yum install net-tools\n ```\n - SSH Server\n ```\n yum install openssh openssh-server\n ```\n - SSH Client\n ```\n yum install openssh-clients\n ```\n ---\n\n## 安裝可能會遇到的問題\n### failed to download metadata for repo.....\n因為CentOS8已經沒有維護了，要換一個下載套件的位置\n```\nsed -i 's/mirrorlist/#mirrorlist/g' /etc/yum.repos.d/CentOS-*\nsed -i 's|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' /etc/yum.repos.d/CentOS-*\n```\n### Errors during downloading metadata for repository 'appstream'.....:\n更新SSL憑證\n``` \ncurl http://www.example.com/ca/cacert.pem -o /etc/pki/tls/certs/ca-bundle.crt\ncurl -v https://example.com\n```\n### Failed to download metadata for repo 'appstream': Cannot download repomd.xml: Curl error (77): Problem with the SSL CA cert (path? access rights?) for https://vault.centos.org/centos/8/AppStream/x86_64/os/repodata/repomd.xml .....\n關閉sslverify\n```\nvi /etc/yum.conf\n增加內容\nsslverify=false\n```\n### System has not been booted with systemd as init system (PID 1). Can't operate.Failed to connect to bus: Host is down\n1.系統尚未使用systemd作為初始化系統重新啟動系統，檢查systemd有沒有安裝(yum install systemd)\n2.如果訊息還是出現的話，切換初始化系統從舊的SysVinit到systemd\n```\nsystemctl enable systemd\n```\n\n---\n## 檢查目前已經裝的東西\nrpm -q 套件名稱\n```\nrpm -q openssh-server\n```\n---\n## 啟動服務\n- 啟動SSH SERVER\n```\nsystemctl start sshd\n```\n---\n## 開機啟動服務\n- 啟動SSH SERVER\n```\nsystemctl enable sshd\n```\n## 查目前IP\n```\nip a\nip r\n```\n## clear screen\n```\nctrl+L\n```\n## 列出目前有開的所有port\n```\n(需要安裝套件net-tools)yum install net-tools\nnetstat -tlnp\n```\n## 設定防火牆打開某個port\n```\nfirewall-cmd --permanent --zone=public --add-port=22/tcp\n```\n## SSH連線到某台機器\n```\nssh 帳號@ip\nssh root@123.456.789\n```\n## ping 某台機器確定是否可以連線\n```\nping ip\nping 123.456.789\n```\n## sudo command not found\n1.檢查sudoers.d是否存在\n```\nfind /etc/suders.d\n```\n如果不存在的話安裝sudo\n```\nyum install sudo\n```","slug":"CentOS相關","published":1,"updated":"2024-11-21T02:20:00.156Z","layout":"post","photos":[],"link":"","_id":"cm3xvfy7d000dewi9ppqyp0ry","content":"<h1><span id=\"centos常用指令\">CentOS常用指令</span></h1>\n<h2><span id=\"安裝\">安裝</span></h2>\n<p>yum install 要裝的東西</p>\n<ul>\n<li>網路相關工具</li>\n</ul>\n <figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum <span class=\"keyword\">install</span> net-tools</span><br></pre></td></tr></table></figure>\n<ul>\n<li>SSH Server</li>\n</ul>\n <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum <span class=\"keyword\">install</span> openssh openssh-<span class=\"keyword\">server</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>SSH Client</li>\n</ul>\n <figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum <span class=\"keyword\">install</span> openssh-clients</span><br></pre></td></tr></table></figure>\n<hr>\n<h2><span id=\"安裝可能會遇到的問題\">安裝可能會遇到的問題</span></h2>\n<h3><span id=\"failed-to-download-metadata-for-repo\">failed to download metadata for repo…</span></h3>\n<p>因為CentOS8已經沒有維護了，要換一個下載套件的位置</p>\n<figure class=\"highlight gherkin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed -i 's/mirrorlist/<span class=\"comment\">#mirrorlist/g' /etc/yum.repos.d/CentOS-*</span></span><br><span class=\"line\">sed -i 's|<span class=\"string\">#baseurl=http://mirror.centos.org</span>|<span class=\"string\">baseurl=http://vault.centos.org</span>|<span class=\"string\">g' /etc/yum.repos.d/CentOS-*</span></span><br></pre></td></tr></table></figure>\n<h3><span id=\"errors-during-downloading-metadata-for-repository-appstream\">Errors during downloading metadata for repository ‘appstream’…:</span></h3>\n<p>更新SSL憑證</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl http://www.example.<span class=\"keyword\">com</span>/<span class=\"keyword\">ca</span>/cacert.pem -<span class=\"keyword\">o</span> /etc/pki/tls/certs/<span class=\"keyword\">ca</span>-bundle.crt</span><br><span class=\"line\">curl -v http<span class=\"variable\">s:</span>//example.<span class=\"keyword\">com</span></span><br></pre></td></tr></table></figure>\n<h3><span id=\"failed-to-download-metadata-for-repo-appstream-cannot-download-repomdxml-curl-error-77-problem-with-the-ssl-ca-cert-path-access-rights-for-httpsvaultcentosorgcentos8appstreamx86_64osrepodatarepomdxml\">Failed to download metadata for repo ‘appstream’: Cannot download repomd.xml: Curl error (77): Problem with the SSL CA cert (path? access rights?) for  …</span></h3>\n<p>關閉sslverify</p>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi <span class=\"regexp\">/etc/yum</span>.conf</span><br><span class=\"line\">增加內容</span><br><span class=\"line\">sslverify=<span class=\"keyword\">false</span></span><br></pre></td></tr></table></figure>\n<h3><span id=\"system-has-not-been-booted-with-systemd-as-init-system-pid-1-cant-operatefailed-to-connect-to-bus-host-is-down\">System has not been booted with systemd as init system (PID 1). Can’t operate.Failed to connect to bus: Host is down</span></h3>\n<p>1.系統尚未使用systemd作為初始化系統重新啟動系統，檢查systemd有沒有安裝(yum install systemd)<br>\n2.如果訊息還是出現的話，切換初始化系統從舊的SysVinit到systemd</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl <span class=\"builtin-name\">enable</span> systemd</span><br></pre></td></tr></table></figure>\n<hr>\n<h2><span id=\"檢查目前已經裝的東西\">檢查目前已經裝的東西</span></h2>\n<p>rpm -q 套件名稱</p>\n<figure class=\"highlight axapta\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rpm -q openssh-<span class=\"keyword\">server</span></span><br></pre></td></tr></table></figure>\n<hr>\n<h2><span id=\"啟動服務\">啟動服務</span></h2>\n<ul>\n<li>啟動SSH SERVER</li>\n</ul>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl <span class=\"literal\">start</span> sshd</span><br></pre></td></tr></table></figure>\n<hr>\n<h2><span id=\"開機啟動服務\">開機啟動服務</span></h2>\n<ul>\n<li>啟動SSH SERVER</li>\n</ul>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl <span class=\"builtin-name\">enable</span> sshd</span><br></pre></td></tr></table></figure>\n<h2><span id=\"查目前ip\">查目前IP</span></h2>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ip a</span><br><span class=\"line\">ip r</span><br></pre></td></tr></table></figure>\n<h2><span id=\"clear-screen\">clear screen</span></h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ctrl+L</span><br></pre></td></tr></table></figure>\n<h2><span id=\"列出目前有開的所有port\">列出目前有開的所有port</span></h2>\n<figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(需要安裝套件<span class=\"built_in\">net</span>-tools)yum install <span class=\"built_in\">net</span>-tools</span><br><span class=\"line\">netstat -tlnp</span><br></pre></td></tr></table></figure>\n<h2><span id=\"設定防火牆打開某個port\">設定防火牆打開某個port</span></h2>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">firewall-cmd --permanent <span class=\"attribute\">--zone</span>=public <span class=\"attribute\">--add-port</span>=22/tcp</span><br></pre></td></tr></table></figure>\n<h2><span id=\"ssh連線到某台機器\">SSH連線到某台機器</span></h2>\n<figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh 帳號<span class=\"symbol\">@ip</span></span><br><span class=\"line\">ssh root<span class=\"symbol\">@123</span><span class=\"number\">.456</span><span class=\"number\">.789</span></span><br></pre></td></tr></table></figure>\n<h2><span id=\"ping-某台機器確定是否可以連線\">ping 某台機器確定是否可以連線</span></h2>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ping ip</span><br><span class=\"line\">ping 123.456.789</span><br></pre></td></tr></table></figure>\n<h2><span id=\"sudo-command-not-found\">sudo command not found</span></h2>\n<p>1.檢查sudoers.d是否存在</p>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">find</span> <span class=\"regexp\">/etc/</span>suders.d</span><br></pre></td></tr></table></figure>\n<p>如果不存在的話安裝sudo</p>\n<figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum <span class=\"keyword\">install</span> sudo</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1>CentOS常用指令</h1>\n<h2>安裝</h2>\n<p>yum install 要裝的東西</p>\n<ul>\n<li>網路相關工具</li>\n</ul>\n <figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum <span class=\"keyword\">install</span> net-tools</span><br></pre></td></tr></table></figure>\n<ul>\n<li>SSH Server</li>\n</ul>\n <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum <span class=\"keyword\">install</span> openssh openssh-<span class=\"keyword\">server</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>SSH Client</li>\n</ul>\n <figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum <span class=\"keyword\">install</span> openssh-clients</span><br></pre></td></tr></table></figure>\n<hr>\n<h2>安裝可能會遇到的問題</h2>\n<h3>failed to download metadata for repo…</h3>\n<p>因為CentOS8已經沒有維護了，要換一個下載套件的位置</p>\n<figure class=\"highlight gherkin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed -i 's/mirrorlist/<span class=\"comment\">#mirrorlist/g' /etc/yum.repos.d/CentOS-*</span></span><br><span class=\"line\">sed -i 's|<span class=\"string\">#baseurl=http://mirror.centos.org</span>|<span class=\"string\">baseurl=http://vault.centos.org</span>|<span class=\"string\">g' /etc/yum.repos.d/CentOS-*</span></span><br></pre></td></tr></table></figure>\n<h3>Errors during downloading metadata for repository ‘appstream’…:</h3>\n<p>更新SSL憑證</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl http://www.example.<span class=\"keyword\">com</span>/<span class=\"keyword\">ca</span>/cacert.pem -<span class=\"keyword\">o</span> /etc/pki/tls/certs/<span class=\"keyword\">ca</span>-bundle.crt</span><br><span class=\"line\">curl -v http<span class=\"variable\">s:</span>//example.<span class=\"keyword\">com</span></span><br></pre></td></tr></table></figure>\n<h3>Failed to download metadata for repo ‘appstream’: Cannot download repomd.xml: Curl error (77): Problem with the SSL CA cert (path? access rights?) for <a href=\"https://vault.centos.org/centos/8/AppStream/x86_64/os/repodata/repomd.xml\" target=\"_blank\" rel=\"noopener\">https://vault.centos.org/centos/8/AppStream/x86_64/os/repodata/repomd.xml</a> …</h3>\n<p>關閉sslverify</p>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi <span class=\"regexp\">/etc/yum</span>.conf</span><br><span class=\"line\">增加內容</span><br><span class=\"line\">sslverify=<span class=\"keyword\">false</span></span><br></pre></td></tr></table></figure>\n<h3>System has not been booted with systemd as init system (PID 1). Can’t operate.Failed to connect to bus: Host is down</h3>\n<p>1.系統尚未使用systemd作為初始化系統重新啟動系統，檢查systemd有沒有安裝(yum install systemd)<br>\n2.如果訊息還是出現的話，切換初始化系統從舊的SysVinit到systemd</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl <span class=\"builtin-name\">enable</span> systemd</span><br></pre></td></tr></table></figure>\n<hr>\n<h2>檢查目前已經裝的東西</h2>\n<p>rpm -q 套件名稱</p>\n<figure class=\"highlight axapta\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rpm -q openssh-<span class=\"keyword\">server</span></span><br></pre></td></tr></table></figure>\n<hr>\n<h2>啟動服務</h2>\n<ul>\n<li>啟動SSH SERVER</li>\n</ul>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl <span class=\"literal\">start</span> sshd</span><br></pre></td></tr></table></figure>\n<hr>\n<h2>開機啟動服務</h2>\n<ul>\n<li>啟動SSH SERVER</li>\n</ul>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl <span class=\"builtin-name\">enable</span> sshd</span><br></pre></td></tr></table></figure>\n<h2>查目前IP</h2>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ip a</span><br><span class=\"line\">ip r</span><br></pre></td></tr></table></figure>\n<h2>clear screen</h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ctrl+L</span><br></pre></td></tr></table></figure>\n<h2>列出目前有開的所有port</h2>\n<figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(需要安裝套件<span class=\"built_in\">net</span>-tools)yum install <span class=\"built_in\">net</span>-tools</span><br><span class=\"line\">netstat -tlnp</span><br></pre></td></tr></table></figure>\n<h2>設定防火牆打開某個port</h2>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">firewall-cmd --permanent <span class=\"attribute\">--zone</span>=public <span class=\"attribute\">--add-port</span>=22/tcp</span><br></pre></td></tr></table></figure>\n<h2>SSH連線到某台機器</h2>\n<figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh 帳號<span class=\"symbol\">@ip</span></span><br><span class=\"line\">ssh root<span class=\"symbol\">@123</span><span class=\"number\">.456</span><span class=\"number\">.789</span></span><br></pre></td></tr></table></figure>\n<h2>ping 某台機器確定是否可以連線</h2>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ping ip</span><br><span class=\"line\">ping 123.456.789</span><br></pre></td></tr></table></figure>\n<h2>sudo command not found</h2>\n<p>1.檢查sudoers.d是否存在</p>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">find</span> <span class=\"regexp\">/etc/</span>suders.d</span><br></pre></td></tr></table></figure>\n<p>如果不存在的話安裝sudo</p>\n<figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum <span class=\"keyword\">install</span> sudo</span><br></pre></td></tr></table></figure>"},{"title":"Command、dotnet","catalog":true,"abbrlink":"f90a7c66","date":"2020-07-02T12:20:45.000Z","subtitle":null,"header-img":null,"_content":"\n### .net core\n```batch\n:: 檢查是否安裝.net core\n\tdotnet\n:: 建立方案\n\tdotnet new sln -n 方案名稱\n:: 查看目前.net core 版本\n\tdotnet --version 方案名稱\n:: 列出所有SDK\n\tdotnet --list-sdks\n:: 切換SDK?\n\t不用切換他會自動用最新的\n```\n### command\n```batch\n:: 刪除檔案\n\tdel /f 檔案名稱\n:: 清除畫面\n\tcls\n```","source":"_posts/Command、dotnet.md","raw":"---\ntitle: Command、dotnet\ncatalog: true\ntags:\n  - C#\n  - .net core\n  - Command\nabbrlink: f90a7c66\ncategories: uncategorized\ndate: 2020-07-02 20:20:45\nsubtitle:\nheader-img:\n---\n\n### .net core\n```batch\n:: 檢查是否安裝.net core\n\tdotnet\n:: 建立方案\n\tdotnet new sln -n 方案名稱\n:: 查看目前.net core 版本\n\tdotnet --version 方案名稱\n:: 列出所有SDK\n\tdotnet --list-sdks\n:: 切換SDK?\n\t不用切換他會自動用最新的\n```\n### command\n```batch\n:: 刪除檔案\n\tdel /f 檔案名稱\n:: 清除畫面\n\tcls\n```","slug":"Command、dotnet","published":1,"updated":"2024-11-21T02:20:00.157Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cm3xvfy7e000fewi9rxxartnx","content":"<h3><span id=\"net-core\">.net core</span></h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:: 檢查是否安裝.net core</span><br><span class=\"line\">\tdotnet</span><br><span class=\"line\">:: 建立方案</span><br><span class=\"line\">\tdotnet new sln -n 方案名稱</span><br><span class=\"line\">:: 查看目前.net core 版本</span><br><span class=\"line\">\tdotnet --version 方案名稱</span><br><span class=\"line\">:: 列出所有SDK</span><br><span class=\"line\">\tdotnet --list-sdks</span><br><span class=\"line\">:: 切換SDK?</span><br><span class=\"line\">\t不用切換他會自動用最新的</span><br></pre></td></tr></table></figure>\n<h3><span id=\"command\">command</span></h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:: 刪除檔案</span><br><span class=\"line\">\tdel /f 檔案名稱</span><br><span class=\"line\">:: 清除畫面</span><br><span class=\"line\">\tcls</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h3>.net core</h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:: 檢查是否安裝.net core</span><br><span class=\"line\">\tdotnet</span><br><span class=\"line\">:: 建立方案</span><br><span class=\"line\">\tdotnet new sln -n 方案名稱</span><br><span class=\"line\">:: 查看目前.net core 版本</span><br><span class=\"line\">\tdotnet --version 方案名稱</span><br><span class=\"line\">:: 列出所有SDK</span><br><span class=\"line\">\tdotnet --list-sdks</span><br><span class=\"line\">:: 切換SDK?</span><br><span class=\"line\">\t不用切換他會自動用最新的</span><br></pre></td></tr></table></figure>\n<h3>command</h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:: 刪除檔案</span><br><span class=\"line\">\tdel /f 檔案名稱</span><br><span class=\"line\">:: 清除畫面</span><br><span class=\"line\">\tcls</span><br></pre></td></tr></table></figure>"},{"title":"DIP","catalog":true,"comments":1,"abbrlink":47479,"date":"2020-08-14T07:13:20.000Z","_content":"\n## 反轉依賴原則(Dependency Inversion Principle)\n### 解釋\n    High-level modules should not depend on low-level modules. Both should depend on abstractions.\n    Abstractions should not depend on details. Details should depend on abstractions.\n### 目的\n    解耦合\n### 範例\n\n```csharp\n//Program類別 依賴 SendMail類別\nclass Program\n{\n    static void Main(string[] args)\n    {\n        SendMail instance = new SendMail();\n        instance.Send();\n    }\n}\n\n\npublic class SendMail\n{\n    public string MailAddress { get; set; }\n    public string SMTPAccount { get; set; }\n    public string SMTPPassword { get; set; }\n\n    public bool Send()\n    {\n        try\n        {\n            //do something if success return true else return false\n            return true;\n        }\n        catch (Exception ie)\n        {\n            return false;\n        }\n    }\n}\n```\n這樣的結果我們主要的類別Program就對SendMail類別產生依賴，，高階模組(Caller) 依賴低階模組(Callee)<br>\nDIP原則說高階模組不應該依賴低階模組，應該要依賴抽象<br>\n所以我們修正一下寫法<br>\n為了讓Program執行寄信又要滿足依賴抽象，所以要先把SendMail類別中的方法跟屬性設計到介面中來實現這件事<br><br>\n介面\n```csharp\n//定義原SendMail類別中的屬性和方法\npublic interface ISendMail\n{\n    public string MailAddress { get; set; }\n    public string SMTPAccount { get; set; }\n    public string SMTPPassword { get; set; }\n    public bool Send();\n}\n```\n實做方法\n```csharp\n//SendMail類別繼承介面、實做方法\npublic class SendMail : ISendMail\n{\n    public string MailAddress { get; set; }\n    public string SMTPAccount { get; set; }\n    public string SMTPPassword { get; set; }\n    public bool Send()\n    {\n        return true;\n    }\n}\n```\n實際使用\n```csharp\nclass Program\n{\n    static void Main(string[] args)\n    {\n        /*SendMail instance = new SendMail();\n        instance.Send();*/\n        ISendMail instance = new SendMail();\n        instance.Send();\n    }\n}\n```\n\n### 單元測試\n原本的例子中send方法會實際去執行寄信，但在測試時不應該真的執行寄信，實際寄信算是整合測試的範圍<br>\n反而是要驗證寄信相關的邏輯是不是正確的，像是如果寄信失敗時要記錄失敗的原因<br>\n可是如果實際寄信又需要相關的設定(smtp service、帳號、密碼....)，用這樣的設計就可以寫mock、stub物件去模擬寄信這種類型的動作\n","source":"_posts/DIP.md","raw":"---\ntitle: DIP\ncatalog: true\ncomments: true\ntags:\n  - C#\n  - SOLID\nabbrlink: 47479\ncategories: uncategorized\ndate: 2020-08-14 15:13:20\n---\n\n## 反轉依賴原則(Dependency Inversion Principle)\n### 解釋\n    High-level modules should not depend on low-level modules. Both should depend on abstractions.\n    Abstractions should not depend on details. Details should depend on abstractions.\n### 目的\n    解耦合\n### 範例\n\n```csharp\n//Program類別 依賴 SendMail類別\nclass Program\n{\n    static void Main(string[] args)\n    {\n        SendMail instance = new SendMail();\n        instance.Send();\n    }\n}\n\n\npublic class SendMail\n{\n    public string MailAddress { get; set; }\n    public string SMTPAccount { get; set; }\n    public string SMTPPassword { get; set; }\n\n    public bool Send()\n    {\n        try\n        {\n            //do something if success return true else return false\n            return true;\n        }\n        catch (Exception ie)\n        {\n            return false;\n        }\n    }\n}\n```\n這樣的結果我們主要的類別Program就對SendMail類別產生依賴，，高階模組(Caller) 依賴低階模組(Callee)<br>\nDIP原則說高階模組不應該依賴低階模組，應該要依賴抽象<br>\n所以我們修正一下寫法<br>\n為了讓Program執行寄信又要滿足依賴抽象，所以要先把SendMail類別中的方法跟屬性設計到介面中來實現這件事<br><br>\n介面\n```csharp\n//定義原SendMail類別中的屬性和方法\npublic interface ISendMail\n{\n    public string MailAddress { get; set; }\n    public string SMTPAccount { get; set; }\n    public string SMTPPassword { get; set; }\n    public bool Send();\n}\n```\n實做方法\n```csharp\n//SendMail類別繼承介面、實做方法\npublic class SendMail : ISendMail\n{\n    public string MailAddress { get; set; }\n    public string SMTPAccount { get; set; }\n    public string SMTPPassword { get; set; }\n    public bool Send()\n    {\n        return true;\n    }\n}\n```\n實際使用\n```csharp\nclass Program\n{\n    static void Main(string[] args)\n    {\n        /*SendMail instance = new SendMail();\n        instance.Send();*/\n        ISendMail instance = new SendMail();\n        instance.Send();\n    }\n}\n```\n\n### 單元測試\n原本的例子中send方法會實際去執行寄信，但在測試時不應該真的執行寄信，實際寄信算是整合測試的範圍<br>\n反而是要驗證寄信相關的邏輯是不是正確的，像是如果寄信失敗時要記錄失敗的原因<br>\n可是如果實際寄信又需要相關的設定(smtp service、帳號、密碼....)，用這樣的設計就可以寫mock、stub物件去模擬寄信這種類型的動作\n","slug":"DIP","published":1,"updated":"2024-11-21T02:20:00.158Z","layout":"post","photos":[],"link":"","_id":"cm3xvfy7g000jewi91lsls3wn","content":"<h2><span id=\"反轉依賴原則dependency-inversion-principle\">反轉依賴原則(Dependency Inversion Principle)</span></h2>\n<h3><span id=\"解釋\">解釋</span></h3>\n<pre><code>High-level modules should not depend on low-level modules. Both should depend on abstractions.\nAbstractions should not depend on details. Details should depend on abstractions.\n</code></pre>\n<h3><span id=\"目的\">目的</span></h3>\n<pre><code>解耦合\n</code></pre>\n<h3><span id=\"範例\">範例</span></h3>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//Program類別 依賴 SendMail類別</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">Program</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        SendMail instance = <span class=\"keyword\">new</span> SendMail();</span><br><span class=\"line\">        instance.Send();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">SendMail</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> MailAddress &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> SMTPAccount &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> SMTPPassword &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">bool</span> <span class=\"title\">Send</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">//do something if success return true else return false</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">catch</span> (Exception ie)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>這樣的結果我們主要的類別Program就對SendMail類別產生依賴，，高階模組(Caller) 依賴低階模組(Callee)<br><br>\nDIP原則說高階模組不應該依賴低階模組，應該要依賴抽象<br><br>\n所以我們修正一下寫法<br><br>\n為了讓Program執行寄信又要滿足依賴抽象，所以要先把SendMail類別中的方法跟屬性設計到介面中來實現這件事<br><br><br>\n介面</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//定義原SendMail類別中的屬性和方法</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title\">ISendMail</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> MailAddress &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> SMTPAccount &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> SMTPPassword &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">bool</span> <span class=\"title\">Send</span>(<span class=\"params\"></span>)</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>實做方法</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//SendMail類別繼承介面、實做方法</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">SendMail</span> : <span class=\"title\">ISendMail</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> MailAddress &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> SMTPAccount &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> SMTPPassword &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">bool</span> <span class=\"title\">Send</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>實際使用</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">Program</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        <span class=\"comment\">/*SendMail instance = new SendMail();</span></span><br><span class=\"line\"><span class=\"comment\">        instance.Send();*/</span></span><br><span class=\"line\">        ISendMail instance = <span class=\"keyword\">new</span> SendMail();</span><br><span class=\"line\">        instance.Send();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3><span id=\"單元測試\">單元測試</span></h3>\n<p>原本的例子中send方法會實際去執行寄信，但在測試時不應該真的執行寄信，實際寄信算是整合測試的範圍<br><br>\n反而是要驗證寄信相關的邏輯是不是正確的，像是如果寄信失敗時要記錄失敗的原因<br><br>\n可是如果實際寄信又需要相關的設定(smtp service、帳號、密碼…)，用這樣的設計就可以寫mock、stub物件去模擬寄信這種類型的動作</p>\n","site":{"data":{}},"excerpt":"","more":"<h2>反轉依賴原則(Dependency Inversion Principle)</h2>\n<h3>解釋</h3>\n<pre><code>High-level modules should not depend on low-level modules. Both should depend on abstractions.\nAbstractions should not depend on details. Details should depend on abstractions.\n</code></pre>\n<h3>目的</h3>\n<pre><code>解耦合\n</code></pre>\n<h3>範例</h3>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//Program類別 依賴 SendMail類別</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">Program</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        SendMail instance = <span class=\"keyword\">new</span> SendMail();</span><br><span class=\"line\">        instance.Send();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">SendMail</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> MailAddress &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> SMTPAccount &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> SMTPPassword &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">bool</span> <span class=\"title\">Send</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">//do something if success return true else return false</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">catch</span> (Exception ie)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>這樣的結果我們主要的類別Program就對SendMail類別產生依賴，，高階模組(Caller) 依賴低階模組(Callee)<br><br>\nDIP原則說高階模組不應該依賴低階模組，應該要依賴抽象<br><br>\n所以我們修正一下寫法<br><br>\n為了讓Program執行寄信又要滿足依賴抽象，所以要先把SendMail類別中的方法跟屬性設計到介面中來實現這件事<br><br><br>\n介面</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//定義原SendMail類別中的屬性和方法</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title\">ISendMail</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> MailAddress &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> SMTPAccount &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> SMTPPassword &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">bool</span> <span class=\"title\">Send</span>(<span class=\"params\"></span>)</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>實做方法</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//SendMail類別繼承介面、實做方法</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">SendMail</span> : <span class=\"title\">ISendMail</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> MailAddress &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> SMTPAccount &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> SMTPPassword &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">bool</span> <span class=\"title\">Send</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>實際使用</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">Program</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        <span class=\"comment\">/*SendMail instance = new SendMail();</span></span><br><span class=\"line\"><span class=\"comment\">        instance.Send();*/</span></span><br><span class=\"line\">        ISendMail instance = <span class=\"keyword\">new</span> SendMail();</span><br><span class=\"line\">        instance.Send();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3>單元測試</h3>\n<p>原本的例子中send方法會實際去執行寄信，但在測試時不應該真的執行寄信，實際寄信算是整合測試的範圍<br><br>\n反而是要驗證寄信相關的邏輯是不是正確的，像是如果寄信失敗時要記錄失敗的原因<br><br>\n可是如果實際寄信又需要相關的設定(smtp service、帳號、密碼…)，用這樣的設計就可以寫mock、stub物件去模擬寄信這種類型的動作</p>\n"},{"title":"DomainKnowhow","catalog":true,"abbrlink":"4bfa41be","date":"2020-07-02T11:55:53.000Z","subtitle":null,"header-img":null,"_content":"\n\n### 1. 虧損報告\n##### 1-1 每日產生股票庫存資料\n     FA股票庫存 > 投管股票庫存\n##### 1-2 每日運算虧損報告資料\n    1-2-1. 虧損報告不能刪除、填寫後只能修改檢討的內容\n    1-2-2. 檢查七天內虧損報告是否執行完畢(有填寫)\n        買(day7)      交易資料中，有目前契約買進資料\n        賣(day7)      交易資料中，有目前契約賣出資料\n        出清(day 4~6) 庫存資料中沒有目前商品的庫存\n        持有(day7)    交易資料中，沒有目前契約買進或賣出的資料\n    1-2-3 30天內出清檢查\n        有出清 Status > Close\n    1-2-4 90天內如果有新虧損資料超過就虧損資料的下一個級距 > 新增資料\n    1-2-5 虧損值計算 (市值-成本)/成本\n\n    1-2-6 股票成本\n        成本(庫存股數*前日收盤價)\n        summery by 契約、結帳日、股票、券商\n    1-2-7 期貨成本 : 期貨只要交保證金，商品實際價值會超過保證金，所以還不知道怎麼算期貨虧損\n    1-2-8 債券成本\n        個別認定 每做一筆交易會產生一筆庫存\n        全部平均 每天買的平均，一天只會有一筆\n        summery by 債券標的、契約、結帳日\n    1-2-9 基金成本\n        個別認定 每做一筆交易會產生一筆庫存\n        全部平均 每天買的平均，一天只會有一筆\n        summery by 基金標的、契約、結帳日\n    1-2-10 定存成本 : 定存不會有虧損\n    1-2-11 票券(債券附買回) : 不用算虧損\n        成本:市值(到期值)\n***\n### 2.法規檢核\n- 決定書處理\n- 判斷是否在可投資範圍內\n- 庫存檢查\n- 統計餘額\n- 法規檢查\n- 內規檢查\n- 信用評等檢查\n***\n### 3.如何判斷除權日、除息日、除權息日\n- 除權日\n    盈餘現金股利 + 公積現金股利 > 0\n- 除息日\n    盈餘配股 + 資本公積配股 > 0\n- 除權息日\n    盈餘現金股利+公績現金股利 > 0  &&  盈餘配股+資本公積配股 > 0","source":"_posts/DomainKnowhow.md","raw":"---\ntitle: DomainKnowhow\ncatalog: true\ntags:\n  - knowhow\nabbrlink: 4bfa41be\ncategories: uncategorized\ndate: 2020-07-02 19:55:53\nsubtitle:\nheader-img:\n---\n\n\n### 1. 虧損報告\n##### 1-1 每日產生股票庫存資料\n     FA股票庫存 > 投管股票庫存\n##### 1-2 每日運算虧損報告資料\n    1-2-1. 虧損報告不能刪除、填寫後只能修改檢討的內容\n    1-2-2. 檢查七天內虧損報告是否執行完畢(有填寫)\n        買(day7)      交易資料中，有目前契約買進資料\n        賣(day7)      交易資料中，有目前契約賣出資料\n        出清(day 4~6) 庫存資料中沒有目前商品的庫存\n        持有(day7)    交易資料中，沒有目前契約買進或賣出的資料\n    1-2-3 30天內出清檢查\n        有出清 Status > Close\n    1-2-4 90天內如果有新虧損資料超過就虧損資料的下一個級距 > 新增資料\n    1-2-5 虧損值計算 (市值-成本)/成本\n\n    1-2-6 股票成本\n        成本(庫存股數*前日收盤價)\n        summery by 契約、結帳日、股票、券商\n    1-2-7 期貨成本 : 期貨只要交保證金，商品實際價值會超過保證金，所以還不知道怎麼算期貨虧損\n    1-2-8 債券成本\n        個別認定 每做一筆交易會產生一筆庫存\n        全部平均 每天買的平均，一天只會有一筆\n        summery by 債券標的、契約、結帳日\n    1-2-9 基金成本\n        個別認定 每做一筆交易會產生一筆庫存\n        全部平均 每天買的平均，一天只會有一筆\n        summery by 基金標的、契約、結帳日\n    1-2-10 定存成本 : 定存不會有虧損\n    1-2-11 票券(債券附買回) : 不用算虧損\n        成本:市值(到期值)\n***\n### 2.法規檢核\n- 決定書處理\n- 判斷是否在可投資範圍內\n- 庫存檢查\n- 統計餘額\n- 法規檢查\n- 內規檢查\n- 信用評等檢查\n***\n### 3.如何判斷除權日、除息日、除權息日\n- 除權日\n    盈餘現金股利 + 公積現金股利 > 0\n- 除息日\n    盈餘配股 + 資本公積配股 > 0\n- 除權息日\n    盈餘現金股利+公績現金股利 > 0  &&  盈餘配股+資本公積配股 > 0","slug":"DomainKnowhow","published":1,"updated":"2024-11-21T02:20:00.160Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cm3xvfy7i000lewi9317j0jpx","content":"<h3><span id=\"1-虧損報告\">1. 虧損報告</span></h3>\n<h5><span id=\"1-1-每日產生股票庫存資料\">1-1 每日產生股票庫存資料</span></h5>\n<pre><code> FA股票庫存 &gt; 投管股票庫存\n</code></pre>\n<h5><span id=\"1-2-每日運算虧損報告資料\">1-2 每日運算虧損報告資料</span></h5>\n<pre><code>1-2-1. 虧損報告不能刪除、填寫後只能修改檢討的內容\n1-2-2. 檢查七天內虧損報告是否執行完畢(有填寫)\n    買(day7)      交易資料中，有目前契約買進資料\n    賣(day7)      交易資料中，有目前契約賣出資料\n    出清(day 4~6) 庫存資料中沒有目前商品的庫存\n    持有(day7)    交易資料中，沒有目前契約買進或賣出的資料\n1-2-3 30天內出清檢查\n    有出清 Status &gt; Close\n1-2-4 90天內如果有新虧損資料超過就虧損資料的下一個級距 &gt; 新增資料\n1-2-5 虧損值計算 (市值-成本)/成本\n\n1-2-6 股票成本\n    成本(庫存股數*前日收盤價)\n    summery by 契約、結帳日、股票、券商\n1-2-7 期貨成本 : 期貨只要交保證金，商品實際價值會超過保證金，所以還不知道怎麼算期貨虧損\n1-2-8 債券成本\n    個別認定 每做一筆交易會產生一筆庫存\n    全部平均 每天買的平均，一天只會有一筆\n    summery by 債券標的、契約、結帳日\n1-2-9 基金成本\n    個別認定 每做一筆交易會產生一筆庫存\n    全部平均 每天買的平均，一天只會有一筆\n    summery by 基金標的、契約、結帳日\n1-2-10 定存成本 : 定存不會有虧損\n1-2-11 票券(債券附買回) : 不用算虧損\n    成本:市值(到期值)\n</code></pre>\n<hr>\n<h3><span id=\"2法規檢核\">2.法規檢核</span></h3>\n<ul>\n<li>決定書處理</li>\n<li>判斷是否在可投資範圍內</li>\n<li>庫存檢查</li>\n<li>統計餘額</li>\n<li>法規檢查</li>\n<li>內規檢查</li>\n<li>信用評等檢查</li>\n</ul>\n<hr>\n<h3><span id=\"3如何判斷除權日-除息日-除權息日\">3.如何判斷除權日、除息日、除權息日</span></h3>\n<ul>\n<li>除權日<br>\n盈餘現金股利 + 公積現金股利 &gt; 0</li>\n<li>除息日<br>\n盈餘配股 + 資本公積配股 &gt; 0</li>\n<li>除權息日<br>\n盈餘現金股利+公績現金股利 &gt; 0  &amp;&amp;  盈餘配股+資本公積配股 &gt; 0</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h3>1. 虧損報告</h3>\n<h5>1-1 每日產生股票庫存資料</h5>\n<pre><code> FA股票庫存 &gt; 投管股票庫存\n</code></pre>\n<h5>1-2 每日運算虧損報告資料</h5>\n<pre><code>1-2-1. 虧損報告不能刪除、填寫後只能修改檢討的內容\n1-2-2. 檢查七天內虧損報告是否執行完畢(有填寫)\n    買(day7)      交易資料中，有目前契約買進資料\n    賣(day7)      交易資料中，有目前契約賣出資料\n    出清(day 4~6) 庫存資料中沒有目前商品的庫存\n    持有(day7)    交易資料中，沒有目前契約買進或賣出的資料\n1-2-3 30天內出清檢查\n    有出清 Status &gt; Close\n1-2-4 90天內如果有新虧損資料超過就虧損資料的下一個級距 &gt; 新增資料\n1-2-5 虧損值計算 (市值-成本)/成本\n\n1-2-6 股票成本\n    成本(庫存股數*前日收盤價)\n    summery by 契約、結帳日、股票、券商\n1-2-7 期貨成本 : 期貨只要交保證金，商品實際價值會超過保證金，所以還不知道怎麼算期貨虧損\n1-2-8 債券成本\n    個別認定 每做一筆交易會產生一筆庫存\n    全部平均 每天買的平均，一天只會有一筆\n    summery by 債券標的、契約、結帳日\n1-2-9 基金成本\n    個別認定 每做一筆交易會產生一筆庫存\n    全部平均 每天買的平均，一天只會有一筆\n    summery by 基金標的、契約、結帳日\n1-2-10 定存成本 : 定存不會有虧損\n1-2-11 票券(債券附買回) : 不用算虧損\n    成本:市值(到期值)\n</code></pre>\n<hr>\n<h3>2.法規檢核</h3>\n<ul>\n<li>決定書處理</li>\n<li>判斷是否在可投資範圍內</li>\n<li>庫存檢查</li>\n<li>統計餘額</li>\n<li>法規檢查</li>\n<li>內規檢查</li>\n<li>信用評等檢查</li>\n</ul>\n<hr>\n<h3>3.如何判斷除權日、除息日、除權息日</h3>\n<ul>\n<li>除權日<br>\n盈餘現金股利 + 公積現金股利 &gt; 0</li>\n<li>除息日<br>\n盈餘配股 + 資本公積配股 &gt; 0</li>\n<li>除權息日<br>\n盈餘現金股利+公績現金股利 &gt; 0  &amp;&amp;  盈餘配股+資本公積配股 &gt; 0</li>\n</ul>\n"},{"title":"DI注入依賴","catalog":true,"comments":1,"abbrlink":46301,"date":"2020-08-18T10:12:11.000Z","_content":"\n# 為啥要用DI\n之前有寫一篇實現DIP原則，主要就是把類別的屬性、方法設計在介面中，然後讓一個類別去繼承這個介面實作出來，讓產生的實例依賴在介面上去符合DIP，使用的時候大概是長這樣\n```csharp\nclass Program\n{\n    static void Main(string[] args)\n    {\n\n        ISendMail instance = new SendMail();\n        instance.Send();\n    }\n}\n\npublic class SendMail : ISendMail\n{\n    //............\n}\n\npublic interface ISendMail\n{\n    //.........\n}\n```\n看起來是符合DIP了，程式也更有彈性，但是還是有一個new SendMail()的動作，看著還是跟SendMail類別聯繫在一起，所以就有注入依賴這個東西<br>\n\n\n# 怎麼用\n## 函數庫\nnuget 安裝 Microsoft.Extensions.DependencyInjection\n## 實際使用\n我原本看網路上教學都這樣寫\n```csharp\nclass Program\n{\n    static void Main(string[] args)\n    {\n        ServiceCollection collection = new ServiceCollection();\n        collection.TryAddSingleton<ILog, Logger>();\n        collection.BuildServiceProvider().GetService<ILog>().Log();\n        // or \n        // ServiceCollection collection = new ServiceCollection();\n        // collection.TryAddSingleton<Logger>();\n        // collection.BuildServiceProvider().GetService<Logger>().Log();\n    }\n}\n\n//繼承介面實做方法\npublic class Logger : ILog\n{\n    public void Log()\n    {\n        Console.WriteLine(\"do log\");\n    }\n}\n\n//介面中定義方法\npublic interface ILog\n{\n    public void Log();\n}\n```\n把介面跟實做的方法注入到DI容器中，把new的動作改成每次在呼叫GetService()的時候產生實例，原本以為這樣已經很牛逼了，直到我看到了這個做法<br>\n\n在MailServiceLogger類別中已經完全看不到實做ILog這個動作了，雖然還是跟ILog、Logger注入到同一個容器中，但這對我來說它真正的跟實做這件事情分開了\n```csharp\n//程式進入點\nclass Program\n{\n    static void Main(string[] args)\n    {\n        ServiceCollection collection = new ServiceCollection();\n        collection.TryAddTransient<MailServiceLogger>();\n        collection.TryAddTransient<ILog, Logger>();\n        var mailserviceLogger = collection.BuildServiceProvider().GetService<MailServiceLogger>();\n        mailserviceLogger.Log();\n\n    }\n}\n\npublic class MailServiceLogger\n{\n    private ILog _log;\n    public MailServiceLogger(ILog log)\n    {\n        _log = log;\n    }\n\n    public void Log()\n    {\n        _log.Log();\n    }\n}\n\npublic class Logger : ILog\n{\n    public DateTime InstanceCreateTime { get; set; }\n    public Logger()\n    {\n        this.InstanceCreateTime = DateTime.Now;\n    }\n\n    public string getCreateTime()\n    {\n        return this.InstanceCreateTime.ToString();\n    }\n\n    public void Log()\n    {\n        Console.WriteLine(\"do log\");\n    }\n}\n\npublic interface ILog\n{\n    public void Log();\n}\n```\n","source":"_posts/DI注入依賴.md","raw":"---\ntitle: DI注入依賴\ncatalog: true\ncomments: true\ntags:\n  - .Net Core\n  - DI\nabbrlink: 46301\ncategories: uncategorized\ndate: 2020-08-18 18:12:11\n---\n\n# 為啥要用DI\n之前有寫一篇實現DIP原則，主要就是把類別的屬性、方法設計在介面中，然後讓一個類別去繼承這個介面實作出來，讓產生的實例依賴在介面上去符合DIP，使用的時候大概是長這樣\n```csharp\nclass Program\n{\n    static void Main(string[] args)\n    {\n\n        ISendMail instance = new SendMail();\n        instance.Send();\n    }\n}\n\npublic class SendMail : ISendMail\n{\n    //............\n}\n\npublic interface ISendMail\n{\n    //.........\n}\n```\n看起來是符合DIP了，程式也更有彈性，但是還是有一個new SendMail()的動作，看著還是跟SendMail類別聯繫在一起，所以就有注入依賴這個東西<br>\n\n\n# 怎麼用\n## 函數庫\nnuget 安裝 Microsoft.Extensions.DependencyInjection\n## 實際使用\n我原本看網路上教學都這樣寫\n```csharp\nclass Program\n{\n    static void Main(string[] args)\n    {\n        ServiceCollection collection = new ServiceCollection();\n        collection.TryAddSingleton<ILog, Logger>();\n        collection.BuildServiceProvider().GetService<ILog>().Log();\n        // or \n        // ServiceCollection collection = new ServiceCollection();\n        // collection.TryAddSingleton<Logger>();\n        // collection.BuildServiceProvider().GetService<Logger>().Log();\n    }\n}\n\n//繼承介面實做方法\npublic class Logger : ILog\n{\n    public void Log()\n    {\n        Console.WriteLine(\"do log\");\n    }\n}\n\n//介面中定義方法\npublic interface ILog\n{\n    public void Log();\n}\n```\n把介面跟實做的方法注入到DI容器中，把new的動作改成每次在呼叫GetService()的時候產生實例，原本以為這樣已經很牛逼了，直到我看到了這個做法<br>\n\n在MailServiceLogger類別中已經完全看不到實做ILog這個動作了，雖然還是跟ILog、Logger注入到同一個容器中，但這對我來說它真正的跟實做這件事情分開了\n```csharp\n//程式進入點\nclass Program\n{\n    static void Main(string[] args)\n    {\n        ServiceCollection collection = new ServiceCollection();\n        collection.TryAddTransient<MailServiceLogger>();\n        collection.TryAddTransient<ILog, Logger>();\n        var mailserviceLogger = collection.BuildServiceProvider().GetService<MailServiceLogger>();\n        mailserviceLogger.Log();\n\n    }\n}\n\npublic class MailServiceLogger\n{\n    private ILog _log;\n    public MailServiceLogger(ILog log)\n    {\n        _log = log;\n    }\n\n    public void Log()\n    {\n        _log.Log();\n    }\n}\n\npublic class Logger : ILog\n{\n    public DateTime InstanceCreateTime { get; set; }\n    public Logger()\n    {\n        this.InstanceCreateTime = DateTime.Now;\n    }\n\n    public string getCreateTime()\n    {\n        return this.InstanceCreateTime.ToString();\n    }\n\n    public void Log()\n    {\n        Console.WriteLine(\"do log\");\n    }\n}\n\npublic interface ILog\n{\n    public void Log();\n}\n```\n","slug":"DI注入依賴","published":1,"updated":"2024-11-21T02:20:00.158Z","layout":"post","photos":[],"link":"","_id":"cm3xvfy7j000oewi9cgvwbkng","content":"<h1><span id=\"為啥要用di\">為啥要用DI</span></h1>\n<p>之前有寫一篇實現DIP原則，主要就是把類別的屬性、方法設計在介面中，然後讓一個類別去繼承這個介面實作出來，讓產生的實例依賴在介面上去符合DIP，使用的時候大概是長這樣</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">Program</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        ISendMail instance = <span class=\"keyword\">new</span> SendMail();</span><br><span class=\"line\">        instance.Send();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">SendMail</span> : <span class=\"title\">ISendMail</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\">//............</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title\">ISendMail</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\">//.........</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>看起來是符合DIP了，程式也更有彈性，但是還是有一個new SendMail()的動作，看著還是跟SendMail類別聯繫在一起，所以就有注入依賴這個東西<br></p>\n<h1><span id=\"怎麼用\">怎麼用</span></h1>\n<h2><span id=\"函數庫\">函數庫</span></h2>\n<p>nuget 安裝 Microsoft.Extensions.DependencyInjection</p>\n<h2><span id=\"實際使用\">實際使用</span></h2>\n<p>我原本看網路上教學都這樣寫</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">Program</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        ServiceCollection collection = <span class=\"keyword\">new</span> ServiceCollection();</span><br><span class=\"line\">        collection.TryAddSingleton&lt;ILog, Logger&gt;();</span><br><span class=\"line\">        collection.BuildServiceProvider().GetService&lt;ILog&gt;().Log();</span><br><span class=\"line\">        <span class=\"comment\">// or </span></span><br><span class=\"line\">        <span class=\"comment\">// ServiceCollection collection = new ServiceCollection();</span></span><br><span class=\"line\">        <span class=\"comment\">// collection.TryAddSingleton&lt;Logger&gt;();</span></span><br><span class=\"line\">        <span class=\"comment\">// collection.BuildServiceProvider().GetService&lt;Logger&gt;().Log();</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//繼承介面實做方法</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Logger</span> : <span class=\"title\">ILog</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Log</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        Console.WriteLine(<span class=\"string\">\"do log\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//介面中定義方法</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title\">ILog</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Log</span>(<span class=\"params\"></span>)</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>把介面跟實做的方法注入到DI容器中，把new的動作改成每次在呼叫GetService()的時候產生實例，原本以為這樣已經很牛逼了，直到我看到了這個做法<br></p>\n<p>在MailServiceLogger類別中已經完全看不到實做ILog這個動作了，雖然還是跟ILog、Logger注入到同一個容器中，但這對我來說它真正的跟實做這件事情分開了</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//程式進入點</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">Program</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        ServiceCollection collection = <span class=\"keyword\">new</span> ServiceCollection();</span><br><span class=\"line\">        collection.TryAddTransient&lt;MailServiceLogger&gt;();</span><br><span class=\"line\">        collection.TryAddTransient&lt;ILog, Logger&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">var</span> mailserviceLogger = collection.BuildServiceProvider().GetService&lt;MailServiceLogger&gt;();</span><br><span class=\"line\">        mailserviceLogger.Log();</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">MailServiceLogger</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> ILog _log;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">MailServiceLogger</span>(<span class=\"params\">ILog log</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        _log = log;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Log</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        _log.Log();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Logger</span> : <span class=\"title\">ILog</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> DateTime InstanceCreateTime &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Logger</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.InstanceCreateTime = DateTime.Now;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">string</span> <span class=\"title\">getCreateTime</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.InstanceCreateTime.ToString();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Log</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        Console.WriteLine(<span class=\"string\">\"do log\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title\">ILog</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Log</span>(<span class=\"params\"></span>)</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1>為啥要用DI</h1>\n<p>之前有寫一篇實現DIP原則，主要就是把類別的屬性、方法設計在介面中，然後讓一個類別去繼承這個介面實作出來，讓產生的實例依賴在介面上去符合DIP，使用的時候大概是長這樣</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">Program</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        ISendMail instance = <span class=\"keyword\">new</span> SendMail();</span><br><span class=\"line\">        instance.Send();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">SendMail</span> : <span class=\"title\">ISendMail</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\">//............</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title\">ISendMail</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\">//.........</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>看起來是符合DIP了，程式也更有彈性，但是還是有一個new SendMail()的動作，看著還是跟SendMail類別聯繫在一起，所以就有注入依賴這個東西<br></p>\n<h1>怎麼用</h1>\n<h2>函數庫</h2>\n<p>nuget 安裝 Microsoft.Extensions.DependencyInjection</p>\n<h2>實際使用</h2>\n<p>我原本看網路上教學都這樣寫</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">Program</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        ServiceCollection collection = <span class=\"keyword\">new</span> ServiceCollection();</span><br><span class=\"line\">        collection.TryAddSingleton&lt;ILog, Logger&gt;();</span><br><span class=\"line\">        collection.BuildServiceProvider().GetService&lt;ILog&gt;().Log();</span><br><span class=\"line\">        <span class=\"comment\">// or </span></span><br><span class=\"line\">        <span class=\"comment\">// ServiceCollection collection = new ServiceCollection();</span></span><br><span class=\"line\">        <span class=\"comment\">// collection.TryAddSingleton&lt;Logger&gt;();</span></span><br><span class=\"line\">        <span class=\"comment\">// collection.BuildServiceProvider().GetService&lt;Logger&gt;().Log();</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//繼承介面實做方法</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Logger</span> : <span class=\"title\">ILog</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Log</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        Console.WriteLine(<span class=\"string\">\"do log\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//介面中定義方法</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title\">ILog</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Log</span>(<span class=\"params\"></span>)</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>把介面跟實做的方法注入到DI容器中，把new的動作改成每次在呼叫GetService()的時候產生實例，原本以為這樣已經很牛逼了，直到我看到了這個做法<br></p>\n<p>在MailServiceLogger類別中已經完全看不到實做ILog這個動作了，雖然還是跟ILog、Logger注入到同一個容器中，但這對我來說它真正的跟實做這件事情分開了</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//程式進入點</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">Program</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        ServiceCollection collection = <span class=\"keyword\">new</span> ServiceCollection();</span><br><span class=\"line\">        collection.TryAddTransient&lt;MailServiceLogger&gt;();</span><br><span class=\"line\">        collection.TryAddTransient&lt;ILog, Logger&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">var</span> mailserviceLogger = collection.BuildServiceProvider().GetService&lt;MailServiceLogger&gt;();</span><br><span class=\"line\">        mailserviceLogger.Log();</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">MailServiceLogger</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> ILog _log;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">MailServiceLogger</span>(<span class=\"params\">ILog log</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        _log = log;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Log</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        _log.Log();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Logger</span> : <span class=\"title\">ILog</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> DateTime InstanceCreateTime &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Logger</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.InstanceCreateTime = DateTime.Now;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">string</span> <span class=\"title\">getCreateTime</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.InstanceCreateTime.ToString();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Log</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        Console.WriteLine(<span class=\"string\">\"do log\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title\">ILog</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Log</span>(<span class=\"params\"></span>)</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"Dapper","catalog":true,"abbrlink":"1816f01a","date":"2020-07-02T08:15:02.000Z","subtitle":null,"header-img":null,"_content":"\n### 使用Dapper，不要自己刻ORM\n\n##### nuget搜尋、安裝Dapper\n##### using Dapper\n```csharp\npublic IEnumerable<dynamic> ExecQuery(string query)\n{\n\ttry\n\t{\n\t\tConnectionString = $\"Data Source = {server}; Initial Catalog = {DB}; User ID = {userID}; Password ={password}\";\n\t\tconn.Open();\n\t\tresult = conn.Query(query);\n\t\treturn result;\n\t}\n\tcatch (Exception ie)\n\t{\n\t\t//do nothing,make AOP exceptions everywhere.\n\t}\n\tfinally\n\t{\n\t\tconn.Close();\n\t}\n\treturn null;\n}\n```\n","source":"_posts/Dapper.md","raw":"---\ntitle: Dapper\ncatalog: true\ntags:\n  - C#\n  - Nuget\nabbrlink: 1816f01a\ncategories: uncategorized\ndate: 2020-07-02 16:15:02\nsubtitle:\nheader-img:\n---\n\n### 使用Dapper，不要自己刻ORM\n\n##### nuget搜尋、安裝Dapper\n##### using Dapper\n```csharp\npublic IEnumerable<dynamic> ExecQuery(string query)\n{\n\ttry\n\t{\n\t\tConnectionString = $\"Data Source = {server}; Initial Catalog = {DB}; User ID = {userID}; Password ={password}\";\n\t\tconn.Open();\n\t\tresult = conn.Query(query);\n\t\treturn result;\n\t}\n\tcatch (Exception ie)\n\t{\n\t\t//do nothing,make AOP exceptions everywhere.\n\t}\n\tfinally\n\t{\n\t\tconn.Close();\n\t}\n\treturn null;\n}\n```\n","slug":"Dapper","published":1,"updated":"2024-11-21T02:20:00.159Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cm3xvfy7l000rewi9fkvg4oy4","content":"<h3><span id=\"使用dapper不要自己刻orm\">使用Dapper，不要自己刻ORM</span></h3>\n<h5><span id=\"nuget搜尋-安裝dapper\">nuget搜尋、安裝Dapper</span></h5>\n<h5><span id=\"using-dapper\">using Dapper</span></h5>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> IEnumerable&lt;<span class=\"keyword\">dynamic</span>&gt; <span class=\"title\">ExecQuery</span>(<span class=\"params\"><span class=\"keyword\">string</span> query</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">try</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tConnectionString = <span class=\"string\">$\"Data Source = <span class=\"subst\">&#123;server&#125;</span>; Initial Catalog = <span class=\"subst\">&#123;DB&#125;</span>; User ID = <span class=\"subst\">&#123;userID&#125;</span>; Password =<span class=\"subst\">&#123;password&#125;</span>\"</span>;</span><br><span class=\"line\">\t\tconn.Open();</span><br><span class=\"line\">\t\tresult = conn.Query(query);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> result;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">catch</span> (Exception ie)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//do nothing,make AOP exceptions everywhere.</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">finally</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tconn.Close();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h3>使用Dapper，不要自己刻ORM</h3>\n<h5>nuget搜尋、安裝Dapper</h5>\n<h5>using Dapper</h5>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> IEnumerable&lt;<span class=\"keyword\">dynamic</span>&gt; <span class=\"title\">ExecQuery</span>(<span class=\"params\"><span class=\"keyword\">string</span> query</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">try</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tConnectionString = <span class=\"string\">$\"Data Source = <span class=\"subst\">&#123;server&#125;</span>; Initial Catalog = <span class=\"subst\">&#123;DB&#125;</span>; User ID = <span class=\"subst\">&#123;userID&#125;</span>; Password =<span class=\"subst\">&#123;password&#125;</span>\"</span>;</span><br><span class=\"line\">\t\tconn.Open();</span><br><span class=\"line\">\t\tresult = conn.Query(query);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> result;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">catch</span> (Exception ie)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//do nothing,make AOP exceptions everywhere.</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">finally</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tconn.Close();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"Jetbrains-Rider 同步設定","catalog":true,"comments":1,"abbrlink":33092,"date":"2020-08-21T05:41:26.000Z","_content":"\n### 同步環境設定\n在開發時常常會有習慣的快捷鍵，但因為原本的快捷鍵設定跟Rider的不一樣，這時候我們就會去設定自己習慣的設定<br>\n\n如果開發環境不是只有在一台電腦上而是有好幾台電腦的時候就會很麻煩<br>\n\n像我自己公司、常用的筆電、家裡的電腦我有三個開發環境，裡面都會裝Rider、Pycharm、DataGrip...，等於是我一樣的設定最多要設定9次\n\njetbrains已經有幫使用者想好了\n\n在 \n```\nFile > IDE Settings sync\n```\n可以讓IDE之間的設定可以同步\n\n\n\n","source":"_posts/Jetbrains-Rider-同步設定.md","raw":"---\ntitle: Jetbrains-Rider 同步設定\ncatalog: true\ncomments: true\ntags:\n  - Jetbrains\nabbrlink: 33092\ncategories: uncategorized\ndate: 2020-08-21 13:41:26\n---\n\n### 同步環境設定\n在開發時常常會有習慣的快捷鍵，但因為原本的快捷鍵設定跟Rider的不一樣，這時候我們就會去設定自己習慣的設定<br>\n\n如果開發環境不是只有在一台電腦上而是有好幾台電腦的時候就會很麻煩<br>\n\n像我自己公司、常用的筆電、家裡的電腦我有三個開發環境，裡面都會裝Rider、Pycharm、DataGrip...，等於是我一樣的設定最多要設定9次\n\njetbrains已經有幫使用者想好了\n\n在 \n```\nFile > IDE Settings sync\n```\n可以讓IDE之間的設定可以同步\n\n\n\n","slug":"Jetbrains-Rider-同步設定","published":1,"updated":"2024-11-21T02:20:00.161Z","layout":"post","photos":[],"link":"","_id":"cm3xvfy7o000vewi9invt5h6v","content":"<h3><span id=\"同步環境設定\">同步環境設定</span></h3>\n<p>在開發時常常會有習慣的快捷鍵，但因為原本的快捷鍵設定跟Rider的不一樣，這時候我們就會去設定自己習慣的設定<br></p>\n<p>如果開發環境不是只有在一台電腦上而是有好幾台電腦的時候就會很麻煩<br></p>\n<p>像我自己公司、常用的筆電、家裡的電腦我有三個開發環境，裡面都會裝Rider、Pycharm、DataGrip…，等於是我一樣的設定最多要設定9次</p>\n<p>jetbrains已經有幫使用者想好了</p>\n<p>在</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">File &gt; IDE<span class=\"built_in\"> Settings </span>sync</span><br></pre></td></tr></table></figure>\n<p>可以讓IDE之間的設定可以同步</p>\n","site":{"data":{}},"excerpt":"","more":"<h3>同步環境設定</h3>\n<p>在開發時常常會有習慣的快捷鍵，但因為原本的快捷鍵設定跟Rider的不一樣，這時候我們就會去設定自己習慣的設定<br></p>\n<p>如果開發環境不是只有在一台電腦上而是有好幾台電腦的時候就會很麻煩<br></p>\n<p>像我自己公司、常用的筆電、家裡的電腦我有三個開發環境，裡面都會裝Rider、Pycharm、DataGrip…，等於是我一樣的設定最多要設定9次</p>\n<p>jetbrains已經有幫使用者想好了</p>\n<p>在</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">File &gt; IDE<span class=\"built_in\"> Settings </span>sync</span><br></pre></td></tr></table></figure>\n<p>可以讓IDE之間的設定可以同步</p>\n"},{"title":"C# 常用方法","catalog":true,"comments":1,"abbrlink":20939,"date":"2020-08-24T09:47:58.000Z","_content":"\n## XML\n#### 讀取XML\n```csharp\ntry\n{\n    XmlDocument xmlDoc = new XmlDocument();\n    xmlDoc.Load(\"Setting.xml\");//載入xml檔\n\n    var data = xmlDoc.SelectNodes(\"Setting\");\n\n    foreach (var item in data)\n    {\n        ServiceName = ((XmlElement)item).GetAttribute(\"ServiceName\");\n        ServerName = ((XmlElement)item).GetAttribute(\"ServerName\");\n        UserName = ((XmlElement)item).GetAttribute(\"UserName\");\n        PassWord = ((XmlElement)item).GetAttribute(\"PassWord\");\n        Source = ((XmlElement)item).GetAttribute(\"SourcePath\");\n        ServicePath = ((XmlElement)item).GetAttribute(\"ServicePath\");\n        ClientPath = ((XmlElement)item).GetAttribute(\"ClientPath\");\n        Domain = ((XmlElement)item).GetAttribute(\"Domain\");\n        SQLPath = ((XmlElement)item).GetAttribute(\"SQLPath\");\n        BackupPath = ((XmlElement)item).GetAttribute(\"BackupPath\");\n    }\n}\ncatch (Exception ie)\n{\n    CreatDefaultSetting();\n    ReadRule();\n}\n```\n#### 建立預設XML\n```csharp\nXElement xElement = new XElement\n    (\n    new XElement\n    (\"Setting\",\n        new XAttribute(\"ServiceName\", \"Service1\"),\n        new XAttribute(\"ServerName\", \"Server1\"),\n        new XAttribute(\"UserName\", \"Administrator\"),\n        new XAttribute(\"PassWord\", \"12345\"),\n        new XAttribute(\"SourcePath\", @\".\\Source\")\n    )\n    );\nXmlWriterSettings settings = new XmlWriterSettings();\nsettings.Encoding = new UTF8Encoding(false);\nsettings.Indent = true;\nXmlWriter xw = XmlWriter.Create(System.Environment.CurrentDirectory + \"\\\\setting.xml\", settings);\nxElement.Save(xw);\n//寫入檔案\nxw.Flush();\nxw.Close();\n```\n\n---\n## 遞迴檢查目錄下所有檔案/目錄\n```csharp\npublic class Recursive2\n{\n    List<string> FileCollection = new List<string>();\n    public Recursive2(string rootPath)\n    {\n        GetAllFiles(rootPath);\n    }\n\n    private void GetAllFiles(string rootPath)\n    {\n        //取得目錄下所有目錄\n        var AllFolder = Directory.GetDirectories(rootPath);\n        if (AllFolder.Length > 0)\n        {\n            foreach (var item in AllFolder)\n            {\n                GetAllFiles(item);\n            }\n        }\n\n        var AllFile = Directory.GetFiles(rootPath);\n        foreach (var item in AllFile)\n            FileCollection.Add(item);\n    }\n\n    public List<string> GetAllFile()\n    {\n        return FileCollection;\n    }\n}\n```","source":"_posts/C-常用方法.md","raw":"---\ntitle: C# 常用方法\ncatalog: true\ncomments: true\ntags:\n  - C#\nabbrlink: 20939\ncategories: uncategorized\ndate: 2020-08-24 17:47:58\n---\n\n## XML\n#### 讀取XML\n```csharp\ntry\n{\n    XmlDocument xmlDoc = new XmlDocument();\n    xmlDoc.Load(\"Setting.xml\");//載入xml檔\n\n    var data = xmlDoc.SelectNodes(\"Setting\");\n\n    foreach (var item in data)\n    {\n        ServiceName = ((XmlElement)item).GetAttribute(\"ServiceName\");\n        ServerName = ((XmlElement)item).GetAttribute(\"ServerName\");\n        UserName = ((XmlElement)item).GetAttribute(\"UserName\");\n        PassWord = ((XmlElement)item).GetAttribute(\"PassWord\");\n        Source = ((XmlElement)item).GetAttribute(\"SourcePath\");\n        ServicePath = ((XmlElement)item).GetAttribute(\"ServicePath\");\n        ClientPath = ((XmlElement)item).GetAttribute(\"ClientPath\");\n        Domain = ((XmlElement)item).GetAttribute(\"Domain\");\n        SQLPath = ((XmlElement)item).GetAttribute(\"SQLPath\");\n        BackupPath = ((XmlElement)item).GetAttribute(\"BackupPath\");\n    }\n}\ncatch (Exception ie)\n{\n    CreatDefaultSetting();\n    ReadRule();\n}\n```\n#### 建立預設XML\n```csharp\nXElement xElement = new XElement\n    (\n    new XElement\n    (\"Setting\",\n        new XAttribute(\"ServiceName\", \"Service1\"),\n        new XAttribute(\"ServerName\", \"Server1\"),\n        new XAttribute(\"UserName\", \"Administrator\"),\n        new XAttribute(\"PassWord\", \"12345\"),\n        new XAttribute(\"SourcePath\", @\".\\Source\")\n    )\n    );\nXmlWriterSettings settings = new XmlWriterSettings();\nsettings.Encoding = new UTF8Encoding(false);\nsettings.Indent = true;\nXmlWriter xw = XmlWriter.Create(System.Environment.CurrentDirectory + \"\\\\setting.xml\", settings);\nxElement.Save(xw);\n//寫入檔案\nxw.Flush();\nxw.Close();\n```\n\n---\n## 遞迴檢查目錄下所有檔案/目錄\n```csharp\npublic class Recursive2\n{\n    List<string> FileCollection = new List<string>();\n    public Recursive2(string rootPath)\n    {\n        GetAllFiles(rootPath);\n    }\n\n    private void GetAllFiles(string rootPath)\n    {\n        //取得目錄下所有目錄\n        var AllFolder = Directory.GetDirectories(rootPath);\n        if (AllFolder.Length > 0)\n        {\n            foreach (var item in AllFolder)\n            {\n                GetAllFiles(item);\n            }\n        }\n\n        var AllFile = Directory.GetFiles(rootPath);\n        foreach (var item in AllFile)\n            FileCollection.Add(item);\n    }\n\n    public List<string> GetAllFile()\n    {\n        return FileCollection;\n    }\n}\n```","slug":"C-常用方法","published":1,"updated":"2024-11-21T02:20:00.155Z","layout":"post","photos":[],"link":"","_id":"cm3xvfy7r000yewi9p7t6qrrj","content":"<h2><span id=\"xml\">XML</span></h2>\n<h4><span id=\"讀取xml\">讀取XML</span></h4>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">try</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    XmlDocument xmlDoc = <span class=\"keyword\">new</span> XmlDocument();</span><br><span class=\"line\">    xmlDoc.Load(<span class=\"string\">\"Setting.xml\"</span>);<span class=\"comment\">//載入xml檔</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> data = xmlDoc.SelectNodes(<span class=\"string\">\"Setting\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">foreach</span> (<span class=\"keyword\">var</span> item <span class=\"keyword\">in</span> data)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        ServiceName = ((XmlElement)item).GetAttribute(<span class=\"string\">\"ServiceName\"</span>);</span><br><span class=\"line\">        ServerName = ((XmlElement)item).GetAttribute(<span class=\"string\">\"ServerName\"</span>);</span><br><span class=\"line\">        UserName = ((XmlElement)item).GetAttribute(<span class=\"string\">\"UserName\"</span>);</span><br><span class=\"line\">        PassWord = ((XmlElement)item).GetAttribute(<span class=\"string\">\"PassWord\"</span>);</span><br><span class=\"line\">        Source = ((XmlElement)item).GetAttribute(<span class=\"string\">\"SourcePath\"</span>);</span><br><span class=\"line\">        ServicePath = ((XmlElement)item).GetAttribute(<span class=\"string\">\"ServicePath\"</span>);</span><br><span class=\"line\">        ClientPath = ((XmlElement)item).GetAttribute(<span class=\"string\">\"ClientPath\"</span>);</span><br><span class=\"line\">        Domain = ((XmlElement)item).GetAttribute(<span class=\"string\">\"Domain\"</span>);</span><br><span class=\"line\">        SQLPath = ((XmlElement)item).GetAttribute(<span class=\"string\">\"SQLPath\"</span>);</span><br><span class=\"line\">        BackupPath = ((XmlElement)item).GetAttribute(<span class=\"string\">\"BackupPath\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">catch</span> (Exception ie)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    CreatDefaultSetting();</span><br><span class=\"line\">    ReadRule();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4><span id=\"建立預設xml\">建立預設XML</span></h4>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">XElement xElement = <span class=\"keyword\">new</span> XElement</span><br><span class=\"line\">    (</span><br><span class=\"line\">    <span class=\"keyword\">new</span> XElement</span><br><span class=\"line\">    (<span class=\"string\">\"Setting\"</span>,</span><br><span class=\"line\">        <span class=\"keyword\">new</span> XAttribute(<span class=\"string\">\"ServiceName\"</span>, <span class=\"string\">\"Service1\"</span>),</span><br><span class=\"line\">        <span class=\"keyword\">new</span> XAttribute(<span class=\"string\">\"ServerName\"</span>, <span class=\"string\">\"Server1\"</span>),</span><br><span class=\"line\">        <span class=\"keyword\">new</span> XAttribute(<span class=\"string\">\"UserName\"</span>, <span class=\"string\">\"Administrator\"</span>),</span><br><span class=\"line\">        <span class=\"keyword\">new</span> XAttribute(<span class=\"string\">\"PassWord\"</span>, <span class=\"string\">\"12345\"</span>),</span><br><span class=\"line\">        <span class=\"keyword\">new</span> XAttribute(<span class=\"string\">\"SourcePath\"</span>, <span class=\"string\">@\".\\Source\"</span>)</span><br><span class=\"line\">    )</span><br><span class=\"line\">    );</span><br><span class=\"line\">XmlWriterSettings settings = <span class=\"keyword\">new</span> XmlWriterSettings();</span><br><span class=\"line\">settings.Encoding = <span class=\"keyword\">new</span> UTF8Encoding(<span class=\"literal\">false</span>);</span><br><span class=\"line\">settings.Indent = <span class=\"literal\">true</span>;</span><br><span class=\"line\">XmlWriter xw = XmlWriter.Create(System.Environment.CurrentDirectory + <span class=\"string\">\"\\\\setting.xml\"</span>, settings);</span><br><span class=\"line\">xElement.Save(xw);</span><br><span class=\"line\"><span class=\"comment\">//寫入檔案</span></span><br><span class=\"line\">xw.Flush();</span><br><span class=\"line\">xw.Close();</span><br></pre></td></tr></table></figure>\n<hr>\n<h2><span id=\"遞迴檢查目錄下所有檔案目錄\">遞迴檢查目錄下所有檔案/目錄</span></h2>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Recursive2</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    List&lt;<span class=\"keyword\">string</span>&gt; FileCollection = <span class=\"keyword\">new</span> List&lt;<span class=\"keyword\">string</span>&gt;();</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Recursive2</span>(<span class=\"params\"><span class=\"keyword\">string</span> rootPath</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        GetAllFiles(rootPath);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">GetAllFiles</span>(<span class=\"params\"><span class=\"keyword\">string</span> rootPath</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        <span class=\"comment\">//取得目錄下所有目錄</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> AllFolder = Directory.GetDirectories(rootPath);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (AllFolder.Length &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">foreach</span> (<span class=\"keyword\">var</span> item <span class=\"keyword\">in</span> AllFolder)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                GetAllFiles(item);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">var</span> AllFile = Directory.GetFiles(rootPath);</span><br><span class=\"line\">        <span class=\"keyword\">foreach</span> (<span class=\"keyword\">var</span> item <span class=\"keyword\">in</span> AllFile)</span><br><span class=\"line\">            FileCollection.Add(item);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> List&lt;<span class=\"keyword\">string</span>&gt; <span class=\"title\">GetAllFile</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> FileCollection;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h2>XML</h2>\n<h4>讀取XML</h4>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">try</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    XmlDocument xmlDoc = <span class=\"keyword\">new</span> XmlDocument();</span><br><span class=\"line\">    xmlDoc.Load(<span class=\"string\">\"Setting.xml\"</span>);<span class=\"comment\">//載入xml檔</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> data = xmlDoc.SelectNodes(<span class=\"string\">\"Setting\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">foreach</span> (<span class=\"keyword\">var</span> item <span class=\"keyword\">in</span> data)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        ServiceName = ((XmlElement)item).GetAttribute(<span class=\"string\">\"ServiceName\"</span>);</span><br><span class=\"line\">        ServerName = ((XmlElement)item).GetAttribute(<span class=\"string\">\"ServerName\"</span>);</span><br><span class=\"line\">        UserName = ((XmlElement)item).GetAttribute(<span class=\"string\">\"UserName\"</span>);</span><br><span class=\"line\">        PassWord = ((XmlElement)item).GetAttribute(<span class=\"string\">\"PassWord\"</span>);</span><br><span class=\"line\">        Source = ((XmlElement)item).GetAttribute(<span class=\"string\">\"SourcePath\"</span>);</span><br><span class=\"line\">        ServicePath = ((XmlElement)item).GetAttribute(<span class=\"string\">\"ServicePath\"</span>);</span><br><span class=\"line\">        ClientPath = ((XmlElement)item).GetAttribute(<span class=\"string\">\"ClientPath\"</span>);</span><br><span class=\"line\">        Domain = ((XmlElement)item).GetAttribute(<span class=\"string\">\"Domain\"</span>);</span><br><span class=\"line\">        SQLPath = ((XmlElement)item).GetAttribute(<span class=\"string\">\"SQLPath\"</span>);</span><br><span class=\"line\">        BackupPath = ((XmlElement)item).GetAttribute(<span class=\"string\">\"BackupPath\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">catch</span> (Exception ie)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    CreatDefaultSetting();</span><br><span class=\"line\">    ReadRule();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4>建立預設XML</h4>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">XElement xElement = <span class=\"keyword\">new</span> XElement</span><br><span class=\"line\">    (</span><br><span class=\"line\">    <span class=\"keyword\">new</span> XElement</span><br><span class=\"line\">    (<span class=\"string\">\"Setting\"</span>,</span><br><span class=\"line\">        <span class=\"keyword\">new</span> XAttribute(<span class=\"string\">\"ServiceName\"</span>, <span class=\"string\">\"Service1\"</span>),</span><br><span class=\"line\">        <span class=\"keyword\">new</span> XAttribute(<span class=\"string\">\"ServerName\"</span>, <span class=\"string\">\"Server1\"</span>),</span><br><span class=\"line\">        <span class=\"keyword\">new</span> XAttribute(<span class=\"string\">\"UserName\"</span>, <span class=\"string\">\"Administrator\"</span>),</span><br><span class=\"line\">        <span class=\"keyword\">new</span> XAttribute(<span class=\"string\">\"PassWord\"</span>, <span class=\"string\">\"12345\"</span>),</span><br><span class=\"line\">        <span class=\"keyword\">new</span> XAttribute(<span class=\"string\">\"SourcePath\"</span>, <span class=\"string\">@\".\\Source\"</span>)</span><br><span class=\"line\">    )</span><br><span class=\"line\">    );</span><br><span class=\"line\">XmlWriterSettings settings = <span class=\"keyword\">new</span> XmlWriterSettings();</span><br><span class=\"line\">settings.Encoding = <span class=\"keyword\">new</span> UTF8Encoding(<span class=\"literal\">false</span>);</span><br><span class=\"line\">settings.Indent = <span class=\"literal\">true</span>;</span><br><span class=\"line\">XmlWriter xw = XmlWriter.Create(System.Environment.CurrentDirectory + <span class=\"string\">\"\\\\setting.xml\"</span>, settings);</span><br><span class=\"line\">xElement.Save(xw);</span><br><span class=\"line\"><span class=\"comment\">//寫入檔案</span></span><br><span class=\"line\">xw.Flush();</span><br><span class=\"line\">xw.Close();</span><br></pre></td></tr></table></figure>\n<hr>\n<h2>遞迴檢查目錄下所有檔案/目錄</h2>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Recursive2</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    List&lt;<span class=\"keyword\">string</span>&gt; FileCollection = <span class=\"keyword\">new</span> List&lt;<span class=\"keyword\">string</span>&gt;();</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Recursive2</span>(<span class=\"params\"><span class=\"keyword\">string</span> rootPath</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        GetAllFiles(rootPath);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">GetAllFiles</span>(<span class=\"params\"><span class=\"keyword\">string</span> rootPath</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        <span class=\"comment\">//取得目錄下所有目錄</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> AllFolder = Directory.GetDirectories(rootPath);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (AllFolder.Length &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">foreach</span> (<span class=\"keyword\">var</span> item <span class=\"keyword\">in</span> AllFolder)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                GetAllFiles(item);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">var</span> AllFile = Directory.GetFiles(rootPath);</span><br><span class=\"line\">        <span class=\"keyword\">foreach</span> (<span class=\"keyword\">var</span> item <span class=\"keyword\">in</span> AllFile)</span><br><span class=\"line\">            FileCollection.Add(item);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> List&lt;<span class=\"keyword\">string</span>&gt; <span class=\"title\">GetAllFile</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> FileCollection;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Linux安裝mysql.phpmyadmin","catalog":true,"comments":1,"abbrlink":41907,"date":"2020-08-27T10:01:55.000Z","_content":"\n\n### 安裝mysql、測試\n#### 安裝mysql\n```\nsudo apt-get install mysql-server\nsudo apt install mysql-client\nsudo apt install libmysqlclient-dev\n```\n\n#### 檢查服務是否啟動\n```\nsudo lsof -i :3306\ntelnet localhost 3306\n```\n#### 設定mysql允許遠端訪問\n編輯mysqld.cnf\n```\nsudo vi /etc/mysql/mysql.conf.d/mysqld.cnf\n```\n把bind-address = 127.0.0.1註解掉存檔\n```python\n#bind-address = 127.0.0.1\n```\n##### vi常用指令\n```\n插入 I\n增加 A\n離開編輯模式 ESC\n存檔離開 \n1. shift+: \n2. wq\n```\n\n\n---\n### 登入mysql、啟用root帳號\n#### 登入\n```\n不用密碼\nsudo mysql -u root mysql\n用密碼\nsudo mysql -u root mysql -p\n```\n#### 啟用root帳號\n```sql\nUPDATE user SET plugin='mysql_native_password' WHERE User='root';\n```\n#### 重新載入特權表\n```sql\nFLUSH PRIVILEGES;\n```\n#### 設定root密碼\n```\nsudo mysql_secure_installation\t\n```\n---\n### 安裝phpmyadmin\n#### 下載phpmyadmin\n他應該會跳出來設定環境的畫面，沒有也沒關係之後可以再設\n```\nsudo apt install phpmyadmin php-mbstring php-gettext\n```\n#### 重啟服務\n重啟服務之後ip/phpmyadmin看看有沒有看到畫面，有的話就設定好了\n```\nsudo systemctl restart apache2\n```\n\n#### 重設phpmyadmin設定\n如果顯示404 not found的話，但是我用了之後還是404就是了\n```\nsudo dpkg-reconfigure phpmyadmin\n```\n#### 我是執行下面指令\n```\nsudo ln -s /etc/phpmyadmin/apache.conf /etc/apache2/conf-available/phpmyadmin.conf\nsudo a2enconf phpmyadmin\nsudo service apache2 reload\n```\n---\n### MySQL常見問題\n#### phpmyadmin匯入資料庫跳錯誤訊息\n是因為phpmyadmin有一些檔案上傳設定啥的，我們直接用command匯入\n```\n//本機command匯入\nmysql -u root -p DBName < C:\\Users\\桌面\\BackupFile.sql\n//還是有問題的話，可能是編碼問題導致匯入中斷\nmysql -u root -p --default-character-set=utf8 DBName < C:\\Users\\桌面\\BackupFile.sql\n\n//匯入遠端主機\nmysql -u root -p -h 123.123.123.123 DBName <backup.sql\n\n//匯入的時候跳這個 : 'xxxx is not allowed to connect to this MySQL server'\n//直接把備份的sql透過FileZilla送過去\nsudo apt-get install openssh-server\n```\n\n\n#### host Is Not Allowed to Connect to This MySQL Server\n```sql\n//在mysql建立帳號\nCREATE USER 'UserName'@'YourIP' IDENTIFIED BY 'YourPassword'\n//設定權限\nGRANT ALL PRIVILEGES ON *.* TO 'UserName'@'YourIP' WITH GRANT OPTION;\n//Flush\nFLUSH PRIVILEGES;\n```\n\n### 可能會用到的工具\n```\nsudo apt install -y git curl wget zip unzip\n```","source":"_posts/Linux安裝mysql-phpmyadmin.md","raw":"---\ntitle: Linux安裝mysql.phpmyadmin\ncatalog: true\ncomments: true\ntags:\n  - ubuntu\n  - linux\n  - mysql\n  - phpmyadmin\nabbrlink: 41907\ncategories: uncategorized\ndate: 2020-08-27 18:01:55\n---\n\n\n### 安裝mysql、測試\n#### 安裝mysql\n```\nsudo apt-get install mysql-server\nsudo apt install mysql-client\nsudo apt install libmysqlclient-dev\n```\n\n#### 檢查服務是否啟動\n```\nsudo lsof -i :3306\ntelnet localhost 3306\n```\n#### 設定mysql允許遠端訪問\n編輯mysqld.cnf\n```\nsudo vi /etc/mysql/mysql.conf.d/mysqld.cnf\n```\n把bind-address = 127.0.0.1註解掉存檔\n```python\n#bind-address = 127.0.0.1\n```\n##### vi常用指令\n```\n插入 I\n增加 A\n離開編輯模式 ESC\n存檔離開 \n1. shift+: \n2. wq\n```\n\n\n---\n### 登入mysql、啟用root帳號\n#### 登入\n```\n不用密碼\nsudo mysql -u root mysql\n用密碼\nsudo mysql -u root mysql -p\n```\n#### 啟用root帳號\n```sql\nUPDATE user SET plugin='mysql_native_password' WHERE User='root';\n```\n#### 重新載入特權表\n```sql\nFLUSH PRIVILEGES;\n```\n#### 設定root密碼\n```\nsudo mysql_secure_installation\t\n```\n---\n### 安裝phpmyadmin\n#### 下載phpmyadmin\n他應該會跳出來設定環境的畫面，沒有也沒關係之後可以再設\n```\nsudo apt install phpmyadmin php-mbstring php-gettext\n```\n#### 重啟服務\n重啟服務之後ip/phpmyadmin看看有沒有看到畫面，有的話就設定好了\n```\nsudo systemctl restart apache2\n```\n\n#### 重設phpmyadmin設定\n如果顯示404 not found的話，但是我用了之後還是404就是了\n```\nsudo dpkg-reconfigure phpmyadmin\n```\n#### 我是執行下面指令\n```\nsudo ln -s /etc/phpmyadmin/apache.conf /etc/apache2/conf-available/phpmyadmin.conf\nsudo a2enconf phpmyadmin\nsudo service apache2 reload\n```\n---\n### MySQL常見問題\n#### phpmyadmin匯入資料庫跳錯誤訊息\n是因為phpmyadmin有一些檔案上傳設定啥的，我們直接用command匯入\n```\n//本機command匯入\nmysql -u root -p DBName < C:\\Users\\桌面\\BackupFile.sql\n//還是有問題的話，可能是編碼問題導致匯入中斷\nmysql -u root -p --default-character-set=utf8 DBName < C:\\Users\\桌面\\BackupFile.sql\n\n//匯入遠端主機\nmysql -u root -p -h 123.123.123.123 DBName <backup.sql\n\n//匯入的時候跳這個 : 'xxxx is not allowed to connect to this MySQL server'\n//直接把備份的sql透過FileZilla送過去\nsudo apt-get install openssh-server\n```\n\n\n#### host Is Not Allowed to Connect to This MySQL Server\n```sql\n//在mysql建立帳號\nCREATE USER 'UserName'@'YourIP' IDENTIFIED BY 'YourPassword'\n//設定權限\nGRANT ALL PRIVILEGES ON *.* TO 'UserName'@'YourIP' WITH GRANT OPTION;\n//Flush\nFLUSH PRIVILEGES;\n```\n\n### 可能會用到的工具\n```\nsudo apt install -y git curl wget zip unzip\n```","slug":"Linux安裝mysql-phpmyadmin","published":1,"updated":"2024-11-21T02:20:00.162Z","layout":"post","photos":[],"link":"","_id":"cm3xvfy7v0012ewi9cs0vc7h4","content":"<h3><span id=\"安裝mysql-測試\">安裝mysql、測試</span></h3>\n<h4><span id=\"安裝mysql\">安裝mysql</span></h4>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get <span class=\"keyword\">install</span> mysql-<span class=\"keyword\">server</span></span><br><span class=\"line\">sudo apt <span class=\"keyword\">install</span> mysql-<span class=\"keyword\">client</span></span><br><span class=\"line\">sudo apt <span class=\"keyword\">install</span> libmysqlclient-dev</span><br></pre></td></tr></table></figure>\n<h4><span id=\"檢查服務是否啟動\">檢查服務是否啟動</span></h4>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">sudo</span> <span class=\"selector-tag\">lsof</span> <span class=\"selector-tag\">-i</span> <span class=\"selector-pseudo\">:3306</span></span><br><span class=\"line\"><span class=\"selector-tag\">telnet</span> <span class=\"selector-tag\">localhost</span> 3306</span><br></pre></td></tr></table></figure>\n<h4><span id=\"設定mysql允許遠端訪問\">設定mysql允許遠端訪問</span></h4>\n<p>編輯mysqld.cnf</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo <span class=\"keyword\">vi</span> /etc/mysql/mysql.<span class=\"keyword\">conf</span>.d/mysqld.<span class=\"keyword\">cnf</span></span><br></pre></td></tr></table></figure>\n<p>把bind-address = 127.0.0.1註解掉存檔</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#bind-address = 127.0.0.1</span></span><br></pre></td></tr></table></figure>\n<h5><span id=\"vi常用指令\">vi常用指令</span></h5>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">插入 I</span><br><span class=\"line\">增加 A</span><br><span class=\"line\">離開編輯模式 ESC</span><br><span class=\"line\">存檔離開 </span><br><span class=\"line\"><span class=\"bullet\">1. </span>shift+: </span><br><span class=\"line\"><span class=\"bullet\">2. </span>wq</span><br></pre></td></tr></table></figure>\n<hr>\n<h3><span id=\"登入mysql-啟用root帳號\">登入mysql、啟用root帳號</span></h3>\n<h4><span id=\"登入\">登入</span></h4>\n<figure class=\"highlight xquery\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">不用密碼</span><br><span class=\"line\">sudo mysql -u<span class=\"built_in\"> root</span> mysql</span><br><span class=\"line\">用密碼</span><br><span class=\"line\">sudo mysql -u<span class=\"built_in\"> root</span> mysql -p</span><br></pre></td></tr></table></figure>\n<h4><span id=\"啟用root帳號\">啟用root帳號</span></h4>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">UPDATE</span> <span class=\"keyword\">user</span> <span class=\"keyword\">SET</span> <span class=\"keyword\">plugin</span>=<span class=\"string\">'mysql_native_password'</span> <span class=\"keyword\">WHERE</span> <span class=\"keyword\">User</span>=<span class=\"string\">'root'</span>;</span><br></pre></td></tr></table></figure>\n<h4><span id=\"重新載入特權表\">重新載入特權表</span></h4>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">FLUSH</span> <span class=\"keyword\">PRIVILEGES</span>;</span><br></pre></td></tr></table></figure>\n<h4><span id=\"設定root密碼\">設定root密碼</span></h4>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">sudo mysql_secure_installation</span></span><br></pre></td></tr></table></figure>\n<hr>\n<h3><span id=\"安裝phpmyadmin\">安裝phpmyadmin</span></h3>\n<h4><span id=\"下載phpmyadmin\">下載phpmyadmin</span></h4>\n<p>他應該會跳出來設定環境的畫面，沒有也沒關係之後可以再設</p>\n<figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt <span class=\"keyword\">install</span> phpmyadmin php-mbstring php-gettext</span><br></pre></td></tr></table></figure>\n<h4><span id=\"重啟服務\">重啟服務</span></h4>\n<p>重啟服務之後ip/phpmyadmin看看有沒有看到畫面，有的話就設定好了</p>\n<figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo systemctl <span class=\"built_in\">restart</span> apache2</span><br></pre></td></tr></table></figure>\n<h4><span id=\"重設phpmyadmin設定\">重設phpmyadmin設定</span></h4>\n<p>如果顯示404 not found的話，但是我用了之後還是404就是了</p>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">sudo dpkg-reconfigure phpmyadmin</span></span><br></pre></td></tr></table></figure>\n<h4><span id=\"我是執行下面指令\">我是執行下面指令</span></h4>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo ln -s /etc/phpmyadmin/apache.conf /etc/apache2/conf-available/phpmyadmin.conf</span><br><span class=\"line\">sudo a2enconf phpmyadmin</span><br><span class=\"line\">sudo<span class=\"built_in\"> service </span>apache2 reload</span><br></pre></td></tr></table></figure>\n<hr>\n<h3><span id=\"mysql常見問題\">MySQL常見問題</span></h3>\n<h4><span id=\"phpmyadmin匯入資料庫跳錯誤訊息\">phpmyadmin匯入資料庫跳錯誤訊息</span></h4>\n<p>是因為phpmyadmin有一些檔案上傳設定啥的，我們直接用command匯入</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//本機command匯入</span></span><br><span class=\"line\">mysql -u root -<span class=\"selector-tag\">p</span> DBName &lt; C:\\Users\\桌面\\BackupFile.sql</span><br><span class=\"line\"><span class=\"comment\">//還是有問題的話，可能是編碼問題導致匯入中斷</span></span><br><span class=\"line\">mysql -u root -<span class=\"selector-tag\">p</span> --default-character-set=utf8 DBName &lt; C:\\Users\\桌面\\BackupFile.sql</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//匯入遠端主機</span></span><br><span class=\"line\">mysql -u root -<span class=\"selector-tag\">p</span> -h <span class=\"number\">123.123</span>.<span class=\"number\">123.123</span> DBName &lt;backup.sql</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//匯入的時候跳這個 : 'xxxx is not allowed to connect to this MySQL server'</span></span><br><span class=\"line\"><span class=\"comment\">//直接把備份的sql透過FileZilla送過去</span></span><br><span class=\"line\">sudo apt-get install openssh-server</span><br></pre></td></tr></table></figure>\n<h4><span id=\"host-is-not-allowed-to-connect-to-this-mysql-server\">host Is Not Allowed to Connect to This MySQL Server</span></h4>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//在mysql建立帳號</span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">USER</span> <span class=\"string\">'UserName'</span>@<span class=\"string\">'YourIP'</span> <span class=\"keyword\">IDENTIFIED</span> <span class=\"keyword\">BY</span> <span class=\"string\">'YourPassword'</span></span><br><span class=\"line\">//設定權限</span><br><span class=\"line\"><span class=\"keyword\">GRANT</span> <span class=\"keyword\">ALL</span> <span class=\"keyword\">PRIVILEGES</span> <span class=\"keyword\">ON</span> *.* <span class=\"keyword\">TO</span> <span class=\"string\">'UserName'</span>@<span class=\"string\">'YourIP'</span> <span class=\"keyword\">WITH</span> <span class=\"keyword\">GRANT</span> <span class=\"keyword\">OPTION</span>;</span><br><span class=\"line\">//<span class=\"keyword\">Flush</span></span><br><span class=\"line\"><span class=\"keyword\">FLUSH</span> <span class=\"keyword\">PRIVILEGES</span>;</span><br></pre></td></tr></table></figure>\n<h3><span id=\"可能會用到的工具\">可能會用到的工具</span></h3>\n<figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt <span class=\"keyword\">install</span> -y git curl wget zip unzip</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h3>安裝mysql、測試</h3>\n<h4>安裝mysql</h4>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get <span class=\"keyword\">install</span> mysql-<span class=\"keyword\">server</span></span><br><span class=\"line\">sudo apt <span class=\"keyword\">install</span> mysql-<span class=\"keyword\">client</span></span><br><span class=\"line\">sudo apt <span class=\"keyword\">install</span> libmysqlclient-dev</span><br></pre></td></tr></table></figure>\n<h4>檢查服務是否啟動</h4>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">sudo</span> <span class=\"selector-tag\">lsof</span> <span class=\"selector-tag\">-i</span> <span class=\"selector-pseudo\">:3306</span></span><br><span class=\"line\"><span class=\"selector-tag\">telnet</span> <span class=\"selector-tag\">localhost</span> 3306</span><br></pre></td></tr></table></figure>\n<h4>設定mysql允許遠端訪問</h4>\n<p>編輯mysqld.cnf</p>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo <span class=\"keyword\">vi</span> /etc/mysql/mysql.<span class=\"keyword\">conf</span>.d/mysqld.<span class=\"keyword\">cnf</span></span><br></pre></td></tr></table></figure>\n<p>把bind-address = 127.0.0.1註解掉存檔</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#bind-address = 127.0.0.1</span></span><br></pre></td></tr></table></figure>\n<h5>vi常用指令</h5>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">插入 I</span><br><span class=\"line\">增加 A</span><br><span class=\"line\">離開編輯模式 ESC</span><br><span class=\"line\">存檔離開 </span><br><span class=\"line\"><span class=\"bullet\">1. </span>shift+: </span><br><span class=\"line\"><span class=\"bullet\">2. </span>wq</span><br></pre></td></tr></table></figure>\n<hr>\n<h3>登入mysql、啟用root帳號</h3>\n<h4>登入</h4>\n<figure class=\"highlight xquery\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">不用密碼</span><br><span class=\"line\">sudo mysql -u<span class=\"built_in\"> root</span> mysql</span><br><span class=\"line\">用密碼</span><br><span class=\"line\">sudo mysql -u<span class=\"built_in\"> root</span> mysql -p</span><br></pre></td></tr></table></figure>\n<h4>啟用root帳號</h4>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">UPDATE</span> <span class=\"keyword\">user</span> <span class=\"keyword\">SET</span> <span class=\"keyword\">plugin</span>=<span class=\"string\">'mysql_native_password'</span> <span class=\"keyword\">WHERE</span> <span class=\"keyword\">User</span>=<span class=\"string\">'root'</span>;</span><br></pre></td></tr></table></figure>\n<h4>重新載入特權表</h4>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">FLUSH</span> <span class=\"keyword\">PRIVILEGES</span>;</span><br></pre></td></tr></table></figure>\n<h4>設定root密碼</h4>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">sudo mysql_secure_installation</span></span><br></pre></td></tr></table></figure>\n<hr>\n<h3>安裝phpmyadmin</h3>\n<h4>下載phpmyadmin</h4>\n<p>他應該會跳出來設定環境的畫面，沒有也沒關係之後可以再設</p>\n<figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt <span class=\"keyword\">install</span> phpmyadmin php-mbstring php-gettext</span><br></pre></td></tr></table></figure>\n<h4>重啟服務</h4>\n<p>重啟服務之後ip/phpmyadmin看看有沒有看到畫面，有的話就設定好了</p>\n<figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo systemctl <span class=\"built_in\">restart</span> apache2</span><br></pre></td></tr></table></figure>\n<h4>重設phpmyadmin設定</h4>\n<p>如果顯示404 not found的話，但是我用了之後還是404就是了</p>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">sudo dpkg-reconfigure phpmyadmin</span></span><br></pre></td></tr></table></figure>\n<h4>我是執行下面指令</h4>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo ln -s /etc/phpmyadmin/apache.conf /etc/apache2/conf-available/phpmyadmin.conf</span><br><span class=\"line\">sudo a2enconf phpmyadmin</span><br><span class=\"line\">sudo<span class=\"built_in\"> service </span>apache2 reload</span><br></pre></td></tr></table></figure>\n<hr>\n<h3>MySQL常見問題</h3>\n<h4>phpmyadmin匯入資料庫跳錯誤訊息</h4>\n<p>是因為phpmyadmin有一些檔案上傳設定啥的，我們直接用command匯入</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//本機command匯入</span></span><br><span class=\"line\">mysql -u root -<span class=\"selector-tag\">p</span> DBName &lt; C:\\Users\\桌面\\BackupFile.sql</span><br><span class=\"line\"><span class=\"comment\">//還是有問題的話，可能是編碼問題導致匯入中斷</span></span><br><span class=\"line\">mysql -u root -<span class=\"selector-tag\">p</span> --default-character-set=utf8 DBName &lt; C:\\Users\\桌面\\BackupFile.sql</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//匯入遠端主機</span></span><br><span class=\"line\">mysql -u root -<span class=\"selector-tag\">p</span> -h <span class=\"number\">123.123</span>.<span class=\"number\">123.123</span> DBName &lt;backup.sql</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//匯入的時候跳這個 : 'xxxx is not allowed to connect to this MySQL server'</span></span><br><span class=\"line\"><span class=\"comment\">//直接把備份的sql透過FileZilla送過去</span></span><br><span class=\"line\">sudo apt-get install openssh-server</span><br></pre></td></tr></table></figure>\n<h4>host Is Not Allowed to Connect to This MySQL Server</h4>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//在mysql建立帳號</span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">USER</span> <span class=\"string\">'UserName'</span>@<span class=\"string\">'YourIP'</span> <span class=\"keyword\">IDENTIFIED</span> <span class=\"keyword\">BY</span> <span class=\"string\">'YourPassword'</span></span><br><span class=\"line\">//設定權限</span><br><span class=\"line\"><span class=\"keyword\">GRANT</span> <span class=\"keyword\">ALL</span> <span class=\"keyword\">PRIVILEGES</span> <span class=\"keyword\">ON</span> *.* <span class=\"keyword\">TO</span> <span class=\"string\">'UserName'</span>@<span class=\"string\">'YourIP'</span> <span class=\"keyword\">WITH</span> <span class=\"keyword\">GRANT</span> <span class=\"keyword\">OPTION</span>;</span><br><span class=\"line\">//<span class=\"keyword\">Flush</span></span><br><span class=\"line\"><span class=\"keyword\">FLUSH</span> <span class=\"keyword\">PRIVILEGES</span>;</span><br></pre></td></tr></table></figure>\n<h3>可能會用到的工具</h3>\n<figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt <span class=\"keyword\">install</span> -y git curl wget zip unzip</span><br></pre></td></tr></table></figure>"},{"title":"Jetbrains工具快捷鍵名稱","catalog":true,"comments":1,"abbrlink":25299,"date":"2020-08-07T11:13:27.000Z","_content":"\n## 快捷鍵名稱\n- 移動到方法 : Main menu\\ Navigate\\ Go to Declaration or Usages\n- 執行 : Run\n- 停止執行 : Stop\n- Debug : Debug\n- 打開所有程式碼 : Expand All\n- 收合所有程式碼 : Collapse All\n- 註解/取消註解 : Comment/Uncomment Code\n- Debug時中斷的下一步 : Run\\ Debugging\\ Actions\\ Setp Over\n- Debug時中斷的下一步進入方法 : Run\\ Debugging\\ Actions\\ Setp Into\n- 放大字體 : Editor Actions\\ Increase Font Size\n- 縮小字體 : Editor Actions\\ decrease Font Size\n- 方法抽象 : ctrl+shift+R > Extract Interface > Alt+P(全選方法)\n- 循環剪貼簿(顯示近期複製內容) : ctrl + shift + v\n### 垂直選取\nctrl + ctrl 按住不要放+ 上/下\n\n### CodeSnippet\nLiveTemplate","source":"_posts/Jetbrains工具快捷鍵名稱.md","raw":"---\ntitle: Jetbrains工具快捷鍵名稱\ncatalog: true\ncomments: true\ntags:\n  - Jetbrains\n  - Rider\n  - Pycharm\n  - DataGrip\nabbrlink: 25299\ncategories: uncategorized\ndate: 2020-08-07 19:13:27\n---\n\n## 快捷鍵名稱\n- 移動到方法 : Main menu\\ Navigate\\ Go to Declaration or Usages\n- 執行 : Run\n- 停止執行 : Stop\n- Debug : Debug\n- 打開所有程式碼 : Expand All\n- 收合所有程式碼 : Collapse All\n- 註解/取消註解 : Comment/Uncomment Code\n- Debug時中斷的下一步 : Run\\ Debugging\\ Actions\\ Setp Over\n- Debug時中斷的下一步進入方法 : Run\\ Debugging\\ Actions\\ Setp Into\n- 放大字體 : Editor Actions\\ Increase Font Size\n- 縮小字體 : Editor Actions\\ decrease Font Size\n- 方法抽象 : ctrl+shift+R > Extract Interface > Alt+P(全選方法)\n- 循環剪貼簿(顯示近期複製內容) : ctrl + shift + v\n### 垂直選取\nctrl + ctrl 按住不要放+ 上/下\n\n### CodeSnippet\nLiveTemplate","slug":"Jetbrains工具快捷鍵名稱","published":1,"updated":"2024-11-21T02:20:00.161Z","layout":"post","photos":[],"link":"","_id":"cm3xvfy7w0015ewi9cj04gxa0","content":"<h2><span id=\"快捷鍵名稱\">快捷鍵名稱</span></h2>\n<ul>\n<li>移動到方法 : Main menu\\ Navigate\\ Go to Declaration or Usages</li>\n<li>執行 : Run</li>\n<li>停止執行 : Stop</li>\n<li>Debug : Debug</li>\n<li>打開所有程式碼 : Expand All</li>\n<li>收合所有程式碼 : Collapse All</li>\n<li>註解/取消註解 : Comment/Uncomment Code</li>\n<li>Debug時中斷的下一步 : Run\\ Debugging\\ Actions\\ Setp Over</li>\n<li>Debug時中斷的下一步進入方法 : Run\\ Debugging\\ Actions\\ Setp Into</li>\n<li>放大字體 : Editor Actions\\ Increase Font Size</li>\n<li>縮小字體 : Editor Actions\\ decrease Font Size</li>\n<li>方法抽象 : ctrl+shift+R &gt; Extract Interface &gt; Alt+P(全選方法)</li>\n<li>循環剪貼簿(顯示近期複製內容) : ctrl + shift + v</li>\n</ul>\n<h3><span id=\"垂直選取\">垂直選取</span></h3>\n<p>ctrl + ctrl 按住不要放+ 上/下</p>\n<h3><span id=\"codesnippet\">CodeSnippet</span></h3>\n<p>LiveTemplate</p>\n","site":{"data":{}},"excerpt":"","more":"<h2>快捷鍵名稱</h2>\n<ul>\n<li>移動到方法 : Main menu\\ Navigate\\ Go to Declaration or Usages</li>\n<li>執行 : Run</li>\n<li>停止執行 : Stop</li>\n<li>Debug : Debug</li>\n<li>打開所有程式碼 : Expand All</li>\n<li>收合所有程式碼 : Collapse All</li>\n<li>註解/取消註解 : Comment/Uncomment Code</li>\n<li>Debug時中斷的下一步 : Run\\ Debugging\\ Actions\\ Setp Over</li>\n<li>Debug時中斷的下一步進入方法 : Run\\ Debugging\\ Actions\\ Setp Into</li>\n<li>放大字體 : Editor Actions\\ Increase Font Size</li>\n<li>縮小字體 : Editor Actions\\ decrease Font Size</li>\n<li>方法抽象 : ctrl+shift+R &gt; Extract Interface &gt; Alt+P(全選方法)</li>\n<li>循環剪貼簿(顯示近期複製內容) : ctrl + shift + v</li>\n</ul>\n<h3>垂直選取</h3>\n<p>ctrl + ctrl 按住不要放+ 上/下</p>\n<h3>CodeSnippet</h3>\n<p>LiveTemplate</p>\n"},{"title":"Linux背景執行","catalog":true,"comments":1,"abbrlink":52235,"date":"2021-01-07T07:45:31.000Z","_content":"# Linux背景執行程式\n如果SSH到Linux，這樣畫面會卡住沒辦法做別的事\n```batch\npython xxx.py\n```\n只要指令後面加一個 '&'，他就不會卡在那邊\n```batch\npython xxx.py &\n```\n\n可以用'jobs'查詢目前在執行的動作有那些\n```batch\njobs\n```\n\n使用fg切換目前的環境\n```batch\nfg %1\n```\n\n使用kill停止環境\n```batch\nkill jobsID\n```\n","source":"_posts/Linux背景執行.md","raw":"---\ntitle: Linux背景執行\ncatalog: true\ncomments: true\nabbrlink: 52235\ncategories: uncategorized\ndate: 2021-01-07 15:45:31\ntags:\n- Linux\n---\n# Linux背景執行程式\n如果SSH到Linux，這樣畫面會卡住沒辦法做別的事\n```batch\npython xxx.py\n```\n只要指令後面加一個 '&'，他就不會卡在那邊\n```batch\npython xxx.py &\n```\n\n可以用'jobs'查詢目前在執行的動作有那些\n```batch\njobs\n```\n\n使用fg切換目前的環境\n```batch\nfg %1\n```\n\n使用kill停止環境\n```batch\nkill jobsID\n```\n","slug":"Linux背景執行","published":1,"updated":"2024-11-21T02:20:00.162Z","layout":"post","photos":[],"link":"","_id":"cm3xvfy7y0019ewi964kigk5x","content":"<h1><span id=\"linux背景執行程式\">Linux背景執行程式</span></h1>\n<p>如果SSH到Linux，這樣畫面會卡住沒辦法做別的事</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python xxx.py</span><br></pre></td></tr></table></figure>\n<p>只要指令後面加一個 ‘&amp;’，他就不會卡在那邊</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python xxx.py &amp;</span><br></pre></td></tr></table></figure>\n<p>可以用’jobs’查詢目前在執行的動作有那些</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jobs</span><br></pre></td></tr></table></figure>\n<p>使用fg切換目前的環境</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fg %1</span><br></pre></td></tr></table></figure>\n<p>使用kill停止環境</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kill jobsID</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1>Linux背景執行程式</h1>\n<p>如果SSH到Linux，這樣畫面會卡住沒辦法做別的事</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python xxx.py</span><br></pre></td></tr></table></figure>\n<p>只要指令後面加一個 ‘&amp;’，他就不會卡在那邊</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python xxx.py &amp;</span><br></pre></td></tr></table></figure>\n<p>可以用’jobs’查詢目前在執行的動作有那些</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jobs</span><br></pre></td></tr></table></figure>\n<p>使用fg切換目前的環境</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fg %1</span><br></pre></td></tr></table></figure>\n<p>使用kill停止環境</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kill jobsID</span><br></pre></td></tr></table></figure>\n"},{"title":"MS-SQL Temp Table","catalog":true,"abbrlink":"d825a7ba","date":"2020-07-02T07:54:53.000Z","subtitle":null,"header-img":null,"_content":"# MS-SQL  Temp Table\n##### #TempTable\n資料表真的會存在資料庫裡面,要完要記得Drop掉\n```SQL\nCREATE TABLE #temp\n(\n\tPno\t\t\tint,\n\tSno\t\t\tint,\n\tQty\t\t\tdecimal(19,5),\n\tCost\t\t\tdecimal(19,5),\n\t[Date]\t\t\tdate,\n\tProfit\t\t\tdecimal(19,5),\n\tClosePrice\t\tdecimal(19,5)\n)\n\n-- do something\n\ndrop table #temp\n```\n##### @TempTable\n在預存程序裡面,用完之後過15秒就會自己drop掉了,很方便\n```SQL\nDECLARE  @temp AS TABLE\n(\n    ID BIGINT,\n    [NAME] NVARCHAR(20)\n)\n```","source":"_posts/MS-SQL-Temp-Table.md","raw":"---\ntitle: MS-SQL Temp Table\ncatalog: true\ntags:\n  - SQL\nabbrlink: d825a7ba\ncategories: uncategorized\ndate: 2020-07-02 15:54:53\nsubtitle:\nheader-img:\n---\n# MS-SQL  Temp Table\n##### #TempTable\n資料表真的會存在資料庫裡面,要完要記得Drop掉\n```SQL\nCREATE TABLE #temp\n(\n\tPno\t\t\tint,\n\tSno\t\t\tint,\n\tQty\t\t\tdecimal(19,5),\n\tCost\t\t\tdecimal(19,5),\n\t[Date]\t\t\tdate,\n\tProfit\t\t\tdecimal(19,5),\n\tClosePrice\t\tdecimal(19,5)\n)\n\n-- do something\n\ndrop table #temp\n```\n##### @TempTable\n在預存程序裡面,用完之後過15秒就會自己drop掉了,很方便\n```SQL\nDECLARE  @temp AS TABLE\n(\n    ID BIGINT,\n    [NAME] NVARCHAR(20)\n)\n```","slug":"MS-SQL-Temp-Table","published":1,"updated":"2024-11-21T02:20:00.163Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cm3xvfy7y001bewi9usde59wn","content":"<h1><span id=\"ms-sql-temp-table\">MS-SQL  Temp Table</span></h1>\n<h5><span id=\"temptable\">#TempTable</span></h5>\n<p>資料表真的會存在資料庫裡面,要完要記得Drop掉</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> <span class=\"comment\">#temp</span></span><br><span class=\"line\">(</span><br><span class=\"line\">\tPno\t\t\t<span class=\"built_in\">int</span>,</span><br><span class=\"line\">\tSno\t\t\t<span class=\"built_in\">int</span>,</span><br><span class=\"line\">\tQty\t\t\t<span class=\"built_in\">decimal</span>(<span class=\"number\">19</span>,<span class=\"number\">5</span>),</span><br><span class=\"line\">\t<span class=\"keyword\">Cost</span>\t\t\t<span class=\"built_in\">decimal</span>(<span class=\"number\">19</span>,<span class=\"number\">5</span>),</span><br><span class=\"line\">\t[<span class=\"built_in\">Date</span>]\t\t\t<span class=\"built_in\">date</span>,</span><br><span class=\"line\">\tProfit\t\t\t<span class=\"built_in\">decimal</span>(<span class=\"number\">19</span>,<span class=\"number\">5</span>),</span><br><span class=\"line\">\tClosePrice\t\t<span class=\"built_in\">decimal</span>(<span class=\"number\">19</span>,<span class=\"number\">5</span>)</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- do something</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">drop</span> <span class=\"keyword\">table</span> <span class=\"comment\">#temp</span></span><br></pre></td></tr></table></figure>\n<h5><span id=\"temptable\">@TempTable</span></h5>\n<p>在預存程序裡面,用完之後過15秒就會自己drop掉了,很方便</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">DECLARE</span>  @temp <span class=\"keyword\">AS</span> <span class=\"keyword\">TABLE</span></span><br><span class=\"line\">(</span><br><span class=\"line\">    <span class=\"keyword\">ID</span> <span class=\"built_in\">BIGINT</span>,</span><br><span class=\"line\">    [<span class=\"keyword\">NAME</span>] <span class=\"keyword\">NVARCHAR</span>(<span class=\"number\">20</span>)</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1>MS-SQL  Temp Table</h1>\n<h5>#TempTable</h5>\n<p>資料表真的會存在資料庫裡面,要完要記得Drop掉</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> <span class=\"comment\">#temp</span></span><br><span class=\"line\">(</span><br><span class=\"line\">\tPno\t\t\t<span class=\"built_in\">int</span>,</span><br><span class=\"line\">\tSno\t\t\t<span class=\"built_in\">int</span>,</span><br><span class=\"line\">\tQty\t\t\t<span class=\"built_in\">decimal</span>(<span class=\"number\">19</span>,<span class=\"number\">5</span>),</span><br><span class=\"line\">\t<span class=\"keyword\">Cost</span>\t\t\t<span class=\"built_in\">decimal</span>(<span class=\"number\">19</span>,<span class=\"number\">5</span>),</span><br><span class=\"line\">\t[<span class=\"built_in\">Date</span>]\t\t\t<span class=\"built_in\">date</span>,</span><br><span class=\"line\">\tProfit\t\t\t<span class=\"built_in\">decimal</span>(<span class=\"number\">19</span>,<span class=\"number\">5</span>),</span><br><span class=\"line\">\tClosePrice\t\t<span class=\"built_in\">decimal</span>(<span class=\"number\">19</span>,<span class=\"number\">5</span>)</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- do something</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">drop</span> <span class=\"keyword\">table</span> <span class=\"comment\">#temp</span></span><br></pre></td></tr></table></figure>\n<h5>@TempTable</h5>\n<p>在預存程序裡面,用完之後過15秒就會自己drop掉了,很方便</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">DECLARE</span>  @temp <span class=\"keyword\">AS</span> <span class=\"keyword\">TABLE</span></span><br><span class=\"line\">(</span><br><span class=\"line\">    <span class=\"keyword\">ID</span> <span class=\"built_in\">BIGINT</span>,</span><br><span class=\"line\">    [<span class=\"keyword\">NAME</span>] <span class=\"keyword\">NVARCHAR</span>(<span class=\"number\">20</span>)</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>"},{"title":"NUnit","catalog":true,"abbrlink":"7c2c6d44","date":"2020-07-06T05:45:39.000Z","subtitle":null,"header-img":null,"_content":"## NUnit\n---\n### NUnit是什麼\nNUnit是一種測試框架，常見的還有MSTest、xUnit，但因為我需要免費的工具(AXOCover)去看測試涵蓋率，所以選了一個AXOCover有支援的測試框架\n\n### Visual Studio 使用NUnit執行單元測試\n安裝visual studio NUnit2 test adapter extension<br>\n一定要裝，不然不能執行NUnit測試框架(Visual Studio 2017 Community)\n![NUnit Adapter](nunittestadapter.PNG)\n\n安裝完在開發的專案裡面開一個NUnit的測試專案\n\n\n\n\n### 測試怎麼寫\n測試專案結構大概長這樣，有SetUp跟TestCase Attribute\n\n```csharp\npublic class Tests\n{\n    [SetUp]\n    public void Setup()\n    {\n    }\n\n    [TestCase]\n    public void Test1()\n    {\n        Assert.Pass();\n    }\n}\n```\n####  SetUp\nSetUp attribute 是每個測試(TestCase)執行之前都會執行的動作，像是把要測試的物件產生實例(instance)就可以放在Setup方法裡面，要注意這邊他是依照SetUp Attribute去做初始化的動作，不是因為方法名稱才會有這樣的行為\n```csharp\npublic class Tests\n{\n    [SetUp]\n    public void Setup()\n    {\n    }\n}\n```\n\n#### TestCase\nTestCase 就是每個測試的案例\n```csharp\npublic class Tests\n{\n    [TestCase]\n    public void TestPropertyXXX()\n    {\n    }\n}\n```\n#### 範例\n**要先把方案(Solution)中 MSTest的專案卸載掉，不然Visual Studio會只執行MSTest專案的測試**\n```csharp\npublic class Tests\n{\n  //宣告變數vm\n  ViewModel vm = null;\n\n  //初始化，產生實例\n  [SetUp]\n  public void Setup()\n  {\n      vm = new ViewModel();\n  }\n\n  //測試單元\n  [Test]\n  public void Test1()\n  {\n      //預期值\n      var Expected = \"Leo\";\n      //設定物件屬性(test object setter)\n      vm.Field = Expected;\n      //檢查物件屬性是不是跟預期相同\n      Assert.AreEqual(vm.Field, Expected);\n  }\n}\n```\n\n#### 執行測試\n![Origin Test Explorer](testExplorer.PNG)\n\n測試結果\n![NUnitResult](axoResult.PNG)\n\n---\n## AXOCover - 使用AXOCover看測試涵蓋率\n### 安裝visual studio AXO Cover extension\n![Axo Cover](axo.PNG)\n\n如果沒裝，執行結果大概長這樣\n![NUnitResult](nunitResult.PNG)\n  \n如果有裝的話..\n![NUnitResult](axoResult.PNG)\n  \n\nAXO Cover - 測試涵蓋率\n![NUnitResult](axoCover.PNG)\n\n在Code中了解目前測試的狀態(已測試、尚未測試、部分測試)更清楚問題可能會發生在那些地方\n![NUnitResult](cover.PNG)\n  \n還能輸出報表，透過Risk Hotspots知道自己程式哪邊可能有問題哪邊寫得很爛(Scrap Score)，可以用這個垃圾分數當成依據，去把程式改得更好，或是從根本調整自己寫程式的習慣\n![NUnitResult](Report.PNG)\n\n### 使用TestCase Attribute\n如果客戶發生問題，可以針對他的情境去測試，不用額外再開UI出來，可以在測試專案中，組出來User的操作，模擬問題\n![NUnitAttribute](Attribute.PNG)\n![NUnitAttributeResult](NUnitAttrNewResult.PNG)\n\n### 為啥要寫測試\n常常會有那種改A壞B、改B壞C，如果改完程式有測出來問題那就算了，往往都是改了之後只針對當下的情境去測試，沒有測到其他的情況，最後發現問題的時候都是資料已經錯很久了，要花時間查、還要想辦法把有問題的資料修正，很麻煩\n\n### 啥時要寫測試\n有時間就寫，你不知道什麼時候程式會壞掉或是被誰改壞掉，如果有寫測試，每次Pull完就可以執行一下，看程式還能不能正常運作、哪個地方有問題。<br>\n就算公司沒人在做，你也可以自己寫給自己用，最好是開發時估工時就把寫測試的時間算進去，code寫完過了一年三年，中間就算經手很多人，只要當初的測試依跑，就能知道到底還有多少地方可以正常執行，還可以透過測試知道他運作的流程是什麼","source":"_posts/NUnit.md","raw":"---\ntitle: NUnit\ncatalog: true\ntags:\n  - C#\n  - NUnit\n  - UnitTest\n  - 單元測試\n  - AXOCover\nabbrlink: 7c2c6d44\ncategories: uncategorized\ndate: 2020-07-06 13:45:39\nsubtitle:\nheader-img:\n---\n## NUnit\n---\n### NUnit是什麼\nNUnit是一種測試框架，常見的還有MSTest、xUnit，但因為我需要免費的工具(AXOCover)去看測試涵蓋率，所以選了一個AXOCover有支援的測試框架\n\n### Visual Studio 使用NUnit執行單元測試\n安裝visual studio NUnit2 test adapter extension<br>\n一定要裝，不然不能執行NUnit測試框架(Visual Studio 2017 Community)\n![NUnit Adapter](nunittestadapter.PNG)\n\n安裝完在開發的專案裡面開一個NUnit的測試專案\n\n\n\n\n### 測試怎麼寫\n測試專案結構大概長這樣，有SetUp跟TestCase Attribute\n\n```csharp\npublic class Tests\n{\n    [SetUp]\n    public void Setup()\n    {\n    }\n\n    [TestCase]\n    public void Test1()\n    {\n        Assert.Pass();\n    }\n}\n```\n####  SetUp\nSetUp attribute 是每個測試(TestCase)執行之前都會執行的動作，像是把要測試的物件產生實例(instance)就可以放在Setup方法裡面，要注意這邊他是依照SetUp Attribute去做初始化的動作，不是因為方法名稱才會有這樣的行為\n```csharp\npublic class Tests\n{\n    [SetUp]\n    public void Setup()\n    {\n    }\n}\n```\n\n#### TestCase\nTestCase 就是每個測試的案例\n```csharp\npublic class Tests\n{\n    [TestCase]\n    public void TestPropertyXXX()\n    {\n    }\n}\n```\n#### 範例\n**要先把方案(Solution)中 MSTest的專案卸載掉，不然Visual Studio會只執行MSTest專案的測試**\n```csharp\npublic class Tests\n{\n  //宣告變數vm\n  ViewModel vm = null;\n\n  //初始化，產生實例\n  [SetUp]\n  public void Setup()\n  {\n      vm = new ViewModel();\n  }\n\n  //測試單元\n  [Test]\n  public void Test1()\n  {\n      //預期值\n      var Expected = \"Leo\";\n      //設定物件屬性(test object setter)\n      vm.Field = Expected;\n      //檢查物件屬性是不是跟預期相同\n      Assert.AreEqual(vm.Field, Expected);\n  }\n}\n```\n\n#### 執行測試\n![Origin Test Explorer](testExplorer.PNG)\n\n測試結果\n![NUnitResult](axoResult.PNG)\n\n---\n## AXOCover - 使用AXOCover看測試涵蓋率\n### 安裝visual studio AXO Cover extension\n![Axo Cover](axo.PNG)\n\n如果沒裝，執行結果大概長這樣\n![NUnitResult](nunitResult.PNG)\n  \n如果有裝的話..\n![NUnitResult](axoResult.PNG)\n  \n\nAXO Cover - 測試涵蓋率\n![NUnitResult](axoCover.PNG)\n\n在Code中了解目前測試的狀態(已測試、尚未測試、部分測試)更清楚問題可能會發生在那些地方\n![NUnitResult](cover.PNG)\n  \n還能輸出報表，透過Risk Hotspots知道自己程式哪邊可能有問題哪邊寫得很爛(Scrap Score)，可以用這個垃圾分數當成依據，去把程式改得更好，或是從根本調整自己寫程式的習慣\n![NUnitResult](Report.PNG)\n\n### 使用TestCase Attribute\n如果客戶發生問題，可以針對他的情境去測試，不用額外再開UI出來，可以在測試專案中，組出來User的操作，模擬問題\n![NUnitAttribute](Attribute.PNG)\n![NUnitAttributeResult](NUnitAttrNewResult.PNG)\n\n### 為啥要寫測試\n常常會有那種改A壞B、改B壞C，如果改完程式有測出來問題那就算了，往往都是改了之後只針對當下的情境去測試，沒有測到其他的情況，最後發現問題的時候都是資料已經錯很久了，要花時間查、還要想辦法把有問題的資料修正，很麻煩\n\n### 啥時要寫測試\n有時間就寫，你不知道什麼時候程式會壞掉或是被誰改壞掉，如果有寫測試，每次Pull完就可以執行一下，看程式還能不能正常運作、哪個地方有問題。<br>\n就算公司沒人在做，你也可以自己寫給自己用，最好是開發時估工時就把寫測試的時間算進去，code寫完過了一年三年，中間就算經手很多人，只要當初的測試依跑，就能知道到底還有多少地方可以正常執行，還可以透過測試知道他運作的流程是什麼","slug":"NUnit","published":1,"updated":"2024-11-21T02:20:00.164Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cm3xvfy7z001dewi9n48xsoix","content":"<h2><span id=\"nunit\">NUnit</span></h2>\n<hr>\n<h3><span id=\"nunit是什麼\">NUnit是什麼</span></h3>\n<p>NUnit是一種測試框架，常見的還有MSTest、xUnit，但因為我需要免費的工具(AXOCover)去看測試涵蓋率，所以選了一個AXOCover有支援的測試框架</p>\n<h3><span id=\"visual-studio-使用nunit執行單元測試\">Visual Studio 使用NUnit執行單元測試</span></h3>\n<p>安裝visual studio NUnit2 test adapter extension<br><br>\n一定要裝，不然不能執行NUnit測試框架(Visual Studio 2017 Community)<br>\n<img src=\"nunittestadapter.PNG\" alt=\"NUnit Adapter\"></p>\n<p>安裝完在開發的專案裡面開一個NUnit的測試專案</p>\n<h3><span id=\"測試怎麼寫\">測試怎麼寫</span></h3>\n<p>測試專案結構大概長這樣，有SetUp跟TestCase Attribute</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Tests</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    [<span class=\"meta\">SetUp</span>]</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Setup</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    [<span class=\"meta\">TestCase</span>]</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Test1</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        Assert.Pass();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4><span id=\"setup\">SetUp</span></h4>\n<p>SetUp attribute 是每個測試(TestCase)執行之前都會執行的動作，像是把要測試的物件產生實例(instance)就可以放在Setup方法裡面，要注意這邊他是依照SetUp Attribute去做初始化的動作，不是因為方法名稱才會有這樣的行為</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Tests</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    [<span class=\"meta\">SetUp</span>]</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Setup</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4><span id=\"testcase\">TestCase</span></h4>\n<p>TestCase 就是每個測試的案例</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Tests</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    [<span class=\"meta\">TestCase</span>]</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">TestPropertyXXX</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4><span id=\"範例\">範例</span></h4>\n<p><strong>要先把方案(Solution)中 MSTest的專案卸載掉，不然Visual Studio會只執行MSTest專案的測試</strong></p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Tests</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"comment\">//宣告變數vm</span></span><br><span class=\"line\">  ViewModel vm = <span class=\"literal\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//初始化，產生實例</span></span><br><span class=\"line\">  [<span class=\"meta\">SetUp</span>]</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Setup</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>  &#123;</span><br><span class=\"line\">      vm = <span class=\"keyword\">new</span> ViewModel();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//測試單元</span></span><br><span class=\"line\">  [<span class=\"meta\">Test</span>]</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Test1</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>  &#123;</span><br><span class=\"line\">      <span class=\"comment\">//預期值</span></span><br><span class=\"line\">      <span class=\"keyword\">var</span> Expected = <span class=\"string\">\"Leo\"</span>;</span><br><span class=\"line\">      <span class=\"comment\">//設定物件屬性(test object setter)</span></span><br><span class=\"line\">      vm.Field = Expected;</span><br><span class=\"line\">      <span class=\"comment\">//檢查物件屬性是不是跟預期相同</span></span><br><span class=\"line\">      Assert.AreEqual(vm.Field, Expected);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4><span id=\"執行測試\">執行測試</span></h4>\n<p><img src=\"testExplorer.PNG\" alt=\"Origin Test Explorer\"></p>\n<p>測試結果<br>\n<img src=\"axoResult.PNG\" alt=\"NUnitResult\"></p>\n<hr>\n<h2><span id=\"axocover-使用axocover看測試涵蓋率\">AXOCover - 使用AXOCover看測試涵蓋率</span></h2>\n<h3><span id=\"安裝visual-studio-axo-cover-extension\">安裝visual studio AXO Cover extension</span></h3>\n<p><img src=\"axo.PNG\" alt=\"Axo Cover\"></p>\n<p>如果沒裝，執行結果大概長這樣<br>\n<img src=\"nunitResult.PNG\" alt=\"NUnitResult\"></p>\n<p>如果有裝的話…<br>\n<img src=\"axoResult.PNG\" alt=\"NUnitResult\"></p>\n<p>AXO Cover - 測試涵蓋率<br>\n<img src=\"axoCover.PNG\" alt=\"NUnitResult\"></p>\n<p>在Code中了解目前測試的狀態(已測試、尚未測試、部分測試)更清楚問題可能會發生在那些地方<br>\n<img src=\"cover.PNG\" alt=\"NUnitResult\"></p>\n<p>還能輸出報表，透過Risk Hotspots知道自己程式哪邊可能有問題哪邊寫得很爛(Scrap Score)，可以用這個垃圾分數當成依據，去把程式改得更好，或是從根本調整自己寫程式的習慣<br>\n<img src=\"Report.PNG\" alt=\"NUnitResult\"></p>\n<h3><span id=\"使用testcase-attribute\">使用TestCase Attribute</span></h3>\n<p>如果客戶發生問題，可以針對他的情境去測試，不用額外再開UI出來，可以在測試專案中，組出來User的操作，模擬問題<br>\n<img src=\"Attribute.PNG\" alt=\"NUnitAttribute\"><br>\n<img src=\"NUnitAttrNewResult.PNG\" alt=\"NUnitAttributeResult\"></p>\n<h3><span id=\"為啥要寫測試\">為啥要寫測試</span></h3>\n<p>常常會有那種改A壞B、改B壞C，如果改完程式有測出來問題那就算了，往往都是改了之後只針對當下的情境去測試，沒有測到其他的情況，最後發現問題的時候都是資料已經錯很久了，要花時間查、還要想辦法把有問題的資料修正，很麻煩</p>\n<h3><span id=\"啥時要寫測試\">啥時要寫測試</span></h3>\n<p>有時間就寫，你不知道什麼時候程式會壞掉或是被誰改壞掉，如果有寫測試，每次Pull完就可以執行一下，看程式還能不能正常運作、哪個地方有問題。<br><br>\n就算公司沒人在做，你也可以自己寫給自己用，最好是開發時估工時就把寫測試的時間算進去，code寫完過了一年三年，中間就算經手很多人，只要當初的測試依跑，就能知道到底還有多少地方可以正常執行，還可以透過測試知道他運作的流程是什麼</p>\n","site":{"data":{}},"excerpt":"","more":"<h2>NUnit</h2>\n<hr>\n<h3>NUnit是什麼</h3>\n<p>NUnit是一種測試框架，常見的還有MSTest、xUnit，但因為我需要免費的工具(AXOCover)去看測試涵蓋率，所以選了一個AXOCover有支援的測試框架</p>\n<h3>Visual Studio 使用NUnit執行單元測試</h3>\n<p>安裝visual studio NUnit2 test adapter extension<br><br>\n一定要裝，不然不能執行NUnit測試框架(Visual Studio 2017 Community)<br>\n<img src=\"nunittestadapter.PNG\" alt=\"NUnit Adapter\"></p>\n<p>安裝完在開發的專案裡面開一個NUnit的測試專案</p>\n<h3>測試怎麼寫</h3>\n<p>測試專案結構大概長這樣，有SetUp跟TestCase Attribute</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Tests</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    [<span class=\"meta\">SetUp</span>]</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Setup</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    [<span class=\"meta\">TestCase</span>]</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Test1</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        Assert.Pass();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4>SetUp</h4>\n<p>SetUp attribute 是每個測試(TestCase)執行之前都會執行的動作，像是把要測試的物件產生實例(instance)就可以放在Setup方法裡面，要注意這邊他是依照SetUp Attribute去做初始化的動作，不是因為方法名稱才會有這樣的行為</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Tests</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    [<span class=\"meta\">SetUp</span>]</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Setup</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4>TestCase</h4>\n<p>TestCase 就是每個測試的案例</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Tests</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    [<span class=\"meta\">TestCase</span>]</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">TestPropertyXXX</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4>範例</h4>\n<p><strong>要先把方案(Solution)中 MSTest的專案卸載掉，不然Visual Studio會只執行MSTest專案的測試</strong></p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Tests</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"comment\">//宣告變數vm</span></span><br><span class=\"line\">  ViewModel vm = <span class=\"literal\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//初始化，產生實例</span></span><br><span class=\"line\">  [<span class=\"meta\">SetUp</span>]</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Setup</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>  &#123;</span><br><span class=\"line\">      vm = <span class=\"keyword\">new</span> ViewModel();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//測試單元</span></span><br><span class=\"line\">  [<span class=\"meta\">Test</span>]</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Test1</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>  &#123;</span><br><span class=\"line\">      <span class=\"comment\">//預期值</span></span><br><span class=\"line\">      <span class=\"keyword\">var</span> Expected = <span class=\"string\">\"Leo\"</span>;</span><br><span class=\"line\">      <span class=\"comment\">//設定物件屬性(test object setter)</span></span><br><span class=\"line\">      vm.Field = Expected;</span><br><span class=\"line\">      <span class=\"comment\">//檢查物件屬性是不是跟預期相同</span></span><br><span class=\"line\">      Assert.AreEqual(vm.Field, Expected);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4>執行測試</h4>\n<p><img src=\"testExplorer.PNG\" alt=\"Origin Test Explorer\"></p>\n<p>測試結果<br>\n<img src=\"axoResult.PNG\" alt=\"NUnitResult\"></p>\n<hr>\n<h2>AXOCover - 使用AXOCover看測試涵蓋率</h2>\n<h3>安裝visual studio AXO Cover extension</h3>\n<p><img src=\"axo.PNG\" alt=\"Axo Cover\"></p>\n<p>如果沒裝，執行結果大概長這樣<br>\n<img src=\"nunitResult.PNG\" alt=\"NUnitResult\"></p>\n<p>如果有裝的話…<br>\n<img src=\"axoResult.PNG\" alt=\"NUnitResult\"></p>\n<p>AXO Cover - 測試涵蓋率<br>\n<img src=\"axoCover.PNG\" alt=\"NUnitResult\"></p>\n<p>在Code中了解目前測試的狀態(已測試、尚未測試、部分測試)更清楚問題可能會發生在那些地方<br>\n<img src=\"cover.PNG\" alt=\"NUnitResult\"></p>\n<p>還能輸出報表，透過Risk Hotspots知道自己程式哪邊可能有問題哪邊寫得很爛(Scrap Score)，可以用這個垃圾分數當成依據，去把程式改得更好，或是從根本調整自己寫程式的習慣<br>\n<img src=\"Report.PNG\" alt=\"NUnitResult\"></p>\n<h3>使用TestCase Attribute</h3>\n<p>如果客戶發生問題，可以針對他的情境去測試，不用額外再開UI出來，可以在測試專案中，組出來User的操作，模擬問題<br>\n<img src=\"Attribute.PNG\" alt=\"NUnitAttribute\"><br>\n<img src=\"NUnitAttrNewResult.PNG\" alt=\"NUnitAttributeResult\"></p>\n<h3>為啥要寫測試</h3>\n<p>常常會有那種改A壞B、改B壞C，如果改完程式有測出來問題那就算了，往往都是改了之後只針對當下的情境去測試，沒有測到其他的情況，最後發現問題的時候都是資料已經錯很久了，要花時間查、還要想辦法把有問題的資料修正，很麻煩</p>\n<h3>啥時要寫測試</h3>\n<p>有時間就寫，你不知道什麼時候程式會壞掉或是被誰改壞掉，如果有寫測試，每次Pull完就可以執行一下，看程式還能不能正常運作、哪個地方有問題。<br><br>\n就算公司沒人在做，你也可以自己寫給自己用，最好是開發時估工時就把寫測試的時間算進去，code寫完過了一年三年，中間就算經手很多人，只要當初的測試依跑，就能知道到底還有多少地方可以正常執行，還可以透過測試知道他運作的流程是什麼</p>\n"},{"title":"Powerful Commit Message","catalog":true,"abbrlink":"6ac73def","date":"2020-07-02T11:42:30.000Z","subtitle":null,"header-img":null,"_content":"\n#### Make git commit more powerful\n##### 1.準備一張充滿力量的圖片\n![Image](powerfulD.jpg)\n##### 2.用工具把圖片轉換成文字\n[Tool](https://manytools.org/hacker-tools/convert-images-to-ascii-art/)\n##### 3.commit上去\n![ConvertResult](powerfulCommit.png)","source":"_posts/Powerful-Commit-Message.md","raw":"---\ntitle: Powerful Commit Message\ncatalog: true\ntags:\n  - git\nabbrlink: 6ac73def\ncategories: uncategorized\ndate: 2020-07-02 19:42:30\nsubtitle:\nheader-img:\n---\n\n#### Make git commit more powerful\n##### 1.準備一張充滿力量的圖片\n![Image](powerfulD.jpg)\n##### 2.用工具把圖片轉換成文字\n[Tool](https://manytools.org/hacker-tools/convert-images-to-ascii-art/)\n##### 3.commit上去\n![ConvertResult](powerfulCommit.png)","slug":"Powerful-Commit-Message","published":1,"updated":"2024-11-21T02:20:00.172Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cm3xvfy81001hewi9zmrhmof5","content":"<h4><span id=\"make-git-commit-more-powerful\">Make git commit more powerful</span></h4>\n<h5><span id=\"1準備一張充滿力量的圖片\">1.準備一張充滿力量的圖片</span></h5>\n<p><img src=\"powerfulD.jpg\" alt=\"Image\"></p>\n<h5><span id=\"2用工具把圖片轉換成文字\">2.用工具把圖片轉換成文字</span></h5>\n<p><a href=\"https://manytools.org/hacker-tools/convert-images-to-ascii-art/\" target=\"_blank\" rel=\"noopener\">Tool</a></p>\n<h5><span id=\"3commit上去\">3.commit上去</span></h5>\n<p><img src=\"powerfulCommit.png\" alt=\"ConvertResult\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h4>Make git commit more powerful</h4>\n<h5>1.準備一張充滿力量的圖片</h5>\n<p><img src=\"powerfulD.jpg\" alt=\"Image\"></p>\n<h5>2.用工具把圖片轉換成文字</h5>\n<p><a href=\"https://manytools.org/hacker-tools/convert-images-to-ascii-art/\" target=\"_blank\" rel=\"noopener\">Tool</a></p>\n<h5>3.commit上去</h5>\n<p><img src=\"powerfulCommit.png\" alt=\"ConvertResult\"></p>\n"},{"title":"Python-Request","catalog":true,"comments":1,"abbrlink":10923,"date":"2020-08-27T09:56:30.000Z","_content":"\n#Requests\n\n### using library\n安裝\n```python\npip install requests\n```\n引用\n```python\nimport requests\n```\n### 基本用法\n```python\nrequests.get('url')\nrequests.post('url', data={'key':'value'})\n```\n#### 常遇到問題－Encoding\n看到奇怪的字\n```python\n# \\xe7\nresult.encoding = 'utf-8'\nprint(result.text)\n#print(result.content) 會沒有用\n```\n---\n#### Demo - Requests.Post\n```python\nresult = requests.post(\"http://...\", headers = localHeader, params = localParams, cookies=localCookie)\n```\n##### headers\n動態換header<br>\n```python\n# import random\nheaderlist = [\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36\",\n    \"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36 OPR/43.0.2442.991\",\n        \"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36 OPR/42.0.2393.94\",\n        \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.78 Safari/537.36 OPR/47.0.2631.39\",\n        \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.113 Safari/537.36\",\n        \"Mozilla/5.0 (Windows NT 5.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.90 Safari/537.36\",\n        \"Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36\",\n        \"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:54.0) Gecko/20100101 Firefox/54.0\",\n        \"Mozilla/5.0 (Windows NT 10.0; WOW64; rv:54.0) Gecko/20100101 Firefox/54.0\",\n        \"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:56.0) Gecko/20100101 Firefox/56.0\",\n        \"Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko\"]\nuser_agent = random.choice(headerlist)\nheaders = {'User-Agent': user_agent}\nresp = requests.get(url, headers=headers, data=payload)\n```\n\n##### params\nparams是post類型的參數，會依照Header中的 Content-Type 來決定\n```\nContent-Type : application/x-www-form-urlencoded\n```\n主要會分成下面幾種\n- 寫在網址後面\n- Body中\n  - none\n  - form-data\n  - x-www-form-urlencoded\n  - raw\n  - binary\n  - GraphQL\n  - \n\n就是要用x-www-form-urlencoded類型去送get的參數\n\n#### cookies\n取得上一個request的cookie，有些網頁會一直用同一個cookie\n```python\nresult = requests.post(....)\ncookie = r.cookies.get_dict()\n```\n---\n#### Demo - Requests.Get\n```python\nrequests = requests.get(url, headers=headers, data=payload)\n```\n##### requests參數 data\ndata是get的參數\n\n","source":"_posts/Python-Request.md","raw":"---\ntitle: Python-Request\ncatalog: true\ncomments: true\ntags:\n  - Python\n  - Request\nabbrlink: 10923\ncategories: uncategorized\ndate: 2020-08-27 17:56:30\n---\n\n#Requests\n\n### using library\n安裝\n```python\npip install requests\n```\n引用\n```python\nimport requests\n```\n### 基本用法\n```python\nrequests.get('url')\nrequests.post('url', data={'key':'value'})\n```\n#### 常遇到問題－Encoding\n看到奇怪的字\n```python\n# \\xe7\nresult.encoding = 'utf-8'\nprint(result.text)\n#print(result.content) 會沒有用\n```\n---\n#### Demo - Requests.Post\n```python\nresult = requests.post(\"http://...\", headers = localHeader, params = localParams, cookies=localCookie)\n```\n##### headers\n動態換header<br>\n```python\n# import random\nheaderlist = [\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36\",\n    \"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36 OPR/43.0.2442.991\",\n        \"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36 OPR/42.0.2393.94\",\n        \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.78 Safari/537.36 OPR/47.0.2631.39\",\n        \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.113 Safari/537.36\",\n        \"Mozilla/5.0 (Windows NT 5.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.90 Safari/537.36\",\n        \"Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36\",\n        \"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:54.0) Gecko/20100101 Firefox/54.0\",\n        \"Mozilla/5.0 (Windows NT 10.0; WOW64; rv:54.0) Gecko/20100101 Firefox/54.0\",\n        \"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:56.0) Gecko/20100101 Firefox/56.0\",\n        \"Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko\"]\nuser_agent = random.choice(headerlist)\nheaders = {'User-Agent': user_agent}\nresp = requests.get(url, headers=headers, data=payload)\n```\n\n##### params\nparams是post類型的參數，會依照Header中的 Content-Type 來決定\n```\nContent-Type : application/x-www-form-urlencoded\n```\n主要會分成下面幾種\n- 寫在網址後面\n- Body中\n  - none\n  - form-data\n  - x-www-form-urlencoded\n  - raw\n  - binary\n  - GraphQL\n  - \n\n就是要用x-www-form-urlencoded類型去送get的參數\n\n#### cookies\n取得上一個request的cookie，有些網頁會一直用同一個cookie\n```python\nresult = requests.post(....)\ncookie = r.cookies.get_dict()\n```\n---\n#### Demo - Requests.Get\n```python\nrequests = requests.get(url, headers=headers, data=payload)\n```\n##### requests參數 data\ndata是get的參數\n\n","slug":"Python-Request","published":1,"updated":"2024-11-21T02:20:00.175Z","layout":"post","photos":[],"link":"","_id":"cm3xvfy82001kewi97fugqhzn","content":"<p>#Requests</p>\n<h3><span id=\"using-library\">using library</span></h3>\n<p>安裝</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install requests</span><br></pre></td></tr></table></figure>\n<p>引用</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br></pre></td></tr></table></figure>\n<h3><span id=\"基本用法\">基本用法</span></h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">requests.get(<span class=\"string\">'url'</span>)</span><br><span class=\"line\">requests.post(<span class=\"string\">'url'</span>, data=&#123;<span class=\"string\">'key'</span>:<span class=\"string\">'value'</span>&#125;)</span><br></pre></td></tr></table></figure>\n<h4><span id=\"常遇到問題-encoding\">常遇到問題－Encoding</span></h4>\n<p>看到奇怪的字</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># \\xe7</span></span><br><span class=\"line\">result.encoding = <span class=\"string\">'utf-8'</span></span><br><span class=\"line\">print(result.text)</span><br><span class=\"line\"><span class=\"comment\">#print(result.content) 會沒有用</span></span><br></pre></td></tr></table></figure>\n<hr>\n<h4><span id=\"demo-requestspost\">Demo - Requests.Post</span></h4>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">result = requests.post(<span class=\"string\">\"http://...\"</span>, headers = localHeader, params = localParams, cookies=localCookie)</span><br></pre></td></tr></table></figure>\n<h5><span id=\"headers\">headers</span></h5>\n<p>動態換header<br></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># import random</span></span><br><span class=\"line\">headerlist = [<span class=\"string\">\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36 OPR/43.0.2442.991\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36 OPR/42.0.2393.94\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.78 Safari/537.36 OPR/47.0.2631.39\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.113 Safari/537.36\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"Mozilla/5.0 (Windows NT 5.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.90 Safari/537.36\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:54.0) Gecko/20100101 Firefox/54.0\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"Mozilla/5.0 (Windows NT 10.0; WOW64; rv:54.0) Gecko/20100101 Firefox/54.0\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:56.0) Gecko/20100101 Firefox/56.0\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko\"</span>]</span><br><span class=\"line\">user_agent = random.choice(headerlist)</span><br><span class=\"line\">headers = &#123;<span class=\"string\">'User-Agent'</span>: user_agent&#125;</span><br><span class=\"line\">resp = requests.get(url, headers=headers, data=payload)</span><br></pre></td></tr></table></figure>\n<h5><span id=\"params\">params</span></h5>\n<p>params是post類型的參數，會依照Header中的 Content-Type 來決定</p>\n<figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Content-<span class=\"keyword\">Type</span> <span class=\"type\">: </span>application/x-www-form-urlencoded</span><br></pre></td></tr></table></figure>\n<p>主要會分成下面幾種</p>\n<ul>\n<li>寫在網址後面</li>\n<li>Body中\n<ul>\n<li>none</li>\n<li>form-data</li>\n<li>x-www-form-urlencoded</li>\n<li>raw</li>\n<li>binary</li>\n<li>GraphQL</li>\n<li></li>\n</ul>\n</li>\n</ul>\n<p>就是要用x-www-form-urlencoded類型去送get的參數</p>\n<h4><span id=\"cookies\">cookies</span></h4>\n<p>取得上一個request的cookie，有些網頁會一直用同一個cookie</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">result = requests.post(....)</span><br><span class=\"line\">cookie = r.cookies.get_dict()</span><br></pre></td></tr></table></figure>\n<hr>\n<h4><span id=\"demo-requestsget\">Demo - Requests.Get</span></h4>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">requests = requests.get(url, headers=headers, data=payload)</span><br></pre></td></tr></table></figure>\n<h5><span id=\"requests參數-data\">requests參數 data</span></h5>\n<p>data是get的參數</p>\n","site":{"data":{}},"excerpt":"","more":"<p>#Requests</p>\n<h3>using library</h3>\n<p>安裝</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install requests</span><br></pre></td></tr></table></figure>\n<p>引用</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br></pre></td></tr></table></figure>\n<h3>基本用法</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">requests.get(<span class=\"string\">'url'</span>)</span><br><span class=\"line\">requests.post(<span class=\"string\">'url'</span>, data=&#123;<span class=\"string\">'key'</span>:<span class=\"string\">'value'</span>&#125;)</span><br></pre></td></tr></table></figure>\n<h4>常遇到問題－Encoding</h4>\n<p>看到奇怪的字</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># \\xe7</span></span><br><span class=\"line\">result.encoding = <span class=\"string\">'utf-8'</span></span><br><span class=\"line\">print(result.text)</span><br><span class=\"line\"><span class=\"comment\">#print(result.content) 會沒有用</span></span><br></pre></td></tr></table></figure>\n<hr>\n<h4>Demo - Requests.Post</h4>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">result = requests.post(<span class=\"string\">\"http://...\"</span>, headers = localHeader, params = localParams, cookies=localCookie)</span><br></pre></td></tr></table></figure>\n<h5>headers</h5>\n<p>動態換header<br></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># import random</span></span><br><span class=\"line\">headerlist = [<span class=\"string\">\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36 OPR/43.0.2442.991\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36 OPR/42.0.2393.94\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.78 Safari/537.36 OPR/47.0.2631.39\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.113 Safari/537.36\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"Mozilla/5.0 (Windows NT 5.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.90 Safari/537.36\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:54.0) Gecko/20100101 Firefox/54.0\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"Mozilla/5.0 (Windows NT 10.0; WOW64; rv:54.0) Gecko/20100101 Firefox/54.0\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:56.0) Gecko/20100101 Firefox/56.0\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko\"</span>]</span><br><span class=\"line\">user_agent = random.choice(headerlist)</span><br><span class=\"line\">headers = &#123;<span class=\"string\">'User-Agent'</span>: user_agent&#125;</span><br><span class=\"line\">resp = requests.get(url, headers=headers, data=payload)</span><br></pre></td></tr></table></figure>\n<h5>params</h5>\n<p>params是post類型的參數，會依照Header中的 Content-Type 來決定</p>\n<figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Content-<span class=\"keyword\">Type</span> <span class=\"type\">: </span>application/x-www-form-urlencoded</span><br></pre></td></tr></table></figure>\n<p>主要會分成下面幾種</p>\n<ul>\n<li>寫在網址後面</li>\n<li>Body中\n<ul>\n<li>none</li>\n<li>form-data</li>\n<li>x-www-form-urlencoded</li>\n<li>raw</li>\n<li>binary</li>\n<li>GraphQL</li>\n<li></li>\n</ul>\n</li>\n</ul>\n<p>就是要用x-www-form-urlencoded類型去送get的參數</p>\n<h4>cookies</h4>\n<p>取得上一個request的cookie，有些網頁會一直用同一個cookie</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">result = requests.post(....)</span><br><span class=\"line\">cookie = r.cookies.get_dict()</span><br></pre></td></tr></table></figure>\n<hr>\n<h4>Demo - Requests.Get</h4>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">requests = requests.get(url, headers=headers, data=payload)</span><br></pre></td></tr></table></figure>\n<h5>requests參數 data</h5>\n<p>data是get的參數</p>\n"},{"title":"Python常用語法","catalog":true,"comments":1,"abbrlink":44620,"date":"2020-08-07T10:33:23.000Z","_content":"\n# 語法\n## 例外處理\n```python\ntry:\n\t# do some thing\nexcept Exception as e:\n\tprint('error' + e.args[0])\n```\n## 程式進入點\n```python\nif __name__ == '__main__':\n    # do something\n```\n## 字串處理\n### substring\n```python\nName = 'Leo1234567890'\nresult = Name[1:2]\nprint(result)\n# result : e\n```\n### indexof\n```python\n\nName = 'Leo1234567890'\nindex = Name.index('e')\nprint(index)\n# result : 1\n\nindex = Name.index('Leo')\nprint(index)\n\n# 如果找不到會有例外\nindex = Name.index('Lion')\n```\n\n## Class\n```python\nclass Name(object):\n\n\n    # constructor\n    def __init__(self):\n        print('hello')\n\n\n    # MemberFunction\n    def GetData(self):\n        print('Do get data')\n        self.CheckData()\n\n    def CheckData(self):\n        return 0\n```\n## 重複執行\n```python\nimport time\n\nwhile 1 == 1:\n    try:\n        # do something\n        # sleep 60 seconds\n        time.sleep(60)\n    except Exception:\n        # do something\n```\n## 取得時間\n```python\ndatetime.now()\n```\n\n## 取得資料長度\n```\ndata = '1234568'\nresult = len(data)\nprint(result)\n#result : 7\n```\n\n## 字典\n```python\ndict = {\n    0: 'Leo',\n    1: 'Lion',\n    2: 'Ben'\n}\nresult = dict[0]\nprint(result)\n# result : Leo\n\n# 加入字典\ndict.setdefault(3, 'Jack')\nresult = dict[3]\nprint(result)\n# result : Jack\n```\n\n## Requests\n### 用法\n```python\nheaderlist = [\n        \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36\",\n        \"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36 OPR/43.0.2442.991\",\n        \"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36 OPR/42.0.2393.94\",\n        \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.78 Safari/537.36 OPR/47.0.2631.39\",\n        \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.113 Safari/537.36\",\n        \"Mozilla/5.0 (Windows NT 5.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.90 Safari/537.36\",\n        \"Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36\",\n        \"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:54.0) Gecko/20100101 Firefox/54.0\",\n        \"Mozilla/5.0 (Windows NT 10.0; WOW64; rv:54.0) Gecko/20100101 Firefox/54.0\",\n        \"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:56.0) Gecko/20100101 Firefox/56.0\",\n        \"Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko\"]\nurl = 'http://wsgg.sbj.cnipa.gov.cn:9080/tmann/annInfoView/annSearchDG.html'\nuser_agent = random.choice(headerlist)\nheaders = {'User-Agent': user_agent}\npayload = {'page': 1, 'rows': totalRow, 'annNum': 1, 'agentName': ''}\nr = requests.post(url, headers=headers, data=payload)\nif r.status_code == 200:\n    #do something\nelse:\n    pass\n```\n### Json格式資料\n```python\nr = requests.post(url, headers=headers, data=payload)\n\nif r.status_code == 200:\n    result = r.json()\n```\n### 正規表示法檢查Json資料\n```python\nimport re\ndata = 'json format data'\nresult = re.findall(r\"\\[.*\\]\", data)\nif len(result) > 0 :\n    for item in result:\n        jsonData = json.loads(item)\n        # do some thing\n```\n### Excel － openpyxl\n```python\nimport openpyxml\n\n# set excel file name\nworkbook = openpyxl.load_workbook('data.xlsx')\n\n# Choose worksheet\nworksheet = workbook['1']\n\nfor item in list(worksheet.rows):\n    # print(item[2].coordinate)\n    # print(item[2].value)\n    for cell in item:\n        print(cell.coordinate +' : '+ str(cell.value))\n\n# Get data\nprint(worksheet['A1'].value)\n\n# Set data\nworksheet['A1'] = 340\n\n# Save \nworkbook.save('data.xlsx')\n\n```\n\n### BeautifulSoup\n```\n```\n\n---\n# import \n## no module named 'XXXX'\n```pip\npip install LibraryName\n```\n## 常遇到的\n### requests\n```python\nimport requests\n```\n```pip\npip install requests\n```\n### mysql\n```python\nimport mysql.connector\n```\n```pip\npip install mysql-connector-python\n```\n\n### BeautySoup\n```python\nfrom bs4 import BeautifulSoup as bs\n```\n```pip\npip install beautifulsoup4\n```\n\n### OpenCV\n```python\nimport cv2\n```\n```pip\npip install opencv-python\n```\n\n### Tensorflow相關\n我是參考這篇文章 [[機器學習 ML NOTE]YOLO!!!如何簡單使用YOLO訓練出自己的物件偵測!!! (Windows+Anaconda)](https://medium.com/%E9%9B%9E%E9%9B%9E%E8%88%87%E5%85%94%E5%85%94%E7%9A%84%E5%B7%A5%E7%A8%8B%E4%B8%96%E7%95%8C/%E6%A9%9F%E5%99%A8%E5%AD%B8%E7%BF%92-ml-note-yolo-%E5%88%A9%E7%94%A8%E5%BD%B1%E5%83%8F%E8%BE%A8%E8%AD%98%E5%81%9A%E7%89%A9%E4%BB%B6%E5%81%B5%E6%B8%AC-object-detection-%E7%9A%84%E6%8A%80%E8%A1%93-3ad34a4cac70)\n\ntensorflow很麻煩python最高版本只能到3.7\npython3.7還不能搭配太高的tensorflow，只能裝2.0.0以下的，因為2.0.0以上的版本刪掉了 tensorflow.contrib 這個函數庫\n\n```python\n# 1. 檢查是不是已經裝了tensorflow\npip list\n# Package        Version\n# -------------------------\n# gast           0.3.3\n# pip            20.1.1\n# tensorflow     1.14.0\n# ..........\n\n# 1.1 可能會遇到的問題 : 如果不小心已經裝了比較高版本(2.0.0 > )的tensorflow要先移除掉\npip uninstall tensorflow\n\n# 2. 安裝tensorflow，如果電腦裡有除了3.7以外的版本，要先檢查環境變數裡的pip是什麼版本的到目錄下\npip --version\n# pip 20.1.1 from c:\\users\\UserName\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\pip (python 3.7)\n\n# 3. C:\\Users\\UserName\\AppData\\Local\\Programs\\Python\\Python37\\Scripts\npip install tensorflow==1.14.0\n\n# 4. run\n# 用訓練好的模型檢查圖片\nC:\\Users\\UserName\\AppData\\Local\\Programs\\Python\\Python37\\python.exe flow --model cfg/yolo.cfg --load bin/yolov2.weights --imgdir sample_img/\n# 用訓練好的模型檢查攝影機\nC:\\Users\\UserName\\AppData\\Local\\Programs\\Python\\Python37\\python.exe  flow --model cfg/yolo.cfg --load bin/yolov2.weights --demo camera --saveVideo\n\n# 5.準備訓練模型環境(labelimg)\ngit clone https://github.com/tzutalin/labelImg\ncd lableimg\npip install resources\npip install requests\npip install staty\npip install lxml\npython lableimg.py\n# 5.1 可能會遇到的問題 : No module named 'libs.resources'\n# 執行下面指令，再把產生出來的resources.py複製到專案的labelImg\\libs下\npyrcc5 -o resources.py resources.qrc\n\n# 5.2 可能會遇到的問題 : pyrcc5 not found\npyrcc5.exe -o resources.py resources.qrc\nC:\\Users\\UserName\\AppData\\Local\\Programs\\Python\\Python37\\Scripts\\pyrcc5.exe -o resources.py resources.qrc\n\n# 6.使用labelimg標記資料\nC:\\Users\\UserName\\AppData\\Local\\Programs\\Python\\Python37\\python.exe D:\\Backup\\LeoYang\\Desktop\\Workspace\\labelImg\\labelImg.py\n\n# 7.設定訓練模型相關資料\n# 7-1 config 跟作者一樣使用 darkflow\\cfg\\tiny-yolo.cfg\n#   7-1-1 [convolutional]\n#   裡面應該只會有一行########，把####下的第二個[convolutional]中的filters改成 : 5*(5 + 標記資料時的label數量)\n#   ex 我標記3個label，所以filter要改成 : 40 ( 5 * (5 + 3))\n#   7-1-2 [classes]\n#   裡面應該只會有一行########，把####下的[region]中的classes改成標記資料時的label數量\n# 7-2 label.txt\n\n# 8.開始訓練模型\n#C:\\Users\\Leoyang\\AppData\\Local\\Programs\\Python\\Python37\\python flow --model [modelPath] --train --dataset [Labeling Image Path] --annotation [LabelImageResultPath]\n\nC:\\Users\\Leoyang\\AppData\\Local\\Programs\\Python\\Python37\\python flow --model cfg/tiny-yolo.cfg --train --dataset D:\\Backup\\LeoYang\\Desktop\\image\\traindata --annotation D:\\Backup\\LeoYang\\Desktop\\Workspace\\labelImg\\leodata\n\n# 5.3 AssertionError: labels.txt and cfg/tiny-yolo.cfg indicate inconsistent class numbers\n```","source":"_posts/Python常用語法.md","raw":"---\ntitle: Python常用語法\ncatalog: true\ncomments: true\ntags:\n  - Python\nabbrlink: 44620\ncategories: uncategorized\ndate: 2020-08-07 18:33:23\n---\n\n# 語法\n## 例外處理\n```python\ntry:\n\t# do some thing\nexcept Exception as e:\n\tprint('error' + e.args[0])\n```\n## 程式進入點\n```python\nif __name__ == '__main__':\n    # do something\n```\n## 字串處理\n### substring\n```python\nName = 'Leo1234567890'\nresult = Name[1:2]\nprint(result)\n# result : e\n```\n### indexof\n```python\n\nName = 'Leo1234567890'\nindex = Name.index('e')\nprint(index)\n# result : 1\n\nindex = Name.index('Leo')\nprint(index)\n\n# 如果找不到會有例外\nindex = Name.index('Lion')\n```\n\n## Class\n```python\nclass Name(object):\n\n\n    # constructor\n    def __init__(self):\n        print('hello')\n\n\n    # MemberFunction\n    def GetData(self):\n        print('Do get data')\n        self.CheckData()\n\n    def CheckData(self):\n        return 0\n```\n## 重複執行\n```python\nimport time\n\nwhile 1 == 1:\n    try:\n        # do something\n        # sleep 60 seconds\n        time.sleep(60)\n    except Exception:\n        # do something\n```\n## 取得時間\n```python\ndatetime.now()\n```\n\n## 取得資料長度\n```\ndata = '1234568'\nresult = len(data)\nprint(result)\n#result : 7\n```\n\n## 字典\n```python\ndict = {\n    0: 'Leo',\n    1: 'Lion',\n    2: 'Ben'\n}\nresult = dict[0]\nprint(result)\n# result : Leo\n\n# 加入字典\ndict.setdefault(3, 'Jack')\nresult = dict[3]\nprint(result)\n# result : Jack\n```\n\n## Requests\n### 用法\n```python\nheaderlist = [\n        \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36\",\n        \"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36 OPR/43.0.2442.991\",\n        \"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36 OPR/42.0.2393.94\",\n        \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.78 Safari/537.36 OPR/47.0.2631.39\",\n        \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.113 Safari/537.36\",\n        \"Mozilla/5.0 (Windows NT 5.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.90 Safari/537.36\",\n        \"Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36\",\n        \"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:54.0) Gecko/20100101 Firefox/54.0\",\n        \"Mozilla/5.0 (Windows NT 10.0; WOW64; rv:54.0) Gecko/20100101 Firefox/54.0\",\n        \"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:56.0) Gecko/20100101 Firefox/56.0\",\n        \"Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko\"]\nurl = 'http://wsgg.sbj.cnipa.gov.cn:9080/tmann/annInfoView/annSearchDG.html'\nuser_agent = random.choice(headerlist)\nheaders = {'User-Agent': user_agent}\npayload = {'page': 1, 'rows': totalRow, 'annNum': 1, 'agentName': ''}\nr = requests.post(url, headers=headers, data=payload)\nif r.status_code == 200:\n    #do something\nelse:\n    pass\n```\n### Json格式資料\n```python\nr = requests.post(url, headers=headers, data=payload)\n\nif r.status_code == 200:\n    result = r.json()\n```\n### 正規表示法檢查Json資料\n```python\nimport re\ndata = 'json format data'\nresult = re.findall(r\"\\[.*\\]\", data)\nif len(result) > 0 :\n    for item in result:\n        jsonData = json.loads(item)\n        # do some thing\n```\n### Excel － openpyxl\n```python\nimport openpyxml\n\n# set excel file name\nworkbook = openpyxl.load_workbook('data.xlsx')\n\n# Choose worksheet\nworksheet = workbook['1']\n\nfor item in list(worksheet.rows):\n    # print(item[2].coordinate)\n    # print(item[2].value)\n    for cell in item:\n        print(cell.coordinate +' : '+ str(cell.value))\n\n# Get data\nprint(worksheet['A1'].value)\n\n# Set data\nworksheet['A1'] = 340\n\n# Save \nworkbook.save('data.xlsx')\n\n```\n\n### BeautifulSoup\n```\n```\n\n---\n# import \n## no module named 'XXXX'\n```pip\npip install LibraryName\n```\n## 常遇到的\n### requests\n```python\nimport requests\n```\n```pip\npip install requests\n```\n### mysql\n```python\nimport mysql.connector\n```\n```pip\npip install mysql-connector-python\n```\n\n### BeautySoup\n```python\nfrom bs4 import BeautifulSoup as bs\n```\n```pip\npip install beautifulsoup4\n```\n\n### OpenCV\n```python\nimport cv2\n```\n```pip\npip install opencv-python\n```\n\n### Tensorflow相關\n我是參考這篇文章 [[機器學習 ML NOTE]YOLO!!!如何簡單使用YOLO訓練出自己的物件偵測!!! (Windows+Anaconda)](https://medium.com/%E9%9B%9E%E9%9B%9E%E8%88%87%E5%85%94%E5%85%94%E7%9A%84%E5%B7%A5%E7%A8%8B%E4%B8%96%E7%95%8C/%E6%A9%9F%E5%99%A8%E5%AD%B8%E7%BF%92-ml-note-yolo-%E5%88%A9%E7%94%A8%E5%BD%B1%E5%83%8F%E8%BE%A8%E8%AD%98%E5%81%9A%E7%89%A9%E4%BB%B6%E5%81%B5%E6%B8%AC-object-detection-%E7%9A%84%E6%8A%80%E8%A1%93-3ad34a4cac70)\n\ntensorflow很麻煩python最高版本只能到3.7\npython3.7還不能搭配太高的tensorflow，只能裝2.0.0以下的，因為2.0.0以上的版本刪掉了 tensorflow.contrib 這個函數庫\n\n```python\n# 1. 檢查是不是已經裝了tensorflow\npip list\n# Package        Version\n# -------------------------\n# gast           0.3.3\n# pip            20.1.1\n# tensorflow     1.14.0\n# ..........\n\n# 1.1 可能會遇到的問題 : 如果不小心已經裝了比較高版本(2.0.0 > )的tensorflow要先移除掉\npip uninstall tensorflow\n\n# 2. 安裝tensorflow，如果電腦裡有除了3.7以外的版本，要先檢查環境變數裡的pip是什麼版本的到目錄下\npip --version\n# pip 20.1.1 from c:\\users\\UserName\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\pip (python 3.7)\n\n# 3. C:\\Users\\UserName\\AppData\\Local\\Programs\\Python\\Python37\\Scripts\npip install tensorflow==1.14.0\n\n# 4. run\n# 用訓練好的模型檢查圖片\nC:\\Users\\UserName\\AppData\\Local\\Programs\\Python\\Python37\\python.exe flow --model cfg/yolo.cfg --load bin/yolov2.weights --imgdir sample_img/\n# 用訓練好的模型檢查攝影機\nC:\\Users\\UserName\\AppData\\Local\\Programs\\Python\\Python37\\python.exe  flow --model cfg/yolo.cfg --load bin/yolov2.weights --demo camera --saveVideo\n\n# 5.準備訓練模型環境(labelimg)\ngit clone https://github.com/tzutalin/labelImg\ncd lableimg\npip install resources\npip install requests\npip install staty\npip install lxml\npython lableimg.py\n# 5.1 可能會遇到的問題 : No module named 'libs.resources'\n# 執行下面指令，再把產生出來的resources.py複製到專案的labelImg\\libs下\npyrcc5 -o resources.py resources.qrc\n\n# 5.2 可能會遇到的問題 : pyrcc5 not found\npyrcc5.exe -o resources.py resources.qrc\nC:\\Users\\UserName\\AppData\\Local\\Programs\\Python\\Python37\\Scripts\\pyrcc5.exe -o resources.py resources.qrc\n\n# 6.使用labelimg標記資料\nC:\\Users\\UserName\\AppData\\Local\\Programs\\Python\\Python37\\python.exe D:\\Backup\\LeoYang\\Desktop\\Workspace\\labelImg\\labelImg.py\n\n# 7.設定訓練模型相關資料\n# 7-1 config 跟作者一樣使用 darkflow\\cfg\\tiny-yolo.cfg\n#   7-1-1 [convolutional]\n#   裡面應該只會有一行########，把####下的第二個[convolutional]中的filters改成 : 5*(5 + 標記資料時的label數量)\n#   ex 我標記3個label，所以filter要改成 : 40 ( 5 * (5 + 3))\n#   7-1-2 [classes]\n#   裡面應該只會有一行########，把####下的[region]中的classes改成標記資料時的label數量\n# 7-2 label.txt\n\n# 8.開始訓練模型\n#C:\\Users\\Leoyang\\AppData\\Local\\Programs\\Python\\Python37\\python flow --model [modelPath] --train --dataset [Labeling Image Path] --annotation [LabelImageResultPath]\n\nC:\\Users\\Leoyang\\AppData\\Local\\Programs\\Python\\Python37\\python flow --model cfg/tiny-yolo.cfg --train --dataset D:\\Backup\\LeoYang\\Desktop\\image\\traindata --annotation D:\\Backup\\LeoYang\\Desktop\\Workspace\\labelImg\\leodata\n\n# 5.3 AssertionError: labels.txt and cfg/tiny-yolo.cfg indicate inconsistent class numbers\n```","slug":"Python常用語法","published":1,"updated":"2024-11-21T02:20:00.176Z","layout":"post","photos":[],"link":"","_id":"cm3xvfy83001oewi9i5llxh3o","content":"<h1><span id=\"語法\">語法</span></h1>\n<h2><span id=\"例外處理\">例外處理</span></h2>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">\t<span class=\"comment\"># do some thing</span></span><br><span class=\"line\"><span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">\tprint(<span class=\"string\">'error'</span> + e.args[<span class=\"number\">0</span>])</span><br></pre></td></tr></table></figure>\n<h2><span id=\"程式進入點\">程式進入點</span></h2>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</span><br><span class=\"line\">    <span class=\"comment\"># do something</span></span><br></pre></td></tr></table></figure>\n<h2><span id=\"字串處理\">字串處理</span></h2>\n<h3><span id=\"substring\">substring</span></h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Name = <span class=\"string\">'Leo1234567890'</span></span><br><span class=\"line\">result = Name[<span class=\"number\">1</span>:<span class=\"number\">2</span>]</span><br><span class=\"line\">print(result)</span><br><span class=\"line\"><span class=\"comment\"># result : e</span></span><br></pre></td></tr></table></figure>\n<h3><span id=\"indexof\">indexof</span></h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">Name = <span class=\"string\">'Leo1234567890'</span></span><br><span class=\"line\">index = Name.index(<span class=\"string\">'e'</span>)</span><br><span class=\"line\">print(index)</span><br><span class=\"line\"><span class=\"comment\"># result : 1</span></span><br><span class=\"line\"></span><br><span class=\"line\">index = Name.index(<span class=\"string\">'Leo'</span>)</span><br><span class=\"line\">print(index)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果找不到會有例外</span></span><br><span class=\"line\">index = Name.index(<span class=\"string\">'Lion'</span>)</span><br></pre></td></tr></table></figure>\n<h2><span id=\"class\">Class</span></h2>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Name</span><span class=\"params\">(object)</span>:</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># constructor</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        print(<span class=\"string\">'hello'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># MemberFunction</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">GetData</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        print(<span class=\"string\">'Do get data'</span>)</span><br><span class=\"line\">        self.CheckData()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">CheckData</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br></pre></td></tr></table></figure>\n<h2><span id=\"重複執行\">重複執行</span></h2>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"number\">1</span> == <span class=\"number\">1</span>:</span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        <span class=\"comment\"># do something</span></span><br><span class=\"line\">        <span class=\"comment\"># sleep 60 seconds</span></span><br><span class=\"line\">        time.sleep(<span class=\"number\">60</span>)</span><br><span class=\"line\">    <span class=\"keyword\">except</span> Exception:</span><br><span class=\"line\">        <span class=\"comment\"># do something</span></span><br></pre></td></tr></table></figure>\n<h2><span id=\"取得時間\">取得時間</span></h2>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">datetime.now()</span><br></pre></td></tr></table></figure>\n<h2><span id=\"取得資料長度\">取得資料長度</span></h2>\n<figure class=\"highlight haskell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">data</span> = '1234568'</span></span><br><span class=\"line\"><span class=\"title\">result</span> = len(<span class=\"class\"><span class=\"keyword\">data</span>)</span></span><br><span class=\"line\"><span class=\"title\">print</span>(result)</span><br><span class=\"line\"><span class=\"meta\">#result : 7</span></span><br></pre></td></tr></table></figure>\n<h2><span id=\"字典\">字典</span></h2>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dict = &#123;</span><br><span class=\"line\">    <span class=\"number\">0</span>: <span class=\"string\">'Leo'</span>,</span><br><span class=\"line\">    <span class=\"number\">1</span>: <span class=\"string\">'Lion'</span>,</span><br><span class=\"line\">    <span class=\"number\">2</span>: <span class=\"string\">'Ben'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">result = dict[<span class=\"number\">0</span>]</span><br><span class=\"line\">print(result)</span><br><span class=\"line\"><span class=\"comment\"># result : Leo</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 加入字典</span></span><br><span class=\"line\">dict.setdefault(<span class=\"number\">3</span>, <span class=\"string\">'Jack'</span>)</span><br><span class=\"line\">result = dict[<span class=\"number\">3</span>]</span><br><span class=\"line\">print(result)</span><br><span class=\"line\"><span class=\"comment\"># result : Jack</span></span><br></pre></td></tr></table></figure>\n<h2><span id=\"requests\">Requests</span></h2>\n<h3><span id=\"用法\">用法</span></h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">headerlist = [</span><br><span class=\"line\">        <span class=\"string\">\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36 OPR/43.0.2442.991\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36 OPR/42.0.2393.94\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.78 Safari/537.36 OPR/47.0.2631.39\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.113 Safari/537.36\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"Mozilla/5.0 (Windows NT 5.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.90 Safari/537.36\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:54.0) Gecko/20100101 Firefox/54.0\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"Mozilla/5.0 (Windows NT 10.0; WOW64; rv:54.0) Gecko/20100101 Firefox/54.0\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:56.0) Gecko/20100101 Firefox/56.0\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko\"</span>]</span><br><span class=\"line\">url = <span class=\"string\">'http://wsgg.sbj.cnipa.gov.cn:9080/tmann/annInfoView/annSearchDG.html'</span></span><br><span class=\"line\">user_agent = random.choice(headerlist)</span><br><span class=\"line\">headers = &#123;<span class=\"string\">'User-Agent'</span>: user_agent&#125;</span><br><span class=\"line\">payload = &#123;<span class=\"string\">'page'</span>: <span class=\"number\">1</span>, <span class=\"string\">'rows'</span>: totalRow, <span class=\"string\">'annNum'</span>: <span class=\"number\">1</span>, <span class=\"string\">'agentName'</span>: <span class=\"string\">''</span>&#125;</span><br><span class=\"line\">r = requests.post(url, headers=headers, data=payload)</span><br><span class=\"line\"><span class=\"keyword\">if</span> r.status_code == <span class=\"number\">200</span>:</span><br><span class=\"line\">    <span class=\"comment\">#do something</span></span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"keyword\">pass</span></span><br></pre></td></tr></table></figure>\n<h3><span id=\"json格式資料\">Json格式資料</span></h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">r = requests.post(url, headers=headers, data=payload)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> r.status_code == <span class=\"number\">200</span>:</span><br><span class=\"line\">    result = r.json()</span><br></pre></td></tr></table></figure>\n<h3><span id=\"正規表示法檢查json資料\">正規表示法檢查Json資料</span></h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\">data = <span class=\"string\">'json format data'</span></span><br><span class=\"line\">result = re.findall(<span class=\"string\">r\"\\[.*\\]\"</span>, data)</span><br><span class=\"line\"><span class=\"keyword\">if</span> len(result) &gt; <span class=\"number\">0</span> :</span><br><span class=\"line\">    <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> result:</span><br><span class=\"line\">        jsonData = json.loads(item)</span><br><span class=\"line\">        <span class=\"comment\"># do some thing</span></span><br></pre></td></tr></table></figure>\n<h3><span id=\"excel-openpyxl\">Excel － openpyxl</span></h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> openpyxml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># set excel file name</span></span><br><span class=\"line\">workbook = openpyxl.load_workbook(<span class=\"string\">'data.xlsx'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Choose worksheet</span></span><br><span class=\"line\">worksheet = workbook[<span class=\"string\">'1'</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> list(worksheet.rows):</span><br><span class=\"line\">    <span class=\"comment\"># print(item[2].coordinate)</span></span><br><span class=\"line\">    <span class=\"comment\"># print(item[2].value)</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> cell <span class=\"keyword\">in</span> item:</span><br><span class=\"line\">        print(cell.coordinate +<span class=\"string\">' : '</span>+ str(cell.value))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Get data</span></span><br><span class=\"line\">print(worksheet[<span class=\"string\">'A1'</span>].value)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Set data</span></span><br><span class=\"line\">worksheet[<span class=\"string\">'A1'</span>] = <span class=\"number\">340</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Save </span></span><br><span class=\"line\">workbook.save(<span class=\"string\">'data.xlsx'</span>)</span><br></pre></td></tr></table></figure>\n<h3><span id=\"beautifulsoup\">BeautifulSoup</span></h3>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"comment\"># import </span></span><br><span class=\"line\"><span class=\"comment\">## no module named 'XXXX'</span></span><br><span class=\"line\"><span class=\"string\">```pip</span></span><br><span class=\"line\"><span class=\"string\">pip</span> <span class=\"string\">install</span> <span class=\"string\">LibraryName</span></span><br></pre></td></tr></table></figure>\n<h2><span id=\"常遇到的\">常遇到的</span></h2>\n<h3><span id=\"requests\">requests</span></h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install requests</span><br></pre></td></tr></table></figure>\n<h3><span id=\"mysql\">mysql</span></h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> mysql.connector</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install mysql-connector-python</span><br></pre></td></tr></table></figure>\n<h3><span id=\"beautysoup\">BeautySoup</span></h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> bs4 <span class=\"keyword\">import</span> BeautifulSoup <span class=\"keyword\">as</span> bs</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install beautifulsoup4</span><br></pre></td></tr></table></figure>\n<h3><span id=\"opencv\">OpenCV</span></h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> cv2</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install opencv-python</span><br></pre></td></tr></table></figure>\n<h3><span id=\"tensorflow相關\">Tensorflow相關</span></h3>\n<p>我是參考這篇文章 <a href=\"https://medium.com/%E9%9B%9E%E9%9B%9E%E8%88%87%E5%85%94%E5%85%94%E7%9A%84%E5%B7%A5%E7%A8%8B%E4%B8%96%E7%95%8C/%E6%A9%9F%E5%99%A8%E5%AD%B8%E7%BF%92-ml-note-yolo-%E5%88%A9%E7%94%A8%E5%BD%B1%E5%83%8F%E8%BE%A8%E8%AD%98%E5%81%9A%E7%89%A9%E4%BB%B6%E5%81%B5%E6%B8%AC-object-detection-%E7%9A%84%E6%8A%80%E8%A1%93-3ad34a4cac70\" target=\"_blank\" rel=\"noopener\">[機器學習 ML NOTE]YOLO!!!如何簡單使用YOLO訓練出自己的物件偵測!!! (Windows+Anaconda)</a></p>\n<p>tensorflow很麻煩python最高版本只能到3.7<br>\npython3.7還不能搭配太高的tensorflow，只能裝2.0.0以下的，因為2.0.0以上的版本刪掉了 tensorflow.contrib 這個函數庫</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1. 檢查是不是已經裝了tensorflow</span></span><br><span class=\"line\">pip list</span><br><span class=\"line\"><span class=\"comment\"># Package        Version</span></span><br><span class=\"line\"><span class=\"comment\"># -------------------------</span></span><br><span class=\"line\"><span class=\"comment\"># gast           0.3.3</span></span><br><span class=\"line\"><span class=\"comment\"># pip            20.1.1</span></span><br><span class=\"line\"><span class=\"comment\"># tensorflow     1.14.0</span></span><br><span class=\"line\"><span class=\"comment\"># ..........</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 1.1 可能會遇到的問題 : 如果不小心已經裝了比較高版本(2.0.0 &gt; )的tensorflow要先移除掉</span></span><br><span class=\"line\">pip uninstall tensorflow</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2. 安裝tensorflow，如果電腦裡有除了3.7以外的版本，要先檢查環境變數裡的pip是什麼版本的到目錄下</span></span><br><span class=\"line\">pip --version</span><br><span class=\"line\"><span class=\"comment\"># pip 20.1.1 from c:\\users\\UserName\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\pip (python 3.7)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3. C:\\Users\\UserName\\AppData\\Local\\Programs\\Python\\Python37\\Scripts</span></span><br><span class=\"line\">pip install tensorflow==<span class=\"number\">1.14</span><span class=\"number\">.0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 4. run</span></span><br><span class=\"line\"><span class=\"comment\"># 用訓練好的模型檢查圖片</span></span><br><span class=\"line\">C:\\Users\\UserName\\AppData\\Local\\Programs\\Python\\Python37\\python.exe flow --model cfg/yolo.cfg --load bin/yolov2.weights --imgdir sample_img/</span><br><span class=\"line\"><span class=\"comment\"># 用訓練好的模型檢查攝影機</span></span><br><span class=\"line\">C:\\Users\\UserName\\AppData\\Local\\Programs\\Python\\Python37\\python.exe  flow --model cfg/yolo.cfg --load bin/yolov2.weights --demo camera --saveVideo</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 5.準備訓練模型環境(labelimg)</span></span><br><span class=\"line\">git clone https://github.com/tzutalin/labelImg</span><br><span class=\"line\">cd lableimg</span><br><span class=\"line\">pip install resources</span><br><span class=\"line\">pip install requests</span><br><span class=\"line\">pip install staty</span><br><span class=\"line\">pip install lxml</span><br><span class=\"line\">python lableimg.py</span><br><span class=\"line\"><span class=\"comment\"># 5.1 可能會遇到的問題 : No module named 'libs.resources'</span></span><br><span class=\"line\"><span class=\"comment\"># 執行下面指令，再把產生出來的resources.py複製到專案的labelImg\\libs下</span></span><br><span class=\"line\">pyrcc5 -o resources.py resources.qrc</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 5.2 可能會遇到的問題 : pyrcc5 not found</span></span><br><span class=\"line\">pyrcc5.exe -o resources.py resources.qrc</span><br><span class=\"line\">C:\\Users\\UserName\\AppData\\Local\\Programs\\Python\\Python37\\Scripts\\pyrcc5.exe -o resources.py resources.qrc</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 6.使用labelimg標記資料</span></span><br><span class=\"line\">C:\\Users\\UserName\\AppData\\Local\\Programs\\Python\\Python37\\python.exe D:\\Backup\\LeoYang\\Desktop\\Workspace\\labelImg\\labelImg.py</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 7.設定訓練模型相關資料</span></span><br><span class=\"line\"><span class=\"comment\"># 7-1 config 跟作者一樣使用 darkflow\\cfg\\tiny-yolo.cfg</span></span><br><span class=\"line\"><span class=\"comment\">#   7-1-1 [convolutional]</span></span><br><span class=\"line\"><span class=\"comment\">#   裡面應該只會有一行########，把####下的第二個[convolutional]中的filters改成 : 5*(5 + 標記資料時的label數量)</span></span><br><span class=\"line\"><span class=\"comment\">#   ex 我標記3個label，所以filter要改成 : 40 ( 5 * (5 + 3))</span></span><br><span class=\"line\"><span class=\"comment\">#   7-1-2 [classes]</span></span><br><span class=\"line\"><span class=\"comment\">#   裡面應該只會有一行########，把####下的[region]中的classes改成標記資料時的label數量</span></span><br><span class=\"line\"><span class=\"comment\"># 7-2 label.txt</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 8.開始訓練模型</span></span><br><span class=\"line\"><span class=\"comment\">#C:\\Users\\Leoyang\\AppData\\Local\\Programs\\Python\\Python37\\python flow --model [modelPath] --train --dataset [Labeling Image Path] --annotation [LabelImageResultPath]</span></span><br><span class=\"line\"></span><br><span class=\"line\">C:\\Users\\Leoyang\\AppData\\Local\\Programs\\Python\\Python37\\python flow --model cfg/tiny-yolo.cfg --train --dataset D:\\Backup\\LeoYang\\Desktop\\image\\traindata --annotation D:\\Backup\\LeoYang\\Desktop\\Workspace\\labelImg\\leodata</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 5.3 AssertionError: labels.txt and cfg/tiny-yolo.cfg indicate inconsistent class numbers</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1>語法</h1>\n<h2>例外處理</h2>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">\t<span class=\"comment\"># do some thing</span></span><br><span class=\"line\"><span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">\tprint(<span class=\"string\">'error'</span> + e.args[<span class=\"number\">0</span>])</span><br></pre></td></tr></table></figure>\n<h2>程式進入點</h2>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</span><br><span class=\"line\">    <span class=\"comment\"># do something</span></span><br></pre></td></tr></table></figure>\n<h2>字串處理</h2>\n<h3>substring</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Name = <span class=\"string\">'Leo1234567890'</span></span><br><span class=\"line\">result = Name[<span class=\"number\">1</span>:<span class=\"number\">2</span>]</span><br><span class=\"line\">print(result)</span><br><span class=\"line\"><span class=\"comment\"># result : e</span></span><br></pre></td></tr></table></figure>\n<h3>indexof</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">Name = <span class=\"string\">'Leo1234567890'</span></span><br><span class=\"line\">index = Name.index(<span class=\"string\">'e'</span>)</span><br><span class=\"line\">print(index)</span><br><span class=\"line\"><span class=\"comment\"># result : 1</span></span><br><span class=\"line\"></span><br><span class=\"line\">index = Name.index(<span class=\"string\">'Leo'</span>)</span><br><span class=\"line\">print(index)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果找不到會有例外</span></span><br><span class=\"line\">index = Name.index(<span class=\"string\">'Lion'</span>)</span><br></pre></td></tr></table></figure>\n<h2>Class</h2>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Name</span><span class=\"params\">(object)</span>:</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># constructor</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        print(<span class=\"string\">'hello'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># MemberFunction</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">GetData</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        print(<span class=\"string\">'Do get data'</span>)</span><br><span class=\"line\">        self.CheckData()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">CheckData</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br></pre></td></tr></table></figure>\n<h2>重複執行</h2>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"number\">1</span> == <span class=\"number\">1</span>:</span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        <span class=\"comment\"># do something</span></span><br><span class=\"line\">        <span class=\"comment\"># sleep 60 seconds</span></span><br><span class=\"line\">        time.sleep(<span class=\"number\">60</span>)</span><br><span class=\"line\">    <span class=\"keyword\">except</span> Exception:</span><br><span class=\"line\">        <span class=\"comment\"># do something</span></span><br></pre></td></tr></table></figure>\n<h2>取得時間</h2>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">datetime.now()</span><br></pre></td></tr></table></figure>\n<h2>取得資料長度</h2>\n<figure class=\"highlight haskell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">data</span> = '1234568'</span></span><br><span class=\"line\"><span class=\"title\">result</span> = len(<span class=\"class\"><span class=\"keyword\">data</span>)</span></span><br><span class=\"line\"><span class=\"title\">print</span>(result)</span><br><span class=\"line\"><span class=\"meta\">#result : 7</span></span><br></pre></td></tr></table></figure>\n<h2>字典</h2>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dict = &#123;</span><br><span class=\"line\">    <span class=\"number\">0</span>: <span class=\"string\">'Leo'</span>,</span><br><span class=\"line\">    <span class=\"number\">1</span>: <span class=\"string\">'Lion'</span>,</span><br><span class=\"line\">    <span class=\"number\">2</span>: <span class=\"string\">'Ben'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">result = dict[<span class=\"number\">0</span>]</span><br><span class=\"line\">print(result)</span><br><span class=\"line\"><span class=\"comment\"># result : Leo</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 加入字典</span></span><br><span class=\"line\">dict.setdefault(<span class=\"number\">3</span>, <span class=\"string\">'Jack'</span>)</span><br><span class=\"line\">result = dict[<span class=\"number\">3</span>]</span><br><span class=\"line\">print(result)</span><br><span class=\"line\"><span class=\"comment\"># result : Jack</span></span><br></pre></td></tr></table></figure>\n<h2>Requests</h2>\n<h3>用法</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">headerlist = [</span><br><span class=\"line\">        <span class=\"string\">\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36 OPR/43.0.2442.991\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36 OPR/42.0.2393.94\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.78 Safari/537.36 OPR/47.0.2631.39\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.113 Safari/537.36\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"Mozilla/5.0 (Windows NT 5.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.90 Safari/537.36\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:54.0) Gecko/20100101 Firefox/54.0\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"Mozilla/5.0 (Windows NT 10.0; WOW64; rv:54.0) Gecko/20100101 Firefox/54.0\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:56.0) Gecko/20100101 Firefox/56.0\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko\"</span>]</span><br><span class=\"line\">url = <span class=\"string\">'http://wsgg.sbj.cnipa.gov.cn:9080/tmann/annInfoView/annSearchDG.html'</span></span><br><span class=\"line\">user_agent = random.choice(headerlist)</span><br><span class=\"line\">headers = &#123;<span class=\"string\">'User-Agent'</span>: user_agent&#125;</span><br><span class=\"line\">payload = &#123;<span class=\"string\">'page'</span>: <span class=\"number\">1</span>, <span class=\"string\">'rows'</span>: totalRow, <span class=\"string\">'annNum'</span>: <span class=\"number\">1</span>, <span class=\"string\">'agentName'</span>: <span class=\"string\">''</span>&#125;</span><br><span class=\"line\">r = requests.post(url, headers=headers, data=payload)</span><br><span class=\"line\"><span class=\"keyword\">if</span> r.status_code == <span class=\"number\">200</span>:</span><br><span class=\"line\">    <span class=\"comment\">#do something</span></span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"keyword\">pass</span></span><br></pre></td></tr></table></figure>\n<h3>Json格式資料</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">r = requests.post(url, headers=headers, data=payload)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> r.status_code == <span class=\"number\">200</span>:</span><br><span class=\"line\">    result = r.json()</span><br></pre></td></tr></table></figure>\n<h3>正規表示法檢查Json資料</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\">data = <span class=\"string\">'json format data'</span></span><br><span class=\"line\">result = re.findall(<span class=\"string\">r\"\\[.*\\]\"</span>, data)</span><br><span class=\"line\"><span class=\"keyword\">if</span> len(result) &gt; <span class=\"number\">0</span> :</span><br><span class=\"line\">    <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> result:</span><br><span class=\"line\">        jsonData = json.loads(item)</span><br><span class=\"line\">        <span class=\"comment\"># do some thing</span></span><br></pre></td></tr></table></figure>\n<h3>Excel － openpyxl</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> openpyxml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># set excel file name</span></span><br><span class=\"line\">workbook = openpyxl.load_workbook(<span class=\"string\">'data.xlsx'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Choose worksheet</span></span><br><span class=\"line\">worksheet = workbook[<span class=\"string\">'1'</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> list(worksheet.rows):</span><br><span class=\"line\">    <span class=\"comment\"># print(item[2].coordinate)</span></span><br><span class=\"line\">    <span class=\"comment\"># print(item[2].value)</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> cell <span class=\"keyword\">in</span> item:</span><br><span class=\"line\">        print(cell.coordinate +<span class=\"string\">' : '</span>+ str(cell.value))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Get data</span></span><br><span class=\"line\">print(worksheet[<span class=\"string\">'A1'</span>].value)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Set data</span></span><br><span class=\"line\">worksheet[<span class=\"string\">'A1'</span>] = <span class=\"number\">340</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Save </span></span><br><span class=\"line\">workbook.save(<span class=\"string\">'data.xlsx'</span>)</span><br></pre></td></tr></table></figure>\n<h3>BeautifulSoup</h3>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">```</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"comment\"># import </span></span><br><span class=\"line\"><span class=\"comment\">## no module named 'XXXX'</span></span><br><span class=\"line\"><span class=\"string\">```pip</span></span><br><span class=\"line\"><span class=\"string\">pip</span> <span class=\"string\">install</span> <span class=\"string\">LibraryName</span></span><br></pre></td></tr></table></figure>\n<h2>常遇到的</h2>\n<h3>requests</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install requests</span><br></pre></td></tr></table></figure>\n<h3>mysql</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> mysql.connector</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install mysql-connector-python</span><br></pre></td></tr></table></figure>\n<h3>BeautySoup</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> bs4 <span class=\"keyword\">import</span> BeautifulSoup <span class=\"keyword\">as</span> bs</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install beautifulsoup4</span><br></pre></td></tr></table></figure>\n<h3>OpenCV</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> cv2</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install opencv-python</span><br></pre></td></tr></table></figure>\n<h3>Tensorflow相關</h3>\n<p>我是參考這篇文章 <a href=\"https://medium.com/%E9%9B%9E%E9%9B%9E%E8%88%87%E5%85%94%E5%85%94%E7%9A%84%E5%B7%A5%E7%A8%8B%E4%B8%96%E7%95%8C/%E6%A9%9F%E5%99%A8%E5%AD%B8%E7%BF%92-ml-note-yolo-%E5%88%A9%E7%94%A8%E5%BD%B1%E5%83%8F%E8%BE%A8%E8%AD%98%E5%81%9A%E7%89%A9%E4%BB%B6%E5%81%B5%E6%B8%AC-object-detection-%E7%9A%84%E6%8A%80%E8%A1%93-3ad34a4cac70\" target=\"_blank\" rel=\"noopener\">[機器學習 ML NOTE]YOLO!!!如何簡單使用YOLO訓練出自己的物件偵測!!! (Windows+Anaconda)</a></p>\n<p>tensorflow很麻煩python最高版本只能到3.7<br>\npython3.7還不能搭配太高的tensorflow，只能裝2.0.0以下的，因為2.0.0以上的版本刪掉了 tensorflow.contrib 這個函數庫</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1. 檢查是不是已經裝了tensorflow</span></span><br><span class=\"line\">pip list</span><br><span class=\"line\"><span class=\"comment\"># Package        Version</span></span><br><span class=\"line\"><span class=\"comment\"># -------------------------</span></span><br><span class=\"line\"><span class=\"comment\"># gast           0.3.3</span></span><br><span class=\"line\"><span class=\"comment\"># pip            20.1.1</span></span><br><span class=\"line\"><span class=\"comment\"># tensorflow     1.14.0</span></span><br><span class=\"line\"><span class=\"comment\"># ..........</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 1.1 可能會遇到的問題 : 如果不小心已經裝了比較高版本(2.0.0 &gt; )的tensorflow要先移除掉</span></span><br><span class=\"line\">pip uninstall tensorflow</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2. 安裝tensorflow，如果電腦裡有除了3.7以外的版本，要先檢查環境變數裡的pip是什麼版本的到目錄下</span></span><br><span class=\"line\">pip --version</span><br><span class=\"line\"><span class=\"comment\"># pip 20.1.1 from c:\\users\\UserName\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\pip (python 3.7)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3. C:\\Users\\UserName\\AppData\\Local\\Programs\\Python\\Python37\\Scripts</span></span><br><span class=\"line\">pip install tensorflow==<span class=\"number\">1.14</span><span class=\"number\">.0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 4. run</span></span><br><span class=\"line\"><span class=\"comment\"># 用訓練好的模型檢查圖片</span></span><br><span class=\"line\">C:\\Users\\UserName\\AppData\\Local\\Programs\\Python\\Python37\\python.exe flow --model cfg/yolo.cfg --load bin/yolov2.weights --imgdir sample_img/</span><br><span class=\"line\"><span class=\"comment\"># 用訓練好的模型檢查攝影機</span></span><br><span class=\"line\">C:\\Users\\UserName\\AppData\\Local\\Programs\\Python\\Python37\\python.exe  flow --model cfg/yolo.cfg --load bin/yolov2.weights --demo camera --saveVideo</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 5.準備訓練模型環境(labelimg)</span></span><br><span class=\"line\">git clone https://github.com/tzutalin/labelImg</span><br><span class=\"line\">cd lableimg</span><br><span class=\"line\">pip install resources</span><br><span class=\"line\">pip install requests</span><br><span class=\"line\">pip install staty</span><br><span class=\"line\">pip install lxml</span><br><span class=\"line\">python lableimg.py</span><br><span class=\"line\"><span class=\"comment\"># 5.1 可能會遇到的問題 : No module named 'libs.resources'</span></span><br><span class=\"line\"><span class=\"comment\"># 執行下面指令，再把產生出來的resources.py複製到專案的labelImg\\libs下</span></span><br><span class=\"line\">pyrcc5 -o resources.py resources.qrc</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 5.2 可能會遇到的問題 : pyrcc5 not found</span></span><br><span class=\"line\">pyrcc5.exe -o resources.py resources.qrc</span><br><span class=\"line\">C:\\Users\\UserName\\AppData\\Local\\Programs\\Python\\Python37\\Scripts\\pyrcc5.exe -o resources.py resources.qrc</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 6.使用labelimg標記資料</span></span><br><span class=\"line\">C:\\Users\\UserName\\AppData\\Local\\Programs\\Python\\Python37\\python.exe D:\\Backup\\LeoYang\\Desktop\\Workspace\\labelImg\\labelImg.py</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 7.設定訓練模型相關資料</span></span><br><span class=\"line\"><span class=\"comment\"># 7-1 config 跟作者一樣使用 darkflow\\cfg\\tiny-yolo.cfg</span></span><br><span class=\"line\"><span class=\"comment\">#   7-1-1 [convolutional]</span></span><br><span class=\"line\"><span class=\"comment\">#   裡面應該只會有一行########，把####下的第二個[convolutional]中的filters改成 : 5*(5 + 標記資料時的label數量)</span></span><br><span class=\"line\"><span class=\"comment\">#   ex 我標記3個label，所以filter要改成 : 40 ( 5 * (5 + 3))</span></span><br><span class=\"line\"><span class=\"comment\">#   7-1-2 [classes]</span></span><br><span class=\"line\"><span class=\"comment\">#   裡面應該只會有一行########，把####下的[region]中的classes改成標記資料時的label數量</span></span><br><span class=\"line\"><span class=\"comment\"># 7-2 label.txt</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 8.開始訓練模型</span></span><br><span class=\"line\"><span class=\"comment\">#C:\\Users\\Leoyang\\AppData\\Local\\Programs\\Python\\Python37\\python flow --model [modelPath] --train --dataset [Labeling Image Path] --annotation [LabelImageResultPath]</span></span><br><span class=\"line\"></span><br><span class=\"line\">C:\\Users\\Leoyang\\AppData\\Local\\Programs\\Python\\Python37\\python flow --model cfg/tiny-yolo.cfg --train --dataset D:\\Backup\\LeoYang\\Desktop\\image\\traindata --annotation D:\\Backup\\LeoYang\\Desktop\\Workspace\\labelImg\\leodata</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 5.3 AssertionError: labels.txt and cfg/tiny-yolo.cfg indicate inconsistent class numbers</span></span><br></pre></td></tr></table></figure>"},{"title":"Python Selenium - 解決requests沒辦法解決的問題","catalog":true,"abbrlink":"a88eb325","date":"2020-07-02T08:02:36.000Z","subtitle":null,"header-img":null,"_content":"\n#Python Selenium - 解決requests沒辦法解決的問題\n\n#### 安裝Selenium\n```Python\npip install selenium\n```\n#### 安裝Driver\n###### 以chrome為例子\n```\n下載 https://chromedriver.chromium.org/downloads\n```\n\n#### 簡單範例:\n```Python\n# 引用資源\nfrom selenium import webdriver\nfrom selenium.webdriver.chrome.options import Options\n\n# 設定chrome不顯示\nchrome_options =Options()\nchrome_options.add_argument('--headless')\n\ndriver = webdriver.Chrome(options=chrome_options)\n\n# 設定網址\nurl = 'https://www.ip2.sg/RPS/WP/CM/SearchFastP.aspx'\ndriver.get(url)\n\n# 取得指定Name屬性的標籤\nkeyWord = driver.find_element_by_name(\"ctl00$PlaceHolderMain$uclSimpleSearch$txtSearchText\")\n# 清除標籤內容\nkeyWord.clear()\n# 輸入資料\nkeyWord.send_keys(\"nike\")\n\n# 取得對瀏覽器使用動作????\naction = ActionChains(driver)\n# 取得指定ID的標籤\nidTarget = driver.find_element_by_id(\"slide-to-unlock-old\")\n# 按住標籤\naction.click_and_hold(idTarget).perform()\n# 移動\naction.move_by_offset(50,0)\n# 放開\naction.release().perform()\n```","source":"_posts/Python-Selenium-解決requests沒辦法解決的問題.md","raw":"---\ntitle: Python Selenium - 解決requests沒辦法解決的問題\ncatalog: true\ntags:\n  - Python\nabbrlink: a88eb325\ncategories: uncategorized\ndate: 2020-07-02 16:02:36\nsubtitle:\nheader-img:\n---\n\n#Python Selenium - 解決requests沒辦法解決的問題\n\n#### 安裝Selenium\n```Python\npip install selenium\n```\n#### 安裝Driver\n###### 以chrome為例子\n```\n下載 https://chromedriver.chromium.org/downloads\n```\n\n#### 簡單範例:\n```Python\n# 引用資源\nfrom selenium import webdriver\nfrom selenium.webdriver.chrome.options import Options\n\n# 設定chrome不顯示\nchrome_options =Options()\nchrome_options.add_argument('--headless')\n\ndriver = webdriver.Chrome(options=chrome_options)\n\n# 設定網址\nurl = 'https://www.ip2.sg/RPS/WP/CM/SearchFastP.aspx'\ndriver.get(url)\n\n# 取得指定Name屬性的標籤\nkeyWord = driver.find_element_by_name(\"ctl00$PlaceHolderMain$uclSimpleSearch$txtSearchText\")\n# 清除標籤內容\nkeyWord.clear()\n# 輸入資料\nkeyWord.send_keys(\"nike\")\n\n# 取得對瀏覽器使用動作????\naction = ActionChains(driver)\n# 取得指定ID的標籤\nidTarget = driver.find_element_by_id(\"slide-to-unlock-old\")\n# 按住標籤\naction.click_and_hold(idTarget).perform()\n# 移動\naction.move_by_offset(50,0)\n# 放開\naction.release().perform()\n```","slug":"Python-Selenium-解決requests沒辦法解決的問題","published":1,"updated":"2024-11-21T02:20:00.176Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cm3xvfy84001rewi97pap1201","content":"<p>#Python Selenium - 解決requests沒辦法解決的問題</p>\n<h4><span id=\"安裝selenium\">安裝Selenium</span></h4>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install selenium</span><br></pre></td></tr></table></figure>\n<h4><span id=\"安裝driver\">安裝Driver</span></h4>\n<h6><span id=\"以chrome為例子\">以chrome為例子</span></h6>\n<figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">下載 <span class=\"string\">https:</span><span class=\"comment\">//chromedriver.chromium.org/downloads</span></span><br></pre></td></tr></table></figure>\n<h4><span id=\"簡單範例\">簡單範例:</span></h4>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 引用資源</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> selenium <span class=\"keyword\">import</span> webdriver</span><br><span class=\"line\"><span class=\"keyword\">from</span> selenium.webdriver.chrome.options <span class=\"keyword\">import</span> Options</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 設定chrome不顯示</span></span><br><span class=\"line\">chrome_options =Options()</span><br><span class=\"line\">chrome_options.add_argument(<span class=\"string\">'--headless'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">driver = webdriver.Chrome(options=chrome_options)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 設定網址</span></span><br><span class=\"line\">url = <span class=\"string\">'https://www.ip2.sg/RPS/WP/CM/SearchFastP.aspx'</span></span><br><span class=\"line\">driver.get(url)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 取得指定Name屬性的標籤</span></span><br><span class=\"line\">keyWord = driver.find_element_by_name(<span class=\"string\">\"ctl00$PlaceHolderMain$uclSimpleSearch$txtSearchText\"</span>)</span><br><span class=\"line\"><span class=\"comment\"># 清除標籤內容</span></span><br><span class=\"line\">keyWord.clear()</span><br><span class=\"line\"><span class=\"comment\"># 輸入資料</span></span><br><span class=\"line\">keyWord.send_keys(<span class=\"string\">\"nike\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 取得對瀏覽器使用動作????</span></span><br><span class=\"line\">action = ActionChains(driver)</span><br><span class=\"line\"><span class=\"comment\"># 取得指定ID的標籤</span></span><br><span class=\"line\">idTarget = driver.find_element_by_id(<span class=\"string\">\"slide-to-unlock-old\"</span>)</span><br><span class=\"line\"><span class=\"comment\"># 按住標籤</span></span><br><span class=\"line\">action.click_and_hold(idTarget).perform()</span><br><span class=\"line\"><span class=\"comment\"># 移動</span></span><br><span class=\"line\">action.move_by_offset(<span class=\"number\">50</span>,<span class=\"number\">0</span>)</span><br><span class=\"line\"><span class=\"comment\"># 放開</span></span><br><span class=\"line\">action.release().perform()</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>#Python Selenium - 解決requests沒辦法解決的問題</p>\n<h4>安裝Selenium</h4>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install selenium</span><br></pre></td></tr></table></figure>\n<h4>安裝Driver</h4>\n<h6>以chrome為例子</h6>\n<figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">下載 <span class=\"string\">https:</span><span class=\"comment\">//chromedriver.chromium.org/downloads</span></span><br></pre></td></tr></table></figure>\n<h4>簡單範例:</h4>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 引用資源</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> selenium <span class=\"keyword\">import</span> webdriver</span><br><span class=\"line\"><span class=\"keyword\">from</span> selenium.webdriver.chrome.options <span class=\"keyword\">import</span> Options</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 設定chrome不顯示</span></span><br><span class=\"line\">chrome_options =Options()</span><br><span class=\"line\">chrome_options.add_argument(<span class=\"string\">'--headless'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">driver = webdriver.Chrome(options=chrome_options)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 設定網址</span></span><br><span class=\"line\">url = <span class=\"string\">'https://www.ip2.sg/RPS/WP/CM/SearchFastP.aspx'</span></span><br><span class=\"line\">driver.get(url)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 取得指定Name屬性的標籤</span></span><br><span class=\"line\">keyWord = driver.find_element_by_name(<span class=\"string\">\"ctl00$PlaceHolderMain$uclSimpleSearch$txtSearchText\"</span>)</span><br><span class=\"line\"><span class=\"comment\"># 清除標籤內容</span></span><br><span class=\"line\">keyWord.clear()</span><br><span class=\"line\"><span class=\"comment\"># 輸入資料</span></span><br><span class=\"line\">keyWord.send_keys(<span class=\"string\">\"nike\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 取得對瀏覽器使用動作????</span></span><br><span class=\"line\">action = ActionChains(driver)</span><br><span class=\"line\"><span class=\"comment\"># 取得指定ID的標籤</span></span><br><span class=\"line\">idTarget = driver.find_element_by_id(<span class=\"string\">\"slide-to-unlock-old\"</span>)</span><br><span class=\"line\"><span class=\"comment\"># 按住標籤</span></span><br><span class=\"line\">action.click_and_hold(idTarget).perform()</span><br><span class=\"line\"><span class=\"comment\"># 移動</span></span><br><span class=\"line\">action.move_by_offset(<span class=\"number\">50</span>,<span class=\"number\">0</span>)</span><br><span class=\"line\"><span class=\"comment\"># 放開</span></span><br><span class=\"line\">action.release().perform()</span><br></pre></td></tr></table></figure>"},{"title":"Rider Live Templates","catalog":true,"comments":1,"abbrlink":39800,"date":"2020-08-21T05:42:03.000Z","_content":"\n## Live Templates\n其實就是產生程式碼的範本，如果有一段常常要寫的程式碼要打很多次會浪費很多時間在做一樣的事情\n\n### 怎麼用\n在rider主視窗中按兩下shift，輸入live templates\n![show](show.png)\n\n可以在要寫的語言中設定常用的template，按圖片中右上角的圖案可以新增template<br>\nShortcut 是呼叫範本的代碼，在程式中輸入了代碼再按tab就會自動產生對應的程式碼範本\nRefotmat 不要勾\n![show](setting.png)\n\n### 實際展示\n我常寫的一段產生屬性的方法\n```csharp\nprivate string _Height;\npublic string Height\n{\n    get\n    {\n        return _Height;\n    }\n    set\n    {\n        _Height = value;\n        OnPropertyChanged();\n    }\n}\n```\n在WPF開發時常常要寫很多屬性，這段code我真的寫了無數次\n\n如果我們要用live templates來讓之後可以重複產生這段代碼，但是資料型態跟屬性名稱我希望可以照著我要使用的時候去設定可以這樣設定\n\n![Demo](demo.png)\n\n我先設定這組範本叫做ppt(ProPreTy)，再把資料型態sting 換成變數 \\$Type\\$，屬性名稱PropertyName換成變數\\$PropertyName\\$，最後再讓游標停留在\\$END\\$的位置<br>\n\n在寫程式時只要打ppt再按tab就會產生出這段範本，但是我要輸入兩個變數 \\$Type\\$跟\\$PropertyName\\$\n\n所以整個流程會是\n```\nppt > tab > string > tab > Name > tab > 結束\n```\n","source":"_posts/Rider-Live-Templates.md","raw":"---\ntitle: Rider Live Templates\ncatalog: true\ncomments: true\ntags:\n  - jetbrains\n  - rider\n  - live templates\nabbrlink: 39800\ncategories: uncategorized\ndate: 2020-08-21 13:42:03\n---\n\n## Live Templates\n其實就是產生程式碼的範本，如果有一段常常要寫的程式碼要打很多次會浪費很多時間在做一樣的事情\n\n### 怎麼用\n在rider主視窗中按兩下shift，輸入live templates\n![show](show.png)\n\n可以在要寫的語言中設定常用的template，按圖片中右上角的圖案可以新增template<br>\nShortcut 是呼叫範本的代碼，在程式中輸入了代碼再按tab就會自動產生對應的程式碼範本\nRefotmat 不要勾\n![show](setting.png)\n\n### 實際展示\n我常寫的一段產生屬性的方法\n```csharp\nprivate string _Height;\npublic string Height\n{\n    get\n    {\n        return _Height;\n    }\n    set\n    {\n        _Height = value;\n        OnPropertyChanged();\n    }\n}\n```\n在WPF開發時常常要寫很多屬性，這段code我真的寫了無數次\n\n如果我們要用live templates來讓之後可以重複產生這段代碼，但是資料型態跟屬性名稱我希望可以照著我要使用的時候去設定可以這樣設定\n\n![Demo](demo.png)\n\n我先設定這組範本叫做ppt(ProPreTy)，再把資料型態sting 換成變數 \\$Type\\$，屬性名稱PropertyName換成變數\\$PropertyName\\$，最後再讓游標停留在\\$END\\$的位置<br>\n\n在寫程式時只要打ppt再按tab就會產生出這段範本，但是我要輸入兩個變數 \\$Type\\$跟\\$PropertyName\\$\n\n所以整個流程會是\n```\nppt > tab > string > tab > Name > tab > 結束\n```\n","slug":"Rider-Live-Templates","published":1,"updated":"2024-11-21T02:20:00.177Z","layout":"post","photos":[],"link":"","_id":"cm3xvfy85001uewi9w9788wyq","content":"<h2><span id=\"live-templates\">Live Templates</span></h2>\n<p>其實就是產生程式碼的範本，如果有一段常常要寫的程式碼要打很多次會浪費很多時間在做一樣的事情</p>\n<h3><span id=\"怎麼用\">怎麼用</span></h3>\n<p>在rider主視窗中按兩下shift，輸入live templates<br>\n<img src=\"show.png\" alt=\"show\"></p>\n<p>可以在要寫的語言中設定常用的template，按圖片中右上角的圖案可以新增template<br><br>\nShortcut 是呼叫範本的代碼，在程式中輸入了代碼再按tab就會自動產生對應的程式碼範本<br>\nRefotmat 不要勾<br>\n<img src=\"setting.png\" alt=\"show\"></p>\n<h3><span id=\"實際展示\">實際展示</span></h3>\n<p>我常寫的一段產生屬性的方法</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">string</span> _Height;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">string</span> Height</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">get</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> _Height;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">set</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        _Height = <span class=\"keyword\">value</span>;</span><br><span class=\"line\">        OnPropertyChanged();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>在WPF開發時常常要寫很多屬性，這段code我真的寫了無數次</p>\n<p>如果我們要用live templates來讓之後可以重複產生這段代碼，但是資料型態跟屬性名稱我希望可以照著我要使用的時候去設定可以這樣設定</p>\n<p><img src=\"demo.png\" alt=\"Demo\"></p>\n<p>我先設定這組範本叫做ppt(ProPreTy)，再把資料型態sting 換成變數 $Type$，屬性名稱PropertyName換成變數$PropertyName$，最後再讓游標停留在$END$的位置<br></p>\n<p>在寫程式時只要打ppt再按tab就會產生出這段範本，但是我要輸入兩個變數 $Type$跟$PropertyName$</p>\n<p>所以整個流程會是</p>\n<figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ppt &gt; <span class=\"literal\">tab</span> &gt; <span class=\"built_in\">string</span> &gt; <span class=\"literal\">tab</span> &gt; Name &gt; <span class=\"literal\">tab</span> &gt; 結束</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2>Live Templates</h2>\n<p>其實就是產生程式碼的範本，如果有一段常常要寫的程式碼要打很多次會浪費很多時間在做一樣的事情</p>\n<h3>怎麼用</h3>\n<p>在rider主視窗中按兩下shift，輸入live templates<br>\n<img src=\"show.png\" alt=\"show\"></p>\n<p>可以在要寫的語言中設定常用的template，按圖片中右上角的圖案可以新增template<br><br>\nShortcut 是呼叫範本的代碼，在程式中輸入了代碼再按tab就會自動產生對應的程式碼範本<br>\nRefotmat 不要勾<br>\n<img src=\"setting.png\" alt=\"show\"></p>\n<h3>實際展示</h3>\n<p>我常寫的一段產生屬性的方法</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">string</span> _Height;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">string</span> Height</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">get</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> _Height;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">set</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        _Height = <span class=\"keyword\">value</span>;</span><br><span class=\"line\">        OnPropertyChanged();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>在WPF開發時常常要寫很多屬性，這段code我真的寫了無數次</p>\n<p>如果我們要用live templates來讓之後可以重複產生這段代碼，但是資料型態跟屬性名稱我希望可以照著我要使用的時候去設定可以這樣設定</p>\n<p><img src=\"demo.png\" alt=\"Demo\"></p>\n<p>我先設定這組範本叫做ppt(ProPreTy)，再把資料型態sting 換成變數 $Type$，屬性名稱PropertyName換成變數$PropertyName$，最後再讓游標停留在$END$的位置<br></p>\n<p>在寫程式時只要打ppt再按tab就會產生出這段範本，但是我要輸入兩個變數 $Type$跟$PropertyName$</p>\n<p>所以整個流程會是</p>\n<figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ppt &gt; <span class=\"literal\">tab</span> &gt; <span class=\"built_in\">string</span> &gt; <span class=\"literal\">tab</span> &gt; Name &gt; <span class=\"literal\">tab</span> &gt; 結束</span><br></pre></td></tr></table></figure>\n"},{"title":"SQL Server Replication 發布資料庫失敗","catalog":true,"comments":1,"abbrlink":62900,"date":"2020-12-10T07:13:30.000Z","_content":"## SQL Server Replication 發布資料庫失敗\n\n\n### 環境 \nWindows Server 2016 Standard\n### 版本 \nMicrosoft SQL Server 2019 (RTM) - 15.0.2000.5 (X64)   Sep 24 2019 13:48:23   Copyright (C) 2019 Microsoft Corporation  Developer Edition (64-bit) on Windows Server 2016 Standard 10.0 <X64> (Build 14393: ) (Hypervisor) \n\n[我是參考這篇MSDN上的回答](https://docs.microsoft.com/zh-tw/archive/blogs/sqlserverfaq/snapshot-agent-fails-with-error-241-severity-16-state-1-conversion-failed-when-converting-date-andor-time-from-character-string)\n\n---\n### 錯誤訊息: \n```\nMessage: 資料查詢失敗\nStack:    at Microsoft.SqlServer.Replication.Snapshot.SqlServer.NativeBcpOutProvider.ThrowNativeBcpOutException(CConnection* pNativeConnectionWrapper)\n   at Microsoft.SqlServer.Replication.Snapshot.SqlServer.NativeBcpOutProvider.BcpOut(String strBcpObjectName, String strBcpObjectOwner, String strBaseBcpObjectName, Boolean fUnicodeConversion, String strDataFile, String strLoadOrderingHint, String strWhereClause, Boolean useTableLockHint, Int32 bcpFileFormatVersion)\n   at Microsoft.SqlServer.Replication.Snapshot.SqlServer.BcpOutThreadProvider.DoWork(WorkItem workItem)\n   at Microsoft.SqlServer.Replication.WorkerThread.NonExceptionBasedAgentThreadProc()\n   at Microsoft.SqlServer.Replication.AgentCore.BaseAgentThread.AgentThreadProcWrapper() (來源: MSSQLServer，錯誤號碼: 0)\n取得說明: http://help/0\nMessage: Conversion failed when converting date and/or time from character string.\nStack:  (來源: MSSQLServer，錯誤號碼: 241)\n取得說明: http://help/241\n```\n![Publish Fail](ReplicationQ.PNG)\n\n只要在設定發布集的時候，設定條件\n```SQL\nwhere 1 = 1\n```\n![Solution](ReplicationSolution.PNG)\n","source":"_posts/SQL-Server-Replication-發布資料庫失敗.md","raw":"---\ntitle: SQL Server Replication 發布資料庫失敗\ncatalog: true\ncomments: true\ntags:\n  - SQL\nabbrlink: 62900\ncategories: uncategorized\ndate: 2020-12-10 15:13:30\n---\n## SQL Server Replication 發布資料庫失敗\n\n\n### 環境 \nWindows Server 2016 Standard\n### 版本 \nMicrosoft SQL Server 2019 (RTM) - 15.0.2000.5 (X64)   Sep 24 2019 13:48:23   Copyright (C) 2019 Microsoft Corporation  Developer Edition (64-bit) on Windows Server 2016 Standard 10.0 <X64> (Build 14393: ) (Hypervisor) \n\n[我是參考這篇MSDN上的回答](https://docs.microsoft.com/zh-tw/archive/blogs/sqlserverfaq/snapshot-agent-fails-with-error-241-severity-16-state-1-conversion-failed-when-converting-date-andor-time-from-character-string)\n\n---\n### 錯誤訊息: \n```\nMessage: 資料查詢失敗\nStack:    at Microsoft.SqlServer.Replication.Snapshot.SqlServer.NativeBcpOutProvider.ThrowNativeBcpOutException(CConnection* pNativeConnectionWrapper)\n   at Microsoft.SqlServer.Replication.Snapshot.SqlServer.NativeBcpOutProvider.BcpOut(String strBcpObjectName, String strBcpObjectOwner, String strBaseBcpObjectName, Boolean fUnicodeConversion, String strDataFile, String strLoadOrderingHint, String strWhereClause, Boolean useTableLockHint, Int32 bcpFileFormatVersion)\n   at Microsoft.SqlServer.Replication.Snapshot.SqlServer.BcpOutThreadProvider.DoWork(WorkItem workItem)\n   at Microsoft.SqlServer.Replication.WorkerThread.NonExceptionBasedAgentThreadProc()\n   at Microsoft.SqlServer.Replication.AgentCore.BaseAgentThread.AgentThreadProcWrapper() (來源: MSSQLServer，錯誤號碼: 0)\n取得說明: http://help/0\nMessage: Conversion failed when converting date and/or time from character string.\nStack:  (來源: MSSQLServer，錯誤號碼: 241)\n取得說明: http://help/241\n```\n![Publish Fail](ReplicationQ.PNG)\n\n只要在設定發布集的時候，設定條件\n```SQL\nwhere 1 = 1\n```\n![Solution](ReplicationSolution.PNG)\n","slug":"SQL-Server-Replication-發布資料庫失敗","published":1,"updated":"2024-11-21T02:20:00.181Z","layout":"post","photos":[],"link":"","_id":"cm3xvfy86001wewi9jag9ai54","content":"<h2><span id=\"sql-server-replication-發布資料庫失敗\">SQL Server Replication 發布資料庫失敗</span></h2>\n<h3><span id=\"環境\">環境</span></h3>\n<p>Windows Server 2016 Standard</p>\n<h3><span id=\"版本\">版本</span></h3>\n<p>Microsoft SQL Server 2019 (RTM) - 15.0.2000.5 (X64)   Sep 24 2019 13:48:23   Copyright © 2019 Microsoft Corporation  Developer Edition (64-bit) on Windows Server 2016 Standard 10.0 <x64> (Build 14393: ) (Hypervisor)</x64></p>\n<p><a href=\"https://docs.microsoft.com/zh-tw/archive/blogs/sqlserverfaq/snapshot-agent-fails-with-error-241-severity-16-state-1-conversion-failed-when-converting-date-andor-time-from-character-string\" target=\"_blank\" rel=\"noopener\">我是參考這篇MSDN上的回答</a></p>\n<hr>\n<h3><span id=\"錯誤訊息\">錯誤訊息:</span></h3>\n<figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">Message</span>: 資料查詢失敗</span><br><span class=\"line\"><span class=\"symbol\">Stack</span>:    at Microsoft.SqlServer.Replication.Snapshot.SqlServer.NativeBcpOutProvider.ThrowNativeBcpOutException(CConnection* pNativeConnectionWrapper)</span><br><span class=\"line\">   at Microsoft.SqlServer.Replication.Snapshot.SqlServer.NativeBcpOutProvider.<span class=\"keyword\">BcpOut(String </span><span class=\"keyword\">strBcpObjectName, </span><span class=\"keyword\">String </span><span class=\"keyword\">strBcpObjectOwner, </span><span class=\"keyword\">String </span><span class=\"keyword\">strBaseBcpObjectName, </span><span class=\"keyword\">Boolean </span>fUnicodeConversion, <span class=\"keyword\">String </span><span class=\"keyword\">strDataFile, </span><span class=\"keyword\">String </span><span class=\"keyword\">strLoadOrderingHint, </span><span class=\"keyword\">String </span><span class=\"keyword\">strWhereClause, </span><span class=\"keyword\">Boolean </span>useTableLockHint, Int32 <span class=\"keyword\">bcpFileFormatVersion)</span></span><br><span class=\"line\"><span class=\"keyword\"> </span>  at Microsoft.SqlServer.Replication.Snapshot.SqlServer.<span class=\"keyword\">BcpOutThreadProvider.DoWork(WorkItem </span>workItem)</span><br><span class=\"line\">   at Microsoft.SqlServer.Replication.WorkerThread.NonExceptionBasedAgentThreadProc()</span><br><span class=\"line\">   at Microsoft.SqlServer.Replication.AgentCore.<span class=\"keyword\">BaseAgentThread.AgentThreadProcWrapper() </span>(來源: MSSQLServer，錯誤號碼: <span class=\"number\">0</span>)</span><br><span class=\"line\">取得說明: http://help/<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"symbol\">Message</span>: Conversion failed when converting date <span class=\"keyword\">and/or </span>time from character <span class=\"keyword\">string.</span></span><br><span class=\"line\"><span class=\"keyword\">Stack: </span> (來源: MSSQLServer，錯誤號碼: <span class=\"number\">241</span>)</span><br><span class=\"line\">取得說明: http://help/<span class=\"number\">241</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"ReplicationQ.PNG\" alt=\"Publish Fail\"></p>\n<p>只要在設定發布集的時候，設定條件</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">where 1 = 1</span><br></pre></td></tr></table></figure>\n<p><img src=\"ReplicationSolution.PNG\" alt=\"Solution\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h2>SQL Server Replication 發布資料庫失敗</h2>\n<h3>環境</h3>\n<p>Windows Server 2016 Standard</p>\n<h3>版本</h3>\n<p>Microsoft SQL Server 2019 (RTM) - 15.0.2000.5 (X64)   Sep 24 2019 13:48:23   Copyright © 2019 Microsoft Corporation  Developer Edition (64-bit) on Windows Server 2016 Standard 10.0 <x64> (Build 14393: ) (Hypervisor)</x64></p>\n<p><a href=\"https://docs.microsoft.com/zh-tw/archive/blogs/sqlserverfaq/snapshot-agent-fails-with-error-241-severity-16-state-1-conversion-failed-when-converting-date-andor-time-from-character-string\" target=\"_blank\" rel=\"noopener\">我是參考這篇MSDN上的回答</a></p>\n<hr>\n<h3>錯誤訊息:</h3>\n<figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">Message</span>: 資料查詢失敗</span><br><span class=\"line\"><span class=\"symbol\">Stack</span>:    at Microsoft.SqlServer.Replication.Snapshot.SqlServer.NativeBcpOutProvider.ThrowNativeBcpOutException(CConnection* pNativeConnectionWrapper)</span><br><span class=\"line\">   at Microsoft.SqlServer.Replication.Snapshot.SqlServer.NativeBcpOutProvider.<span class=\"keyword\">BcpOut(String </span><span class=\"keyword\">strBcpObjectName, </span><span class=\"keyword\">String </span><span class=\"keyword\">strBcpObjectOwner, </span><span class=\"keyword\">String </span><span class=\"keyword\">strBaseBcpObjectName, </span><span class=\"keyword\">Boolean </span>fUnicodeConversion, <span class=\"keyword\">String </span><span class=\"keyword\">strDataFile, </span><span class=\"keyword\">String </span><span class=\"keyword\">strLoadOrderingHint, </span><span class=\"keyword\">String </span><span class=\"keyword\">strWhereClause, </span><span class=\"keyword\">Boolean </span>useTableLockHint, Int32 <span class=\"keyword\">bcpFileFormatVersion)</span></span><br><span class=\"line\"><span class=\"keyword\"> </span>  at Microsoft.SqlServer.Replication.Snapshot.SqlServer.<span class=\"keyword\">BcpOutThreadProvider.DoWork(WorkItem </span>workItem)</span><br><span class=\"line\">   at Microsoft.SqlServer.Replication.WorkerThread.NonExceptionBasedAgentThreadProc()</span><br><span class=\"line\">   at Microsoft.SqlServer.Replication.AgentCore.<span class=\"keyword\">BaseAgentThread.AgentThreadProcWrapper() </span>(來源: MSSQLServer，錯誤號碼: <span class=\"number\">0</span>)</span><br><span class=\"line\">取得說明: http://help/<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"symbol\">Message</span>: Conversion failed when converting date <span class=\"keyword\">and/or </span>time from character <span class=\"keyword\">string.</span></span><br><span class=\"line\"><span class=\"keyword\">Stack: </span> (來源: MSSQLServer，錯誤號碼: <span class=\"number\">241</span>)</span><br><span class=\"line\">取得說明: http://help/<span class=\"number\">241</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"ReplicationQ.PNG\" alt=\"Publish Fail\"></p>\n<p>只要在設定發布集的時候，設定條件</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">where 1 = 1</span><br></pre></td></tr></table></figure>\n<p><img src=\"ReplicationSolution.PNG\" alt=\"Solution\"></p>\n"},{"title":"StyleCop","catalog":true,"abbrlink":"1a072bcd","date":"2020-07-08T03:02:58.000Z","subtitle":null,"header-img":null,"_content":"## 透過StyleCop檢查Coding StyleStyleCop\n### 1. 安裝VisualStudioExtension\n![extension](extension.PNG)\n\n### 2. 檢查專案\n### 2.1 CodingStyle\n\n可以檢查那些檔案沒有符合團隊的CodingStyle，不用每次都要人工檢查\n![run](run.PNG)\n\n執行結果:\n![result](result.PNG)\n***\n### 2.2 檢查程式碼度量\n可以量化程式的可維護性、複雜度、繼承深度、類別結合程度，看程式哪邊的耦合性太強，跟AXOCover測試結果報表的垃圾分數(CrapScore)有點像，可以透過這個數值去優化程式\n![run](run2.PNG)\n\n結果\n![result](result2.PNG)","source":"_posts/StyleCop.md","raw":"---\ntitle: StyleCop\ncatalog: true\ntags:\n  - C#\n  - StyleCop\nabbrlink: 1a072bcd\ncategories: uncategorized\ndate: 2020-07-08 11:02:58\nsubtitle:\nheader-img:\n---\n## 透過StyleCop檢查Coding StyleStyleCop\n### 1. 安裝VisualStudioExtension\n![extension](extension.PNG)\n\n### 2. 檢查專案\n### 2.1 CodingStyle\n\n可以檢查那些檔案沒有符合團隊的CodingStyle，不用每次都要人工檢查\n![run](run.PNG)\n\n執行結果:\n![result](result.PNG)\n***\n### 2.2 檢查程式碼度量\n可以量化程式的可維護性、複雜度、繼承深度、類別結合程度，看程式哪邊的耦合性太強，跟AXOCover測試結果報表的垃圾分數(CrapScore)有點像，可以透過這個數值去優化程式\n![run](run2.PNG)\n\n結果\n![result](result2.PNG)","slug":"StyleCop","published":1,"updated":"2024-11-21T02:20:00.185Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cm3xvfy87001zewi913pbqhb1","content":"<h2><span id=\"透過stylecop檢查coding-stylestylecop\">透過StyleCop檢查Coding StyleStyleCop</span></h2>\n<h3><span id=\"1-安裝visualstudioextension\">1. 安裝VisualStudioExtension</span></h3>\n<p><img src=\"extension.PNG\" alt=\"extension\"></p>\n<h3><span id=\"2-檢查專案\">2. 檢查專案</span></h3>\n<h3><span id=\"21-codingstyle\">2.1 CodingStyle</span></h3>\n<p>可以檢查那些檔案沒有符合團隊的CodingStyle，不用每次都要人工檢查<br>\n<img src=\"run.PNG\" alt=\"run\"></p>\n<p>執行結果:<br>\n<img src=\"result.PNG\" alt=\"result\"></p>\n<hr>\n<h3><span id=\"22-檢查程式碼度量\">2.2 檢查程式碼度量</span></h3>\n<p>可以量化程式的可維護性、複雜度、繼承深度、類別結合程度，看程式哪邊的耦合性太強，跟AXOCover測試結果報表的垃圾分數(CrapScore)有點像，可以透過這個數值去優化程式<br>\n<img src=\"run2.PNG\" alt=\"run\"></p>\n<p>結果<br>\n<img src=\"result2.PNG\" alt=\"result\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h2>透過StyleCop檢查Coding StyleStyleCop</h2>\n<h3>1. 安裝VisualStudioExtension</h3>\n<p><img src=\"extension.PNG\" alt=\"extension\"></p>\n<h3>2. 檢查專案</h3>\n<h3>2.1 CodingStyle</h3>\n<p>可以檢查那些檔案沒有符合團隊的CodingStyle，不用每次都要人工檢查<br>\n<img src=\"run.PNG\" alt=\"run\"></p>\n<p>執行結果:<br>\n<img src=\"result.PNG\" alt=\"result\"></p>\n<hr>\n<h3>2.2 檢查程式碼度量</h3>\n<p>可以量化程式的可維護性、複雜度、繼承深度、類別結合程度，看程式哪邊的耦合性太強，跟AXOCover測試結果報表的垃圾分數(CrapScore)有點像，可以透過這個數值去優化程式<br>\n<img src=\"run2.PNG\" alt=\"run\"></p>\n<p>結果<br>\n<img src=\"result2.PNG\" alt=\"result\"></p>\n"},{"title":"WPF AutoComplete textbox","catalog":true,"comments":1,"abbrlink":26840,"date":"2022-09-07T06:59:24.000Z","_content":"\n## AutoCompleteTextBox\n### 使用時機\n因為工作需要讀取一些有特定格式的文字資料，所以開發了一個介面去Parsing資料\n但是因為資料量很大所以再程式裡有做一個搜尋的功能，可以去篩選需要的欄位跟資料出來\n![Use](AutoComplete.png)\n\n結果大概長這樣，搭配一些DynamicLinq用起來很方便，可以動態的去篩選資料集中的資料\n![Result](AutoComplete2.png)\n\n### 安裝套件\nAutoCompleteTextBox\n[github](https://github.com/quicoli/WPF-AutoComplete-TextBox) \n![AutoCompleteTextBox](AutoNuget.png)\n\n### 如何使用\n#### C#\n在專案中加入一個 AutoCompleteProvider 類別，並繼承ISuggestionProvider\n```csharp\npublic class AutoCompleteProvider: ISuggestionProvider\n{\n    private readonly List<string> AutoCompleteData = new List<string>();\n\n    public AutoCompleteProvider()\n    {\n        AutoCompleteData.Add(\"BatchNumber\");\n        AutoCompleteData.Add(\"FirmNumber\");\n        AutoCompleteData.Add(\"ReceUnit\");\n        AutoCompleteData.Add(\"SeqNumber\");\n        AutoCompleteData.Add(\"TransType\");\n        AutoCompleteData.Add(\"TranStatus\");\n        AutoCompleteData.Add(\"AccountNumber\");\n        AutoCompleteData.Add(\"TranDate\");\n        AutoCompleteData.Add(\"DebitAmount\");\n        AutoCompleteData.Add(\"UnblockAmount\");\n        AutoCompleteData.Add(\"AccountCheck\");\n        AutoCompleteData.Add(\"AmountCheck\");\n        AutoCompleteData.Add(\"UnblockAcountCheck\");\n        AutoCompleteData.Add(\"CurrencyCode\");\n        AutoCompleteData.Add(\"ClientCode\");\n\n        AutoCompleteData.Add(\"ClientIdno\");\n        AutoCompleteData.Add(\"AECode\");\n        AutoCompleteData.Add(\"StockNo\");\n        AutoCompleteData.Add(\"StockName\");\n        AutoCompleteData.Add(\"OriginalBlockAmount\");\n        AutoCompleteData.Add(\"OriginalBlockDate\");\n        AutoCompleteData.Add(\"OriginalBlockSerial\");\n        AutoCompleteData.Add(@\"in (\"\")\");\n        AutoCompleteData.Add(@\"and\");\n        AutoCompleteData.Add(@\"or\");\n    }\n\n    public IEnumerable GetSuggestions(string filter)\n    {\n        var allWord = filter.Split(' ');\n        string target = allWord.Last();\n        return AutoCompleteData.Where(x=>x.Contains(target)).ToList();\n    }\n}\n```\n#### Xaml\n1.xaml加入命名空間\n```xml\n<window x:Class=\"MainWindow\"\n.\n.\n.\nxmlns:editors=\"http://wpfcontrols.com/\"\n.\n.\n\n>\n```\n2.引用靜態資源\n```xml\n.\n.\n.\n<Window.Resources>\n    <local:AutoCompleteProvider x:Key=\"AutoCompleteProvider\" />\n</Window.Resources>\n.\n.\n\n>\n```\n3.加入元件\n```xml\n<editors:AutoCompleteTextBox\n    Width=\"797\" Margin=\"15,0,0,0\"\n    Text=\"{Binding LinqQuery}\"\n    Provider=\"{StaticResource ResourceKey=AutoCompleteProvider}\"\n    SelectedItem=\"{Binding SelectedNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}\"\n    Watermark=\"Enter a filter query\">         \n    <editors:AutoCompleteTextBox.LoadingContent>\n        <TextBlock Margin=\"5\" FontSize=\"14\" Text=\"Loading...\" />            \n    </editors:AutoCompleteTextBox.LoadingContent>\n</editors:AutoCompleteTextBox>\n```\n做完輸入文字就會跑出你有設定好要自動完成的文字hen方便，如果不行的話作者github上也有提供sample code可以參考\n![Result](AutoComplete2.png)","source":"_posts/WPF-AutoComplete-textbox.md","raw":"---\ntitle: WPF AutoComplete textbox\ncatalog: true\ncomments: true\ntags:\n  - C#\n  - WPF\n  - Chart\nabbrlink: 26840\ncategories: uncategorized\ndate: 2022-09-07 14:59:24\n---\n\n## AutoCompleteTextBox\n### 使用時機\n因為工作需要讀取一些有特定格式的文字資料，所以開發了一個介面去Parsing資料\n但是因為資料量很大所以再程式裡有做一個搜尋的功能，可以去篩選需要的欄位跟資料出來\n![Use](AutoComplete.png)\n\n結果大概長這樣，搭配一些DynamicLinq用起來很方便，可以動態的去篩選資料集中的資料\n![Result](AutoComplete2.png)\n\n### 安裝套件\nAutoCompleteTextBox\n[github](https://github.com/quicoli/WPF-AutoComplete-TextBox) \n![AutoCompleteTextBox](AutoNuget.png)\n\n### 如何使用\n#### C#\n在專案中加入一個 AutoCompleteProvider 類別，並繼承ISuggestionProvider\n```csharp\npublic class AutoCompleteProvider: ISuggestionProvider\n{\n    private readonly List<string> AutoCompleteData = new List<string>();\n\n    public AutoCompleteProvider()\n    {\n        AutoCompleteData.Add(\"BatchNumber\");\n        AutoCompleteData.Add(\"FirmNumber\");\n        AutoCompleteData.Add(\"ReceUnit\");\n        AutoCompleteData.Add(\"SeqNumber\");\n        AutoCompleteData.Add(\"TransType\");\n        AutoCompleteData.Add(\"TranStatus\");\n        AutoCompleteData.Add(\"AccountNumber\");\n        AutoCompleteData.Add(\"TranDate\");\n        AutoCompleteData.Add(\"DebitAmount\");\n        AutoCompleteData.Add(\"UnblockAmount\");\n        AutoCompleteData.Add(\"AccountCheck\");\n        AutoCompleteData.Add(\"AmountCheck\");\n        AutoCompleteData.Add(\"UnblockAcountCheck\");\n        AutoCompleteData.Add(\"CurrencyCode\");\n        AutoCompleteData.Add(\"ClientCode\");\n\n        AutoCompleteData.Add(\"ClientIdno\");\n        AutoCompleteData.Add(\"AECode\");\n        AutoCompleteData.Add(\"StockNo\");\n        AutoCompleteData.Add(\"StockName\");\n        AutoCompleteData.Add(\"OriginalBlockAmount\");\n        AutoCompleteData.Add(\"OriginalBlockDate\");\n        AutoCompleteData.Add(\"OriginalBlockSerial\");\n        AutoCompleteData.Add(@\"in (\"\")\");\n        AutoCompleteData.Add(@\"and\");\n        AutoCompleteData.Add(@\"or\");\n    }\n\n    public IEnumerable GetSuggestions(string filter)\n    {\n        var allWord = filter.Split(' ');\n        string target = allWord.Last();\n        return AutoCompleteData.Where(x=>x.Contains(target)).ToList();\n    }\n}\n```\n#### Xaml\n1.xaml加入命名空間\n```xml\n<window x:Class=\"MainWindow\"\n.\n.\n.\nxmlns:editors=\"http://wpfcontrols.com/\"\n.\n.\n\n>\n```\n2.引用靜態資源\n```xml\n.\n.\n.\n<Window.Resources>\n    <local:AutoCompleteProvider x:Key=\"AutoCompleteProvider\" />\n</Window.Resources>\n.\n.\n\n>\n```\n3.加入元件\n```xml\n<editors:AutoCompleteTextBox\n    Width=\"797\" Margin=\"15,0,0,0\"\n    Text=\"{Binding LinqQuery}\"\n    Provider=\"{StaticResource ResourceKey=AutoCompleteProvider}\"\n    SelectedItem=\"{Binding SelectedNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}\"\n    Watermark=\"Enter a filter query\">         \n    <editors:AutoCompleteTextBox.LoadingContent>\n        <TextBlock Margin=\"5\" FontSize=\"14\" Text=\"Loading...\" />            \n    </editors:AutoCompleteTextBox.LoadingContent>\n</editors:AutoCompleteTextBox>\n```\n做完輸入文字就會跑出你有設定好要自動完成的文字hen方便，如果不行的話作者github上也有提供sample code可以參考\n![Result](AutoComplete2.png)","slug":"WPF-AutoComplete-textbox","published":1,"updated":"2024-11-21T02:20:00.191Z","layout":"post","photos":[],"link":"","_id":"cm3xvfy880022ewi9tczgpbhu","content":"<h2><span id=\"autocompletetextbox\">AutoCompleteTextBox</span></h2>\n<h3><span id=\"使用時機\">使用時機</span></h3>\n<p>因為工作需要讀取一些有特定格式的文字資料，所以開發了一個介面去Parsing資料<br>\n但是因為資料量很大所以再程式裡有做一個搜尋的功能，可以去篩選需要的欄位跟資料出來<br>\n<img src=\"AutoComplete.png\" alt=\"Use\"></p>\n<p>結果大概長這樣，搭配一些DynamicLinq用起來很方便，可以動態的去篩選資料集中的資料<br>\n<img src=\"AutoComplete2.png\" alt=\"Result\"></p>\n<h3><span id=\"安裝套件\">安裝套件</span></h3>\n<p>AutoCompleteTextBox<br>\n<a href=\"https://github.com/quicoli/WPF-AutoComplete-TextBox\" target=\"_blank\" rel=\"noopener\">github</a><br>\n<img src=\"AutoNuget.png\" alt=\"AutoCompleteTextBox\"></p>\n<h3><span id=\"如何使用\">如何使用</span></h3>\n<h4><span id=\"c\">C#</span></h4>\n<p>在專案中加入一個 AutoCompleteProvider 類別，並繼承ISuggestionProvider</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">AutoCompleteProvider</span>: <span class=\"title\">ISuggestionProvider</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">readonly</span> List&lt;<span class=\"keyword\">string</span>&gt; AutoCompleteData = <span class=\"keyword\">new</span> List&lt;<span class=\"keyword\">string</span>&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">AutoCompleteProvider</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        AutoCompleteData.Add(<span class=\"string\">\"BatchNumber\"</span>);</span><br><span class=\"line\">        AutoCompleteData.Add(<span class=\"string\">\"FirmNumber\"</span>);</span><br><span class=\"line\">        AutoCompleteData.Add(<span class=\"string\">\"ReceUnit\"</span>);</span><br><span class=\"line\">        AutoCompleteData.Add(<span class=\"string\">\"SeqNumber\"</span>);</span><br><span class=\"line\">        AutoCompleteData.Add(<span class=\"string\">\"TransType\"</span>);</span><br><span class=\"line\">        AutoCompleteData.Add(<span class=\"string\">\"TranStatus\"</span>);</span><br><span class=\"line\">        AutoCompleteData.Add(<span class=\"string\">\"AccountNumber\"</span>);</span><br><span class=\"line\">        AutoCompleteData.Add(<span class=\"string\">\"TranDate\"</span>);</span><br><span class=\"line\">        AutoCompleteData.Add(<span class=\"string\">\"DebitAmount\"</span>);</span><br><span class=\"line\">        AutoCompleteData.Add(<span class=\"string\">\"UnblockAmount\"</span>);</span><br><span class=\"line\">        AutoCompleteData.Add(<span class=\"string\">\"AccountCheck\"</span>);</span><br><span class=\"line\">        AutoCompleteData.Add(<span class=\"string\">\"AmountCheck\"</span>);</span><br><span class=\"line\">        AutoCompleteData.Add(<span class=\"string\">\"UnblockAcountCheck\"</span>);</span><br><span class=\"line\">        AutoCompleteData.Add(<span class=\"string\">\"CurrencyCode\"</span>);</span><br><span class=\"line\">        AutoCompleteData.Add(<span class=\"string\">\"ClientCode\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        AutoCompleteData.Add(<span class=\"string\">\"ClientIdno\"</span>);</span><br><span class=\"line\">        AutoCompleteData.Add(<span class=\"string\">\"AECode\"</span>);</span><br><span class=\"line\">        AutoCompleteData.Add(<span class=\"string\">\"StockNo\"</span>);</span><br><span class=\"line\">        AutoCompleteData.Add(<span class=\"string\">\"StockName\"</span>);</span><br><span class=\"line\">        AutoCompleteData.Add(<span class=\"string\">\"OriginalBlockAmount\"</span>);</span><br><span class=\"line\">        AutoCompleteData.Add(<span class=\"string\">\"OriginalBlockDate\"</span>);</span><br><span class=\"line\">        AutoCompleteData.Add(<span class=\"string\">\"OriginalBlockSerial\"</span>);</span><br><span class=\"line\">        AutoCompleteData.Add(<span class=\"string\">@\"in (\"\")\"</span>);</span><br><span class=\"line\">        AutoCompleteData.Add(<span class=\"string\">@\"and\"</span>);</span><br><span class=\"line\">        AutoCompleteData.Add(<span class=\"string\">@\"or\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> IEnumerable <span class=\"title\">GetSuggestions</span>(<span class=\"params\"><span class=\"keyword\">string</span> filter</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> allWord = filter.Split(<span class=\"string\">' '</span>);</span><br><span class=\"line\">        <span class=\"keyword\">string</span> target = allWord.Last();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> AutoCompleteData.Where(x=&gt;x.Contains(target)).ToList();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4><span id=\"xaml\">Xaml</span></h4>\n<p>1.xaml加入命名空間</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">window</span> <span class=\"attr\">x:Class</span>=<span class=\"string\">\"MainWindow\"</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"attr\">.</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"attr\">.</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"attr\">.</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"attr\">xmlns:editors</span>=<span class=\"string\">\"http://wpfcontrols.com/\"</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"attr\">.</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"attr\">.</span></span></span><br><span class=\"line\"><span class=\"tag\"></span></span><br><span class=\"line\"><span class=\"tag\">&gt;</span></span><br></pre></td></tr></table></figure>\n<p>2.引用靜態資源</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">.</span><br><span class=\"line\">.</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Window.Resources</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">local:AutoCompleteProvider</span> <span class=\"attr\">x:Key</span>=<span class=\"string\">\"AutoCompleteProvider\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Window.Resources</span>&gt;</span></span><br><span class=\"line\">.</span><br><span class=\"line\">.</span><br><span class=\"line\"></span><br><span class=\"line\">&gt;</span><br></pre></td></tr></table></figure>\n<p>3.加入元件</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">editors:AutoCompleteTextBox</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">Width</span>=<span class=\"string\">\"797\"</span> <span class=\"attr\">Margin</span>=<span class=\"string\">\"15,0,0,0\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">Text</span>=<span class=\"string\">\"&#123;Binding LinqQuery&#125;\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">Provider</span>=<span class=\"string\">\"&#123;StaticResource ResourceKey=AutoCompleteProvider&#125;\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">SelectedItem</span>=<span class=\"string\">\"&#123;Binding SelectedNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged&#125;\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">Watermark</span>=<span class=\"string\">\"Enter a filter query\"</span>&gt;</span>         </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">editors:AutoCompleteTextBox.LoadingContent</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextBlock</span> <span class=\"attr\">Margin</span>=<span class=\"string\">\"5\"</span> <span class=\"attr\">FontSize</span>=<span class=\"string\">\"14\"</span> <span class=\"attr\">Text</span>=<span class=\"string\">\"Loading...\"</span> /&gt;</span>            </span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">editors:AutoCompleteTextBox.LoadingContent</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">editors:AutoCompleteTextBox</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>做完輸入文字就會跑出你有設定好要自動完成的文字hen方便，如果不行的話作者github上也有提供sample code可以參考<br>\n<img src=\"AutoComplete2.png\" alt=\"Result\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h2>AutoCompleteTextBox</h2>\n<h3>使用時機</h3>\n<p>因為工作需要讀取一些有特定格式的文字資料，所以開發了一個介面去Parsing資料<br>\n但是因為資料量很大所以再程式裡有做一個搜尋的功能，可以去篩選需要的欄位跟資料出來<br>\n<img src=\"AutoComplete.png\" alt=\"Use\"></p>\n<p>結果大概長這樣，搭配一些DynamicLinq用起來很方便，可以動態的去篩選資料集中的資料<br>\n<img src=\"AutoComplete2.png\" alt=\"Result\"></p>\n<h3>安裝套件</h3>\n<p>AutoCompleteTextBox<br>\n<a href=\"https://github.com/quicoli/WPF-AutoComplete-TextBox\" target=\"_blank\" rel=\"noopener\">github</a><br>\n<img src=\"AutoNuget.png\" alt=\"AutoCompleteTextBox\"></p>\n<h3>如何使用</h3>\n<h4>C#</h4>\n<p>在專案中加入一個 AutoCompleteProvider 類別，並繼承ISuggestionProvider</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">AutoCompleteProvider</span>: <span class=\"title\">ISuggestionProvider</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">readonly</span> List&lt;<span class=\"keyword\">string</span>&gt; AutoCompleteData = <span class=\"keyword\">new</span> List&lt;<span class=\"keyword\">string</span>&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">AutoCompleteProvider</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        AutoCompleteData.Add(<span class=\"string\">\"BatchNumber\"</span>);</span><br><span class=\"line\">        AutoCompleteData.Add(<span class=\"string\">\"FirmNumber\"</span>);</span><br><span class=\"line\">        AutoCompleteData.Add(<span class=\"string\">\"ReceUnit\"</span>);</span><br><span class=\"line\">        AutoCompleteData.Add(<span class=\"string\">\"SeqNumber\"</span>);</span><br><span class=\"line\">        AutoCompleteData.Add(<span class=\"string\">\"TransType\"</span>);</span><br><span class=\"line\">        AutoCompleteData.Add(<span class=\"string\">\"TranStatus\"</span>);</span><br><span class=\"line\">        AutoCompleteData.Add(<span class=\"string\">\"AccountNumber\"</span>);</span><br><span class=\"line\">        AutoCompleteData.Add(<span class=\"string\">\"TranDate\"</span>);</span><br><span class=\"line\">        AutoCompleteData.Add(<span class=\"string\">\"DebitAmount\"</span>);</span><br><span class=\"line\">        AutoCompleteData.Add(<span class=\"string\">\"UnblockAmount\"</span>);</span><br><span class=\"line\">        AutoCompleteData.Add(<span class=\"string\">\"AccountCheck\"</span>);</span><br><span class=\"line\">        AutoCompleteData.Add(<span class=\"string\">\"AmountCheck\"</span>);</span><br><span class=\"line\">        AutoCompleteData.Add(<span class=\"string\">\"UnblockAcountCheck\"</span>);</span><br><span class=\"line\">        AutoCompleteData.Add(<span class=\"string\">\"CurrencyCode\"</span>);</span><br><span class=\"line\">        AutoCompleteData.Add(<span class=\"string\">\"ClientCode\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        AutoCompleteData.Add(<span class=\"string\">\"ClientIdno\"</span>);</span><br><span class=\"line\">        AutoCompleteData.Add(<span class=\"string\">\"AECode\"</span>);</span><br><span class=\"line\">        AutoCompleteData.Add(<span class=\"string\">\"StockNo\"</span>);</span><br><span class=\"line\">        AutoCompleteData.Add(<span class=\"string\">\"StockName\"</span>);</span><br><span class=\"line\">        AutoCompleteData.Add(<span class=\"string\">\"OriginalBlockAmount\"</span>);</span><br><span class=\"line\">        AutoCompleteData.Add(<span class=\"string\">\"OriginalBlockDate\"</span>);</span><br><span class=\"line\">        AutoCompleteData.Add(<span class=\"string\">\"OriginalBlockSerial\"</span>);</span><br><span class=\"line\">        AutoCompleteData.Add(<span class=\"string\">@\"in (\"\")\"</span>);</span><br><span class=\"line\">        AutoCompleteData.Add(<span class=\"string\">@\"and\"</span>);</span><br><span class=\"line\">        AutoCompleteData.Add(<span class=\"string\">@\"or\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> IEnumerable <span class=\"title\">GetSuggestions</span>(<span class=\"params\"><span class=\"keyword\">string</span> filter</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> allWord = filter.Split(<span class=\"string\">' '</span>);</span><br><span class=\"line\">        <span class=\"keyword\">string</span> target = allWord.Last();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> AutoCompleteData.Where(x=&gt;x.Contains(target)).ToList();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4>Xaml</h4>\n<p>1.xaml加入命名空間</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">window</span> <span class=\"attr\">x:Class</span>=<span class=\"string\">\"MainWindow\"</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"attr\">.</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"attr\">.</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"attr\">.</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"attr\">xmlns:editors</span>=<span class=\"string\">\"http://wpfcontrols.com/\"</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"attr\">.</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"attr\">.</span></span></span><br><span class=\"line\"><span class=\"tag\"></span></span><br><span class=\"line\"><span class=\"tag\">&gt;</span></span><br></pre></td></tr></table></figure>\n<p>2.引用靜態資源</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">.</span><br><span class=\"line\">.</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Window.Resources</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">local:AutoCompleteProvider</span> <span class=\"attr\">x:Key</span>=<span class=\"string\">\"AutoCompleteProvider\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Window.Resources</span>&gt;</span></span><br><span class=\"line\">.</span><br><span class=\"line\">.</span><br><span class=\"line\"></span><br><span class=\"line\">&gt;</span><br></pre></td></tr></table></figure>\n<p>3.加入元件</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">editors:AutoCompleteTextBox</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">Width</span>=<span class=\"string\">\"797\"</span> <span class=\"attr\">Margin</span>=<span class=\"string\">\"15,0,0,0\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">Text</span>=<span class=\"string\">\"&#123;Binding LinqQuery&#125;\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">Provider</span>=<span class=\"string\">\"&#123;StaticResource ResourceKey=AutoCompleteProvider&#125;\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">SelectedItem</span>=<span class=\"string\">\"&#123;Binding SelectedNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged&#125;\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">Watermark</span>=<span class=\"string\">\"Enter a filter query\"</span>&gt;</span>         </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">editors:AutoCompleteTextBox.LoadingContent</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextBlock</span> <span class=\"attr\">Margin</span>=<span class=\"string\">\"5\"</span> <span class=\"attr\">FontSize</span>=<span class=\"string\">\"14\"</span> <span class=\"attr\">Text</span>=<span class=\"string\">\"Loading...\"</span> /&gt;</span>            </span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">editors:AutoCompleteTextBox.LoadingContent</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">editors:AutoCompleteTextBox</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>做完輸入文字就會跑出你有設定好要自動完成的文字hen方便，如果不行的話作者github上也有提供sample code可以參考<br>\n<img src=\"AutoComplete2.png\" alt=\"Result\"></p>\n"},{"title":"WPF Binding Command","catalog":true,"abbrlink":"d1703590","date":"2020-07-02T12:45:58.000Z","subtitle":null,"header-img":null,"_content":"#### 為什麼要用Command不用事件\n- 改用Command取代掉事件可以避免記憶體洩漏\n- 可以降低畫面跟程式的耦合性,可以更好釐清問題發生的地方\n- 開發邏輯的人可以直接測試Command引發的動作\n#### 定義一個Command\n```csharp\n//繼承ICommand interface並實做方法\npublic class RelayCommand : ICommand\n{\n    private readonly Action<object> _execute;\n    public event EventHandler CanExecuteChanged;\n\n    public bool CanExecute(object parameter)\n    {\n        return true;\n    }\n\n    public void Execute(object parameter)\n    {\n        _execute.Invoke(parameter);\n    }\n\n    public RelayCommand(Action<object> execute)\n    {\n        _execute = execute;\n    }\n}\n```\n\n#### 引用資源\n專案加入參考(我visual studio 2017 community有找到,rider沒有找到)\n```\nSystem.Windows.Interactivity.dll\n```\n#### xaml加入Interactivity NameSpace\n```xml\nxmlns:i=\"clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity\"\n```\n#### 元件Binding ViewModel中的Command屬性\n```xml\n<Button>\n    <i:Interaction.Triggers>\n        <i:EventTrigger EventName=\"MouseEnter\">\n            <i:InvokeCommandAction Command=\"{Binding ButtonClickCommand}\"/>\n            <!-- or  -->\n            <i:InvokeCommandAction Command=\"{Binding ButtonClickCommand}\" CommandParameter=\"{Binding SomeProperty}\"/>\n        </i:EventTrigger>\n    </i:Interaction.Triggers>\n</Button>\n```\n```csharp\npublic class ViewModel\n{\n    //Command屬性\n    public RelayCommand ButtonClickCommand { get; set; }\n\n    public ViewModel()\n    {\n        ButtonClickCommand = new RelayCommand(ButtonClickCommandAction);\n    } \n\n    public void ButtonClickCommandAction(object Parameter)\n    {\n        //do something\n    }\n}\n```\n\n#### 4.Command傳遞EventArgs\n\n##### 4.1 安裝MVVMLight\nnuget安裝MVVMLight\n##### 4.2 xaml引用資源\n```xml\nxmlns:cmd=\"http://www.galasoft.ch/mvvmlight\"\n```\n##### 4.3 Binding Command\n```xml\n<Button>\n    <i:Interaction.Triggers>\n        <i:EventTrigger EventName=\"MouseEnter\">\n            <!-- <i:InvokeCommandAction Command=\"{Binding UcChooseDataOnClosed}\"/> -->\n            <cmd:EventToCommand PassEventArgsToCommand=\"true\" Command=\"{Binding OnKeyDown}\"/>\n        </i:EventTrigger>\n    </i:Interaction.Triggers>\n</Button>\n```\n##### 4.4 ViewModel\n```csharp\nusing GalaSoft.MvvmLight.CommandWpf;\n\npublic RelayCommand<object> OnKeyDown { get; set; }\n\npublic void InitCommand()\n{\n    OnKeyDown = new RelayCommand<object>(CommandAction);\n}\n\npublic void CommandAction(object Parameter)\n{\n    //可以透過Parameter取得EvengArgs do something\n}\n```","source":"_posts/WPF-Binding-Command.md","raw":"---\ntitle: WPF Binding Command\ncatalog: true\ntags:\n  - C#\n  - WPF\nabbrlink: d1703590\ncategories: uncategorized\ndate: 2020-07-02 20:45:58\nsubtitle:\nheader-img:\n---\n#### 為什麼要用Command不用事件\n- 改用Command取代掉事件可以避免記憶體洩漏\n- 可以降低畫面跟程式的耦合性,可以更好釐清問題發生的地方\n- 開發邏輯的人可以直接測試Command引發的動作\n#### 定義一個Command\n```csharp\n//繼承ICommand interface並實做方法\npublic class RelayCommand : ICommand\n{\n    private readonly Action<object> _execute;\n    public event EventHandler CanExecuteChanged;\n\n    public bool CanExecute(object parameter)\n    {\n        return true;\n    }\n\n    public void Execute(object parameter)\n    {\n        _execute.Invoke(parameter);\n    }\n\n    public RelayCommand(Action<object> execute)\n    {\n        _execute = execute;\n    }\n}\n```\n\n#### 引用資源\n專案加入參考(我visual studio 2017 community有找到,rider沒有找到)\n```\nSystem.Windows.Interactivity.dll\n```\n#### xaml加入Interactivity NameSpace\n```xml\nxmlns:i=\"clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity\"\n```\n#### 元件Binding ViewModel中的Command屬性\n```xml\n<Button>\n    <i:Interaction.Triggers>\n        <i:EventTrigger EventName=\"MouseEnter\">\n            <i:InvokeCommandAction Command=\"{Binding ButtonClickCommand}\"/>\n            <!-- or  -->\n            <i:InvokeCommandAction Command=\"{Binding ButtonClickCommand}\" CommandParameter=\"{Binding SomeProperty}\"/>\n        </i:EventTrigger>\n    </i:Interaction.Triggers>\n</Button>\n```\n```csharp\npublic class ViewModel\n{\n    //Command屬性\n    public RelayCommand ButtonClickCommand { get; set; }\n\n    public ViewModel()\n    {\n        ButtonClickCommand = new RelayCommand(ButtonClickCommandAction);\n    } \n\n    public void ButtonClickCommandAction(object Parameter)\n    {\n        //do something\n    }\n}\n```\n\n#### 4.Command傳遞EventArgs\n\n##### 4.1 安裝MVVMLight\nnuget安裝MVVMLight\n##### 4.2 xaml引用資源\n```xml\nxmlns:cmd=\"http://www.galasoft.ch/mvvmlight\"\n```\n##### 4.3 Binding Command\n```xml\n<Button>\n    <i:Interaction.Triggers>\n        <i:EventTrigger EventName=\"MouseEnter\">\n            <!-- <i:InvokeCommandAction Command=\"{Binding UcChooseDataOnClosed}\"/> -->\n            <cmd:EventToCommand PassEventArgsToCommand=\"true\" Command=\"{Binding OnKeyDown}\"/>\n        </i:EventTrigger>\n    </i:Interaction.Triggers>\n</Button>\n```\n##### 4.4 ViewModel\n```csharp\nusing GalaSoft.MvvmLight.CommandWpf;\n\npublic RelayCommand<object> OnKeyDown { get; set; }\n\npublic void InitCommand()\n{\n    OnKeyDown = new RelayCommand<object>(CommandAction);\n}\n\npublic void CommandAction(object Parameter)\n{\n    //可以透過Parameter取得EvengArgs do something\n}\n```","slug":"WPF-Binding-Command","published":1,"updated":"2024-11-21T02:20:00.195Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cm3xvfy890025ewi9l99oobdl","content":"<h4><span id=\"為什麼要用command不用事件\">為什麼要用Command不用事件</span></h4>\n<ul>\n<li>改用Command取代掉事件可以避免記憶體洩漏</li>\n<li>可以降低畫面跟程式的耦合性,可以更好釐清問題發生的地方</li>\n<li>開發邏輯的人可以直接測試Command引發的動作</li>\n</ul>\n<h4><span id=\"定義一個command\">定義一個Command</span></h4>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//繼承ICommand interface並實做方法</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">RelayCommand</span> : <span class=\"title\">ICommand</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">readonly</span> Action&lt;<span class=\"keyword\">object</span>&gt; _execute;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">event</span> EventHandler CanExecuteChanged;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">bool</span> <span class=\"title\">CanExecute</span>(<span class=\"params\"><span class=\"keyword\">object</span> parameter</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Execute</span>(<span class=\"params\"><span class=\"keyword\">object</span> parameter</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        _execute.Invoke(parameter);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">RelayCommand</span>(<span class=\"params\">Action&lt;<span class=\"keyword\">object</span>&gt; execute</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        _execute = execute;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4><span id=\"引用資源\">引用資源</span></h4>\n<p>專案加入參考(我visual studio 2017 community有找到,rider沒有找到)</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">System</span><span class=\"selector-class\">.Windows</span><span class=\"selector-class\">.Interactivity</span><span class=\"selector-class\">.dll</span></span><br></pre></td></tr></table></figure>\n<h4><span id=\"xaml加入interactivity-namespace\">xaml加入Interactivity NameSpace</span></h4>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xmlns:i=\"clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity\"</span><br></pre></td></tr></table></figure>\n<h4><span id=\"元件binding-viewmodel中的command屬性\">元件Binding ViewModel中的Command屬性</span></h4>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">i:Interaction.Triggers</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">i:EventTrigger</span> <span class=\"attr\">EventName</span>=<span class=\"string\">\"MouseEnter\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">i:InvokeCommandAction</span> <span class=\"attr\">Command</span>=<span class=\"string\">\"&#123;Binding ButtonClickCommand&#125;\"</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- or  --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">i:InvokeCommandAction</span> <span class=\"attr\">Command</span>=<span class=\"string\">\"&#123;Binding ButtonClickCommand&#125;\"</span> <span class=\"attr\">CommandParameter</span>=<span class=\"string\">\"&#123;Binding SomeProperty&#125;\"</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">i:EventTrigger</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">i:Interaction.Triggers</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">ViewModel</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\">//Command屬性</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> RelayCommand ButtonClickCommand &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ViewModel</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        ButtonClickCommand = <span class=\"keyword\">new</span> RelayCommand(ButtonClickCommandAction);</span><br><span class=\"line\">    &#125; </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">ButtonClickCommandAction</span>(<span class=\"params\"><span class=\"keyword\">object</span> Parameter</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        <span class=\"comment\">//do something</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4><span id=\"4command傳遞eventargs\">4.Command傳遞EventArgs</span></h4>\n<h5><span id=\"41-安裝mvvmlight\">4.1 安裝MVVMLight</span></h5>\n<p>nuget安裝MVVMLight</p>\n<h5><span id=\"42-xaml引用資源\">4.2 xaml引用資源</span></h5>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xmlns:cmd=\"http://www.galasoft.ch/mvvmlight\"</span><br></pre></td></tr></table></figure>\n<h5><span id=\"43-binding-command\">4.3 Binding Command</span></h5>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">i:Interaction.Triggers</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">i:EventTrigger</span> <span class=\"attr\">EventName</span>=<span class=\"string\">\"MouseEnter\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- &lt;i:InvokeCommandAction Command=\"&#123;Binding UcChooseDataOnClosed&#125;\"/&gt; --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">cmd:EventToCommand</span> <span class=\"attr\">PassEventArgsToCommand</span>=<span class=\"string\">\"true\"</span> <span class=\"attr\">Command</span>=<span class=\"string\">\"&#123;Binding OnKeyDown&#125;\"</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">i:EventTrigger</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">i:Interaction.Triggers</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h5><span id=\"44-viewmodel\">4.4 ViewModel</span></h5>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> GalaSoft.MvvmLight.CommandWpf;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> RelayCommand&lt;<span class=\"keyword\">object</span>&gt; OnKeyDown &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">InitCommand</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    OnKeyDown = <span class=\"keyword\">new</span> RelayCommand&lt;<span class=\"keyword\">object</span>&gt;(CommandAction);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">CommandAction</span>(<span class=\"params\"><span class=\"keyword\">object</span> Parameter</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//可以透過Parameter取得EvengArgs do something</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h4>為什麼要用Command不用事件</h4>\n<ul>\n<li>改用Command取代掉事件可以避免記憶體洩漏</li>\n<li>可以降低畫面跟程式的耦合性,可以更好釐清問題發生的地方</li>\n<li>開發邏輯的人可以直接測試Command引發的動作</li>\n</ul>\n<h4>定義一個Command</h4>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//繼承ICommand interface並實做方法</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">RelayCommand</span> : <span class=\"title\">ICommand</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">readonly</span> Action&lt;<span class=\"keyword\">object</span>&gt; _execute;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">event</span> EventHandler CanExecuteChanged;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">bool</span> <span class=\"title\">CanExecute</span>(<span class=\"params\"><span class=\"keyword\">object</span> parameter</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Execute</span>(<span class=\"params\"><span class=\"keyword\">object</span> parameter</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        _execute.Invoke(parameter);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">RelayCommand</span>(<span class=\"params\">Action&lt;<span class=\"keyword\">object</span>&gt; execute</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        _execute = execute;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4>引用資源</h4>\n<p>專案加入參考(我visual studio 2017 community有找到,rider沒有找到)</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">System</span><span class=\"selector-class\">.Windows</span><span class=\"selector-class\">.Interactivity</span><span class=\"selector-class\">.dll</span></span><br></pre></td></tr></table></figure>\n<h4>xaml加入Interactivity NameSpace</h4>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xmlns:i=\"clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity\"</span><br></pre></td></tr></table></figure>\n<h4>元件Binding ViewModel中的Command屬性</h4>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">i:Interaction.Triggers</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">i:EventTrigger</span> <span class=\"attr\">EventName</span>=<span class=\"string\">\"MouseEnter\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">i:InvokeCommandAction</span> <span class=\"attr\">Command</span>=<span class=\"string\">\"&#123;Binding ButtonClickCommand&#125;\"</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- or  --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">i:InvokeCommandAction</span> <span class=\"attr\">Command</span>=<span class=\"string\">\"&#123;Binding ButtonClickCommand&#125;\"</span> <span class=\"attr\">CommandParameter</span>=<span class=\"string\">\"&#123;Binding SomeProperty&#125;\"</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">i:EventTrigger</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">i:Interaction.Triggers</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">ViewModel</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\">//Command屬性</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> RelayCommand ButtonClickCommand &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ViewModel</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        ButtonClickCommand = <span class=\"keyword\">new</span> RelayCommand(ButtonClickCommandAction);</span><br><span class=\"line\">    &#125; </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">ButtonClickCommandAction</span>(<span class=\"params\"><span class=\"keyword\">object</span> Parameter</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        <span class=\"comment\">//do something</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4>4.Command傳遞EventArgs</h4>\n<h5>4.1 安裝MVVMLight</h5>\n<p>nuget安裝MVVMLight</p>\n<h5>4.2 xaml引用資源</h5>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xmlns:cmd=\"http://www.galasoft.ch/mvvmlight\"</span><br></pre></td></tr></table></figure>\n<h5>4.3 Binding Command</h5>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">i:Interaction.Triggers</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">i:EventTrigger</span> <span class=\"attr\">EventName</span>=<span class=\"string\">\"MouseEnter\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- &lt;i:InvokeCommandAction Command=\"&#123;Binding UcChooseDataOnClosed&#125;\"/&gt; --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">cmd:EventToCommand</span> <span class=\"attr\">PassEventArgsToCommand</span>=<span class=\"string\">\"true\"</span> <span class=\"attr\">Command</span>=<span class=\"string\">\"&#123;Binding OnKeyDown&#125;\"</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">i:EventTrigger</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">i:Interaction.Triggers</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Button</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h5>4.4 ViewModel</h5>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> GalaSoft.MvvmLight.CommandWpf;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> RelayCommand&lt;<span class=\"keyword\">object</span>&gt; OnKeyDown &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">InitCommand</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    OnKeyDown = <span class=\"keyword\">new</span> RelayCommand&lt;<span class=\"keyword\">object</span>&gt;(CommandAction);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">CommandAction</span>(<span class=\"params\"><span class=\"keyword\">object</span> Parameter</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//可以透過Parameter取得EvengArgs do something</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"WPF Chart","catalog":true,"abbrlink":"67de7c91","date":"2020-07-02T12:22:47.000Z","subtitle":null,"header-img":null,"_content":"\n介紹兩個我常用的圖表元件\n\n## Live Chart\n[LiveChart介紹、SourceCode](https://lvcharts.net/)\n\n### 安裝套件\nnuget安裝LiveCharts.Wpf\n\n### xaml引用資源、使用圖表\n```xml\nxmlns:lvc=\"clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf\"\n```\n\n### 範例\n```\n<Grid>\n    <lvc:PieChart LegendLocation=\"Bottom\" Hoverable=\"False\" DataTooltip=\"{x:Null}\">\n        <lvc:PieChart.Series>\n            <lvc:PieSeries Title=\"C#\" Values=\"2\" DataLabels=\"True\" PushOut=\"8\" />\n            <lvc:PieSeries Title=\"Java\" Values=\"4\" DataLabels=\"True\" />\n            <lvc:PieSeries Title=\"Python\" Values=\"6\" DataLabels=\"True\" />\n            <lvc:PieSeries Title=\"SQL\" Values=\"2\" DataLabels=\"True\" />\n        </lvc:PieChart.Series>\n    </lvc:PieChart>  \n</Grid>\n```\n### 執行結果\n![Result](result.PNG)\n\n### 優點\n很漂亮，想的到的東西都會動\n\n### 缺點\nlive chart在時限mvvm模式的時候比較不友善，而且專案也已經很久沒更新了(2018)。除此之外用的記憶體比較多，在做一些比較複雜的報表也不是說很方便，你只要看了他的sample code就會明白了....\n\n---\n## WPF ToolKit Chart (推薦)\n\n### 安裝套件\nnuget安裝\n```csharp\nSystem.Windows.Controls.DataVisualization.Toolkit\n```\n### 引用資源\n```xml\nxmlns:chartTool=\"clr-namespace:System.Windows.Controls.DataVisualization.Charting;assembly=System.Windows.Controls.DataVisualization.Toolkit\"\n```\n### 範例\n```xml\n<WrapPanel>\n    <chartTool:Chart Height=\"300\" Width=\"800\">\n        <chartTool:BarSeries DependentValuePath=\"Value\" IndependentValuePath=\"Key\" ItemsSource=\"{Binding DataCollection}\"/>\n    </chartTool:Chart>\n    <chartTool:Chart>\n        <chartTool:ColumnSeries MinHeight=\"500\" DependentValuePath=\"Value\" IndependentValuePath=\"Key\" ItemsSource=\"{Binding DataCollection}\"/>\n    </chartTool:Chart>\n    <chartTool:Chart>\n        <chartTool:PieSeries MinHeight=\"500\" DependentValuePath=\"Value\" IndependentValuePath=\"Key\" ItemsSource=\"{Binding DataCollection}\"/>\n    </chartTool:Chart>\n    <chartTool:Chart>\n        <chartTool:AreaSeries MinHeight=\"500\" DependentValuePath=\"Value\" IndependentValuePath=\"Key\" ItemsSource=\"{Binding DataCollection}\"/>\n    </chartTool:Chart>\n    <chartTool:Chart>\n        <chartTool:BubbleSeries MinHeight=\"500\" DependentValuePath=\"Value\" IndependentValuePath=\"Key\" ItemsSource=\"{Binding DataCollection}\"/>\n    </chartTool:Chart>\n    <chartTool:Chart>\n        <chartTool:LineSeries MinHeight=\"500\" DependentValuePath=\"Value\" IndependentValuePath=\"Key\" ItemsSource=\"{Binding DataCollection}\"/>\n    </chartTool:Chart>\n    <chartTool:Chart>\n        <chartTool:ScatterSeries MinHeight=\"500\" DependentValuePath=\"Value\" IndependentValuePath=\"Key\" ItemsSource=\"{Binding DataCollection}\"/>\n    </chartTool:Chart>\n</WrapPanel>\n```\n```csharp\npublic class BarChartViewModel:ViewModelBase\n{\n    private List<DataModel> _DataCollection = new List<DataModel>();\n\n    public BarChartViewModel()\n    {\n        DataCollection.Add(new DataModel(){ Key = \"C#\", Value = 50});\n        DataCollection.Add(new DataModel(){ Key = \"Python\", Value = 20});\n        DataCollection.Add(new DataModel(){ Key = \"SQL\", Value = 30});\n    }\n\n    public List<DataModel> DataCollection\n    {\n        get\n        {\n            return _DataCollection;\n        }\n        set\n        {\n            _DataCollection = value;\n            OnPropertyChanged();\n        }\n    }\n\n}\n\npublic class DataModel\n{\n    public string Key { get; set; }\n    public int Value { get; set; }\n}\n```\n\n### 執行結果\n![Result2](result2.PNG)\n\n### 優點\n雖然沒有像live chart一樣有那麼多動畫，但是可以很輕鬆滿足MVVM的設計，使用資源也很少很好用，你只要在xaml中定義chart位置，把元件的itemsource屬性綁定到ViewModel中，剩下就只要專注在設計ViewModel就可以了\n\n### 缺點\n比較醜\n\n## SampleCode\n[SampleCode](https://github.com/e23882/WPFChartSample)","source":"_posts/WPF-Chart.md","raw":"---\ntitle: WPF Chart\ncatalog: true\ntags:\n  - C#\n  - WPF\n  - Chart\nabbrlink: 67de7c91\ncategories: uncategorized\ndate: 2020-07-02 20:22:47\nsubtitle:\nheader-img:\n---\n\n介紹兩個我常用的圖表元件\n\n## Live Chart\n[LiveChart介紹、SourceCode](https://lvcharts.net/)\n\n### 安裝套件\nnuget安裝LiveCharts.Wpf\n\n### xaml引用資源、使用圖表\n```xml\nxmlns:lvc=\"clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf\"\n```\n\n### 範例\n```\n<Grid>\n    <lvc:PieChart LegendLocation=\"Bottom\" Hoverable=\"False\" DataTooltip=\"{x:Null}\">\n        <lvc:PieChart.Series>\n            <lvc:PieSeries Title=\"C#\" Values=\"2\" DataLabels=\"True\" PushOut=\"8\" />\n            <lvc:PieSeries Title=\"Java\" Values=\"4\" DataLabels=\"True\" />\n            <lvc:PieSeries Title=\"Python\" Values=\"6\" DataLabels=\"True\" />\n            <lvc:PieSeries Title=\"SQL\" Values=\"2\" DataLabels=\"True\" />\n        </lvc:PieChart.Series>\n    </lvc:PieChart>  \n</Grid>\n```\n### 執行結果\n![Result](result.PNG)\n\n### 優點\n很漂亮，想的到的東西都會動\n\n### 缺點\nlive chart在時限mvvm模式的時候比較不友善，而且專案也已經很久沒更新了(2018)。除此之外用的記憶體比較多，在做一些比較複雜的報表也不是說很方便，你只要看了他的sample code就會明白了....\n\n---\n## WPF ToolKit Chart (推薦)\n\n### 安裝套件\nnuget安裝\n```csharp\nSystem.Windows.Controls.DataVisualization.Toolkit\n```\n### 引用資源\n```xml\nxmlns:chartTool=\"clr-namespace:System.Windows.Controls.DataVisualization.Charting;assembly=System.Windows.Controls.DataVisualization.Toolkit\"\n```\n### 範例\n```xml\n<WrapPanel>\n    <chartTool:Chart Height=\"300\" Width=\"800\">\n        <chartTool:BarSeries DependentValuePath=\"Value\" IndependentValuePath=\"Key\" ItemsSource=\"{Binding DataCollection}\"/>\n    </chartTool:Chart>\n    <chartTool:Chart>\n        <chartTool:ColumnSeries MinHeight=\"500\" DependentValuePath=\"Value\" IndependentValuePath=\"Key\" ItemsSource=\"{Binding DataCollection}\"/>\n    </chartTool:Chart>\n    <chartTool:Chart>\n        <chartTool:PieSeries MinHeight=\"500\" DependentValuePath=\"Value\" IndependentValuePath=\"Key\" ItemsSource=\"{Binding DataCollection}\"/>\n    </chartTool:Chart>\n    <chartTool:Chart>\n        <chartTool:AreaSeries MinHeight=\"500\" DependentValuePath=\"Value\" IndependentValuePath=\"Key\" ItemsSource=\"{Binding DataCollection}\"/>\n    </chartTool:Chart>\n    <chartTool:Chart>\n        <chartTool:BubbleSeries MinHeight=\"500\" DependentValuePath=\"Value\" IndependentValuePath=\"Key\" ItemsSource=\"{Binding DataCollection}\"/>\n    </chartTool:Chart>\n    <chartTool:Chart>\n        <chartTool:LineSeries MinHeight=\"500\" DependentValuePath=\"Value\" IndependentValuePath=\"Key\" ItemsSource=\"{Binding DataCollection}\"/>\n    </chartTool:Chart>\n    <chartTool:Chart>\n        <chartTool:ScatterSeries MinHeight=\"500\" DependentValuePath=\"Value\" IndependentValuePath=\"Key\" ItemsSource=\"{Binding DataCollection}\"/>\n    </chartTool:Chart>\n</WrapPanel>\n```\n```csharp\npublic class BarChartViewModel:ViewModelBase\n{\n    private List<DataModel> _DataCollection = new List<DataModel>();\n\n    public BarChartViewModel()\n    {\n        DataCollection.Add(new DataModel(){ Key = \"C#\", Value = 50});\n        DataCollection.Add(new DataModel(){ Key = \"Python\", Value = 20});\n        DataCollection.Add(new DataModel(){ Key = \"SQL\", Value = 30});\n    }\n\n    public List<DataModel> DataCollection\n    {\n        get\n        {\n            return _DataCollection;\n        }\n        set\n        {\n            _DataCollection = value;\n            OnPropertyChanged();\n        }\n    }\n\n}\n\npublic class DataModel\n{\n    public string Key { get; set; }\n    public int Value { get; set; }\n}\n```\n\n### 執行結果\n![Result2](result2.PNG)\n\n### 優點\n雖然沒有像live chart一樣有那麼多動畫，但是可以很輕鬆滿足MVVM的設計，使用資源也很少很好用，你只要在xaml中定義chart位置，把元件的itemsource屬性綁定到ViewModel中，剩下就只要專注在設計ViewModel就可以了\n\n### 缺點\n比較醜\n\n## SampleCode\n[SampleCode](https://github.com/e23882/WPFChartSample)","slug":"WPF-Chart","published":1,"updated":"2024-11-21T02:20:00.196Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cm3xvfy8a0029ewi9tuqu2yae","content":"<p>介紹兩個我常用的圖表元件</p>\n<h2><span id=\"live-chart\">Live Chart</span></h2>\n<p><a href=\"https://lvcharts.net/\" target=\"_blank\" rel=\"noopener\">LiveChart介紹、SourceCode</a></p>\n<h3><span id=\"安裝套件\">安裝套件</span></h3>\n<p>nuget安裝LiveCharts.Wpf</p>\n<h3><span id=\"xaml引用資源-使用圖表\">xaml引用資源、使用圖表</span></h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xmlns:lvc=\"clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf\"</span><br></pre></td></tr></table></figure>\n<h3><span id=\"範例\">範例</span></h3>\n<figure class=\"highlight mathematica\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;<span class=\"keyword\">Grid</span>&gt;</span><br><span class=\"line\">    &lt;lvc:<span class=\"keyword\">PieChart</span> LegendLocation=<span class=\"string\">\"Bottom\"</span> Hoverable=<span class=\"string\">\"False\"</span> DataTooltip=<span class=\"string\">\"&#123;x:Null&#125;\"</span>&gt;</span><br><span class=\"line\">        &lt;lvc:<span class=\"keyword\">PieChart</span>.<span class=\"keyword\">Series</span>&gt;</span><br><span class=\"line\">            &lt;lvc:PieSeries Title=<span class=\"string\">\"C#\"</span> <span class=\"keyword\">Values</span>=<span class=\"string\">\"2\"</span> DataLabels=<span class=\"string\">\"True\"</span> PushOut=<span class=\"string\">\"8\"</span> /&gt;</span><br><span class=\"line\">            &lt;lvc:PieSeries Title=<span class=\"string\">\"Java\"</span> <span class=\"keyword\">Values</span>=<span class=\"string\">\"4\"</span> DataLabels=<span class=\"string\">\"True\"</span> /&gt;</span><br><span class=\"line\">            &lt;lvc:PieSeries Title=<span class=\"string\">\"Python\"</span> <span class=\"keyword\">Values</span>=<span class=\"string\">\"6\"</span> DataLabels=<span class=\"string\">\"True\"</span> /&gt;</span><br><span class=\"line\">            &lt;lvc:PieSeries Title=<span class=\"string\">\"SQL\"</span> <span class=\"keyword\">Values</span>=<span class=\"string\">\"2\"</span> DataLabels=<span class=\"string\">\"True\"</span> /&gt;</span><br><span class=\"line\">        &lt;/lvc:<span class=\"keyword\">PieChart</span>.<span class=\"keyword\">Series</span>&gt;</span><br><span class=\"line\">    &lt;/lvc:<span class=\"keyword\">PieChart</span>&gt;  </span><br><span class=\"line\">&lt;/<span class=\"keyword\">Grid</span>&gt;</span><br></pre></td></tr></table></figure>\n<h3><span id=\"執行結果\">執行結果</span></h3>\n<p><img src=\"result.PNG\" alt=\"Result\"></p>\n<h3><span id=\"優點\">優點</span></h3>\n<p>很漂亮，想的到的東西都會動</p>\n<h3><span id=\"缺點\">缺點</span></h3>\n<p>live chart在時限mvvm模式的時候比較不友善，而且專案也已經很久沒更新了(2018)。除此之外用的記憶體比較多，在做一些比較複雜的報表也不是說很方便，你只要看了他的sample code就會明白了…</p>\n<hr>\n<h2><span id=\"wpf-toolkit-chart-推薦\">WPF ToolKit Chart (推薦)</span></h2>\n<h3><span id=\"安裝套件\">安裝套件</span></h3>\n<p>nuget安裝</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">System.Windows.Controls.DataVisualization.Toolkit</span><br></pre></td></tr></table></figure>\n<h3><span id=\"引用資源\">引用資源</span></h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xmlns:chartTool=\"clr-namespace:System.Windows.Controls.DataVisualization.Charting;assembly=System.Windows.Controls.DataVisualization.Toolkit\"</span><br></pre></td></tr></table></figure>\n<h3><span id=\"範例\">範例</span></h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">WrapPanel</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">chartTool:Chart</span> <span class=\"attr\">Height</span>=<span class=\"string\">\"300\"</span> <span class=\"attr\">Width</span>=<span class=\"string\">\"800\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">chartTool:BarSeries</span> <span class=\"attr\">DependentValuePath</span>=<span class=\"string\">\"Value\"</span> <span class=\"attr\">IndependentValuePath</span>=<span class=\"string\">\"Key\"</span> <span class=\"attr\">ItemsSource</span>=<span class=\"string\">\"&#123;Binding DataCollection&#125;\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">chartTool:Chart</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">chartTool:Chart</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">chartTool:ColumnSeries</span> <span class=\"attr\">MinHeight</span>=<span class=\"string\">\"500\"</span> <span class=\"attr\">DependentValuePath</span>=<span class=\"string\">\"Value\"</span> <span class=\"attr\">IndependentValuePath</span>=<span class=\"string\">\"Key\"</span> <span class=\"attr\">ItemsSource</span>=<span class=\"string\">\"&#123;Binding DataCollection&#125;\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">chartTool:Chart</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">chartTool:Chart</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">chartTool:PieSeries</span> <span class=\"attr\">MinHeight</span>=<span class=\"string\">\"500\"</span> <span class=\"attr\">DependentValuePath</span>=<span class=\"string\">\"Value\"</span> <span class=\"attr\">IndependentValuePath</span>=<span class=\"string\">\"Key\"</span> <span class=\"attr\">ItemsSource</span>=<span class=\"string\">\"&#123;Binding DataCollection&#125;\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">chartTool:Chart</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">chartTool:Chart</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">chartTool:AreaSeries</span> <span class=\"attr\">MinHeight</span>=<span class=\"string\">\"500\"</span> <span class=\"attr\">DependentValuePath</span>=<span class=\"string\">\"Value\"</span> <span class=\"attr\">IndependentValuePath</span>=<span class=\"string\">\"Key\"</span> <span class=\"attr\">ItemsSource</span>=<span class=\"string\">\"&#123;Binding DataCollection&#125;\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">chartTool:Chart</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">chartTool:Chart</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">chartTool:BubbleSeries</span> <span class=\"attr\">MinHeight</span>=<span class=\"string\">\"500\"</span> <span class=\"attr\">DependentValuePath</span>=<span class=\"string\">\"Value\"</span> <span class=\"attr\">IndependentValuePath</span>=<span class=\"string\">\"Key\"</span> <span class=\"attr\">ItemsSource</span>=<span class=\"string\">\"&#123;Binding DataCollection&#125;\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">chartTool:Chart</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">chartTool:Chart</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">chartTool:LineSeries</span> <span class=\"attr\">MinHeight</span>=<span class=\"string\">\"500\"</span> <span class=\"attr\">DependentValuePath</span>=<span class=\"string\">\"Value\"</span> <span class=\"attr\">IndependentValuePath</span>=<span class=\"string\">\"Key\"</span> <span class=\"attr\">ItemsSource</span>=<span class=\"string\">\"&#123;Binding DataCollection&#125;\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">chartTool:Chart</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">chartTool:Chart</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">chartTool:ScatterSeries</span> <span class=\"attr\">MinHeight</span>=<span class=\"string\">\"500\"</span> <span class=\"attr\">DependentValuePath</span>=<span class=\"string\">\"Value\"</span> <span class=\"attr\">IndependentValuePath</span>=<span class=\"string\">\"Key\"</span> <span class=\"attr\">ItemsSource</span>=<span class=\"string\">\"&#123;Binding DataCollection&#125;\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">chartTool:Chart</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">WrapPanel</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">BarChartViewModel</span>:<span class=\"title\">ViewModelBase</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> List&lt;DataModel&gt; _DataCollection = <span class=\"keyword\">new</span> List&lt;DataModel&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">BarChartViewModel</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        DataCollection.Add(<span class=\"keyword\">new</span> DataModel()&#123; Key = <span class=\"string\">\"C#\"</span>, Value = <span class=\"number\">50</span>&#125;);</span><br><span class=\"line\">        DataCollection.Add(<span class=\"keyword\">new</span> DataModel()&#123; Key = <span class=\"string\">\"Python\"</span>, Value = <span class=\"number\">20</span>&#125;);</span><br><span class=\"line\">        DataCollection.Add(<span class=\"keyword\">new</span> DataModel()&#123; Key = <span class=\"string\">\"SQL\"</span>, Value = <span class=\"number\">30</span>&#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> List&lt;DataModel&gt; DataCollection</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">get</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> _DataCollection;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">set</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            _DataCollection = <span class=\"keyword\">value</span>;</span><br><span class=\"line\">            OnPropertyChanged();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">DataModel</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> Key &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">int</span> Value &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3><span id=\"執行結果\">執行結果</span></h3>\n<p><img src=\"result2.PNG\" alt=\"Result2\"></p>\n<h3><span id=\"優點\">優點</span></h3>\n<p>雖然沒有像live chart一樣有那麼多動畫，但是可以很輕鬆滿足MVVM的設計，使用資源也很少很好用，你只要在xaml中定義chart位置，把元件的itemsource屬性綁定到ViewModel中，剩下就只要專注在設計ViewModel就可以了</p>\n<h3><span id=\"缺點\">缺點</span></h3>\n<p>比較醜</p>\n<h2><span id=\"samplecode\">SampleCode</span></h2>\n<p><a href=\"https://github.com/e23882/WPFChartSample\" target=\"_blank\" rel=\"noopener\">SampleCode</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>介紹兩個我常用的圖表元件</p>\n<h2>Live Chart</h2>\n<p><a href=\"https://lvcharts.net/\" target=\"_blank\" rel=\"noopener\">LiveChart介紹、SourceCode</a></p>\n<h3>安裝套件</h3>\n<p>nuget安裝LiveCharts.Wpf</p>\n<h3>xaml引用資源、使用圖表</h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xmlns:lvc=\"clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf\"</span><br></pre></td></tr></table></figure>\n<h3>範例</h3>\n<figure class=\"highlight mathematica\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;<span class=\"keyword\">Grid</span>&gt;</span><br><span class=\"line\">    &lt;lvc:<span class=\"keyword\">PieChart</span> LegendLocation=<span class=\"string\">\"Bottom\"</span> Hoverable=<span class=\"string\">\"False\"</span> DataTooltip=<span class=\"string\">\"&#123;x:Null&#125;\"</span>&gt;</span><br><span class=\"line\">        &lt;lvc:<span class=\"keyword\">PieChart</span>.<span class=\"keyword\">Series</span>&gt;</span><br><span class=\"line\">            &lt;lvc:PieSeries Title=<span class=\"string\">\"C#\"</span> <span class=\"keyword\">Values</span>=<span class=\"string\">\"2\"</span> DataLabels=<span class=\"string\">\"True\"</span> PushOut=<span class=\"string\">\"8\"</span> /&gt;</span><br><span class=\"line\">            &lt;lvc:PieSeries Title=<span class=\"string\">\"Java\"</span> <span class=\"keyword\">Values</span>=<span class=\"string\">\"4\"</span> DataLabels=<span class=\"string\">\"True\"</span> /&gt;</span><br><span class=\"line\">            &lt;lvc:PieSeries Title=<span class=\"string\">\"Python\"</span> <span class=\"keyword\">Values</span>=<span class=\"string\">\"6\"</span> DataLabels=<span class=\"string\">\"True\"</span> /&gt;</span><br><span class=\"line\">            &lt;lvc:PieSeries Title=<span class=\"string\">\"SQL\"</span> <span class=\"keyword\">Values</span>=<span class=\"string\">\"2\"</span> DataLabels=<span class=\"string\">\"True\"</span> /&gt;</span><br><span class=\"line\">        &lt;/lvc:<span class=\"keyword\">PieChart</span>.<span class=\"keyword\">Series</span>&gt;</span><br><span class=\"line\">    &lt;/lvc:<span class=\"keyword\">PieChart</span>&gt;  </span><br><span class=\"line\">&lt;/<span class=\"keyword\">Grid</span>&gt;</span><br></pre></td></tr></table></figure>\n<h3>執行結果</h3>\n<p><img src=\"result.PNG\" alt=\"Result\"></p>\n<h3>優點</h3>\n<p>很漂亮，想的到的東西都會動</p>\n<h3>缺點</h3>\n<p>live chart在時限mvvm模式的時候比較不友善，而且專案也已經很久沒更新了(2018)。除此之外用的記憶體比較多，在做一些比較複雜的報表也不是說很方便，你只要看了他的sample code就會明白了…</p>\n<hr>\n<h2>WPF ToolKit Chart (推薦)</h2>\n<h3>安裝套件</h3>\n<p>nuget安裝</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">System.Windows.Controls.DataVisualization.Toolkit</span><br></pre></td></tr></table></figure>\n<h3>引用資源</h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xmlns:chartTool=\"clr-namespace:System.Windows.Controls.DataVisualization.Charting;assembly=System.Windows.Controls.DataVisualization.Toolkit\"</span><br></pre></td></tr></table></figure>\n<h3>範例</h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">WrapPanel</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">chartTool:Chart</span> <span class=\"attr\">Height</span>=<span class=\"string\">\"300\"</span> <span class=\"attr\">Width</span>=<span class=\"string\">\"800\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">chartTool:BarSeries</span> <span class=\"attr\">DependentValuePath</span>=<span class=\"string\">\"Value\"</span> <span class=\"attr\">IndependentValuePath</span>=<span class=\"string\">\"Key\"</span> <span class=\"attr\">ItemsSource</span>=<span class=\"string\">\"&#123;Binding DataCollection&#125;\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">chartTool:Chart</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">chartTool:Chart</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">chartTool:ColumnSeries</span> <span class=\"attr\">MinHeight</span>=<span class=\"string\">\"500\"</span> <span class=\"attr\">DependentValuePath</span>=<span class=\"string\">\"Value\"</span> <span class=\"attr\">IndependentValuePath</span>=<span class=\"string\">\"Key\"</span> <span class=\"attr\">ItemsSource</span>=<span class=\"string\">\"&#123;Binding DataCollection&#125;\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">chartTool:Chart</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">chartTool:Chart</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">chartTool:PieSeries</span> <span class=\"attr\">MinHeight</span>=<span class=\"string\">\"500\"</span> <span class=\"attr\">DependentValuePath</span>=<span class=\"string\">\"Value\"</span> <span class=\"attr\">IndependentValuePath</span>=<span class=\"string\">\"Key\"</span> <span class=\"attr\">ItemsSource</span>=<span class=\"string\">\"&#123;Binding DataCollection&#125;\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">chartTool:Chart</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">chartTool:Chart</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">chartTool:AreaSeries</span> <span class=\"attr\">MinHeight</span>=<span class=\"string\">\"500\"</span> <span class=\"attr\">DependentValuePath</span>=<span class=\"string\">\"Value\"</span> <span class=\"attr\">IndependentValuePath</span>=<span class=\"string\">\"Key\"</span> <span class=\"attr\">ItemsSource</span>=<span class=\"string\">\"&#123;Binding DataCollection&#125;\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">chartTool:Chart</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">chartTool:Chart</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">chartTool:BubbleSeries</span> <span class=\"attr\">MinHeight</span>=<span class=\"string\">\"500\"</span> <span class=\"attr\">DependentValuePath</span>=<span class=\"string\">\"Value\"</span> <span class=\"attr\">IndependentValuePath</span>=<span class=\"string\">\"Key\"</span> <span class=\"attr\">ItemsSource</span>=<span class=\"string\">\"&#123;Binding DataCollection&#125;\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">chartTool:Chart</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">chartTool:Chart</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">chartTool:LineSeries</span> <span class=\"attr\">MinHeight</span>=<span class=\"string\">\"500\"</span> <span class=\"attr\">DependentValuePath</span>=<span class=\"string\">\"Value\"</span> <span class=\"attr\">IndependentValuePath</span>=<span class=\"string\">\"Key\"</span> <span class=\"attr\">ItemsSource</span>=<span class=\"string\">\"&#123;Binding DataCollection&#125;\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">chartTool:Chart</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">chartTool:Chart</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">chartTool:ScatterSeries</span> <span class=\"attr\">MinHeight</span>=<span class=\"string\">\"500\"</span> <span class=\"attr\">DependentValuePath</span>=<span class=\"string\">\"Value\"</span> <span class=\"attr\">IndependentValuePath</span>=<span class=\"string\">\"Key\"</span> <span class=\"attr\">ItemsSource</span>=<span class=\"string\">\"&#123;Binding DataCollection&#125;\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">chartTool:Chart</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">WrapPanel</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">BarChartViewModel</span>:<span class=\"title\">ViewModelBase</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> List&lt;DataModel&gt; _DataCollection = <span class=\"keyword\">new</span> List&lt;DataModel&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">BarChartViewModel</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        DataCollection.Add(<span class=\"keyword\">new</span> DataModel()&#123; Key = <span class=\"string\">\"C#\"</span>, Value = <span class=\"number\">50</span>&#125;);</span><br><span class=\"line\">        DataCollection.Add(<span class=\"keyword\">new</span> DataModel()&#123; Key = <span class=\"string\">\"Python\"</span>, Value = <span class=\"number\">20</span>&#125;);</span><br><span class=\"line\">        DataCollection.Add(<span class=\"keyword\">new</span> DataModel()&#123; Key = <span class=\"string\">\"SQL\"</span>, Value = <span class=\"number\">30</span>&#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> List&lt;DataModel&gt; DataCollection</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">get</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> _DataCollection;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">set</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            _DataCollection = <span class=\"keyword\">value</span>;</span><br><span class=\"line\">            OnPropertyChanged();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">DataModel</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> Key &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">int</span> Value &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3>執行結果</h3>\n<p><img src=\"result2.PNG\" alt=\"Result2\"></p>\n<h3>優點</h3>\n<p>雖然沒有像live chart一樣有那麼多動畫，但是可以很輕鬆滿足MVVM的設計，使用資源也很少很好用，你只要在xaml中定義chart位置，把元件的itemsource屬性綁定到ViewModel中，剩下就只要專注在設計ViewModel就可以了</p>\n<h3>缺點</h3>\n<p>比較醜</p>\n<h2>SampleCode</h2>\n<p><a href=\"https://github.com/e23882/WPFChartSample\" target=\"_blank\" rel=\"noopener\">SampleCode</a></p>\n"},{"title":"WPF DataGrid","catalog":true,"abbrlink":"417c6ef5","date":"2020-07-03T11:39:22.000Z","subtitle":null,"header-img":null,"_content":"\n# 簡單DataGrid範例\n## 畫面\n![DataGridSample](DataGridSample.PNG)\n## 程式(MVVM)\n### 1. DataModel.cs\n```csharp\nnamespace DataGridDemo\n{\n    //定義ViewModel中資料集合每筆資料有哪些欄位\n    class DataModel\n    {\n        public string Name { get; set; }\n        public int ID { get; set; }\n    }\n}\n\n```\n### 2. ViewModel.cs\n\n    Q 為啥要用ObservableCollection<T>不用List<T>或是IEnumerable<T>就好\n    A 因為ObservableCollection在有新的資料加入集合的時候，畫面會自動更新，如果用List、IEnumerable，新的資料加入集合，畫面上是不會顯示這筆資料的，要額外去處理新資料加入時的邏輯，但是ObservableCollection會比較慢，所以要看情況用\n    \n\n```csharp\nusing System.Collections.ObjectModel;\n\nnamespace DataGridDemo\n{\n    //定義給畫面用的ViewModel有哪些屬性\n    class ViewModel\n    {\n        private ObservableCollection<DataModel> _DataCollection = new ObservableCollection<DataModel>();\n\n        //用ObservableCollection，集合中資料異動時，畫面會自動更新很方便\n        public ObservableCollection<DataModel> DataCollection\n        {\n            get\n            {\n                return _DataCollection;\n            }\n        }\n\n        public ViewModel()\n        {\n            for (int i = 0; i < 10; i++)\n            {\n                DataCollection.Add(new DataModel()\n                {\n                    ID = i,\n                    Name = \"User\" + i\n                });\n            }\n        }\n    }\n}\n\n```\n\n### 3. MainWindow.xaml\n```xml\n<Window x:Class=\"DataGridDemo.MainWindow\"\n        xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n        xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n        xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\"\n        xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\n        xmlns:local=\"clr-namespace:DataGridDemo\"\n        mc:Ignorable=\"d\"\n        Title=\"MainWindow\" Height=\"450\" Width=\"800\">\n    <Grid>\n        <Grid.RowDefinitions>\n            <RowDefinition Height=\"10\"/>\n            <RowDefinition Height=\"100\"/>\n            <RowDefinition Height=\"10\"/>\n        </Grid.RowDefinitions>\n        <DataGrid ItemsSource=\"{Binding DataCollection}\" Grid.Row=\"1\"/>\n    </Grid>\n</Window>\n```\n### 4. MainWindow.xaml.cs\n```csharp\nusing System.Windows;\n\nnamespace DataGridDemo\n{\n    /// <summary>\n    /// MainWindow.xaml 的互動邏輯\n    /// </summary>\n    public partial class MainWindow : Window\n    {\n        public MainWindow()\n        {\n            InitializeComponent();\n            //產生ViewModel實例\n            ViewModel main = new ViewModel();\n            //設定xaml的ViewModel來源為ViewModel的實例 main\n            this.DataContext = main;\n        }\n    }\n}\n```\n***\n\n# DataGrid 常見問題\n## 沒有資料的時候顯示預設的DataGrid Header\n### Q DataGrid沒有資料的時候沒有顯示預設的欄位名稱\n不要長這樣<br>\n![DataGridSample](DataGridNoHeader.PNG)\n\n### A 解決方法\n在DataGrid中先定義好有哪些欄位\n```xml\n<!-- 在DataGrid中定義有哪些欄位 -->\n <DataGrid ItemsSource=\"{Binding DataCollection, UpdateSourceTrigger=PropertyChanged}\" Grid.Row=\"1\" AutoGenerateColumns=\"False\" >\n    <DataGrid.Columns>\n        <DataGridTextColumn Header=\"ID\"    Binding=\"{Binding ID}\"/>\n        <DataGridTextColumn Header=\"Name\"  Binding=\"{Binding Name}\"/>\n    </DataGrid.Columns>\n</DataGrid>\n```\n這樣就算沒有資料還是會顯示欄位\n![DataGridSample](DataGridWithHeader.PNG)\n\n***\n\n## 自訂DataGrid Header樣式\n### Q DataGrid Header不想要只有單純的文字，想要顯示CheckBox讓User可以全選\n![DataGridSample](DataGridTemplateHeader.PNG)\n### A 解決方法 － DataGridTemplateColumn\n\n透過HeaderTemplate、CellTemplate可以設定DataGrid要長什麼樣子\n```xml\n   <DataGrid x:Name=\"dgData\" ItemsSource=\"{Binding DataCollection, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}\" >\n    <DataGrid.Resources>\n        <SolidColorBrush x:Key=\"{x:Static SystemColors.HighlightBrushKey}\" Color=\"LightGray\"/>\n    </DataGrid.Resources>\n    <DataGrid.Columns>\n        <!--DataGridTextColumn-->\n        <DataGridTextColumn Header=\"姓名\" Binding=\"{Binding Name}\" />\n        <!--DataGridTemplateColumn 可以定義Header、Cell要如何呈現資料-->\n        <DataGridTemplateColumn>\n            <DataGridTemplateColumn.HeaderTemplate>\n                <DataTemplate>\n                    <TextBlock Text=\"Text Header\"/>\n                </DataTemplate>\n            </DataGridTemplateColumn.HeaderTemplate>\n            <DataGridTemplateColumn.CellTemplate>\n                <DataTemplate>\n                    <TextBlock Text=\"{Binding Name}\"/>\n                </DataTemplate>\n            </DataGridTemplateColumn.CellTemplate>\n        </DataGridTemplateColumn>\n        <!--Sample-->\n        <DataGridTemplateColumn>\n            <DataGridTemplateColumn.HeaderTemplate>\n                <DataTemplate>\n                    <StackPanel Orientation=\"Horizontal\">\n                        <TextBlock Text=\"Text Header\"/>\n                        <Button Content=\"Button Header\" Margin=\"5,0,0,0\"/>\n                        <ProgressBar  Foreground=\"DarkOrange\"  Minimum=\"0\" Maximum=\"100\" IsIndeterminate=\"True\" Width=\"100\" Margin=\"5,0,0,0\"/>\n                    </StackPanel>\n                </DataTemplate>\n            </DataGridTemplateColumn.HeaderTemplate>\n            <DataGridTemplateColumn.CellTemplate>\n                <DataTemplate>\n                    <TextBlock Text=\"{Binding Name}\"/>\n                </DataTemplate>\n            </DataGridTemplateColumn.CellTemplate>\n        </DataGridTemplateColumn>\n    </DataGrid.Columns>\n</DataGrid>\n```\n***\n[SampleCode](https://github.com/e23882/DataGridSample)\n","source":"_posts/WPF-DataGrid.md","raw":"---\ntitle: WPF DataGrid\ncatalog: true\ntags:\n  - C#\n  - WPF\n  - DataGrid\nabbrlink: 417c6ef5\ncategories: uncategorized\ndate: 2020-07-03 19:39:22\nsubtitle:\nheader-img:\n---\n\n# 簡單DataGrid範例\n## 畫面\n![DataGridSample](DataGridSample.PNG)\n## 程式(MVVM)\n### 1. DataModel.cs\n```csharp\nnamespace DataGridDemo\n{\n    //定義ViewModel中資料集合每筆資料有哪些欄位\n    class DataModel\n    {\n        public string Name { get; set; }\n        public int ID { get; set; }\n    }\n}\n\n```\n### 2. ViewModel.cs\n\n    Q 為啥要用ObservableCollection<T>不用List<T>或是IEnumerable<T>就好\n    A 因為ObservableCollection在有新的資料加入集合的時候，畫面會自動更新，如果用List、IEnumerable，新的資料加入集合，畫面上是不會顯示這筆資料的，要額外去處理新資料加入時的邏輯，但是ObservableCollection會比較慢，所以要看情況用\n    \n\n```csharp\nusing System.Collections.ObjectModel;\n\nnamespace DataGridDemo\n{\n    //定義給畫面用的ViewModel有哪些屬性\n    class ViewModel\n    {\n        private ObservableCollection<DataModel> _DataCollection = new ObservableCollection<DataModel>();\n\n        //用ObservableCollection，集合中資料異動時，畫面會自動更新很方便\n        public ObservableCollection<DataModel> DataCollection\n        {\n            get\n            {\n                return _DataCollection;\n            }\n        }\n\n        public ViewModel()\n        {\n            for (int i = 0; i < 10; i++)\n            {\n                DataCollection.Add(new DataModel()\n                {\n                    ID = i,\n                    Name = \"User\" + i\n                });\n            }\n        }\n    }\n}\n\n```\n\n### 3. MainWindow.xaml\n```xml\n<Window x:Class=\"DataGridDemo.MainWindow\"\n        xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n        xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n        xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\"\n        xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\n        xmlns:local=\"clr-namespace:DataGridDemo\"\n        mc:Ignorable=\"d\"\n        Title=\"MainWindow\" Height=\"450\" Width=\"800\">\n    <Grid>\n        <Grid.RowDefinitions>\n            <RowDefinition Height=\"10\"/>\n            <RowDefinition Height=\"100\"/>\n            <RowDefinition Height=\"10\"/>\n        </Grid.RowDefinitions>\n        <DataGrid ItemsSource=\"{Binding DataCollection}\" Grid.Row=\"1\"/>\n    </Grid>\n</Window>\n```\n### 4. MainWindow.xaml.cs\n```csharp\nusing System.Windows;\n\nnamespace DataGridDemo\n{\n    /// <summary>\n    /// MainWindow.xaml 的互動邏輯\n    /// </summary>\n    public partial class MainWindow : Window\n    {\n        public MainWindow()\n        {\n            InitializeComponent();\n            //產生ViewModel實例\n            ViewModel main = new ViewModel();\n            //設定xaml的ViewModel來源為ViewModel的實例 main\n            this.DataContext = main;\n        }\n    }\n}\n```\n***\n\n# DataGrid 常見問題\n## 沒有資料的時候顯示預設的DataGrid Header\n### Q DataGrid沒有資料的時候沒有顯示預設的欄位名稱\n不要長這樣<br>\n![DataGridSample](DataGridNoHeader.PNG)\n\n### A 解決方法\n在DataGrid中先定義好有哪些欄位\n```xml\n<!-- 在DataGrid中定義有哪些欄位 -->\n <DataGrid ItemsSource=\"{Binding DataCollection, UpdateSourceTrigger=PropertyChanged}\" Grid.Row=\"1\" AutoGenerateColumns=\"False\" >\n    <DataGrid.Columns>\n        <DataGridTextColumn Header=\"ID\"    Binding=\"{Binding ID}\"/>\n        <DataGridTextColumn Header=\"Name\"  Binding=\"{Binding Name}\"/>\n    </DataGrid.Columns>\n</DataGrid>\n```\n這樣就算沒有資料還是會顯示欄位\n![DataGridSample](DataGridWithHeader.PNG)\n\n***\n\n## 自訂DataGrid Header樣式\n### Q DataGrid Header不想要只有單純的文字，想要顯示CheckBox讓User可以全選\n![DataGridSample](DataGridTemplateHeader.PNG)\n### A 解決方法 － DataGridTemplateColumn\n\n透過HeaderTemplate、CellTemplate可以設定DataGrid要長什麼樣子\n```xml\n   <DataGrid x:Name=\"dgData\" ItemsSource=\"{Binding DataCollection, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}\" >\n    <DataGrid.Resources>\n        <SolidColorBrush x:Key=\"{x:Static SystemColors.HighlightBrushKey}\" Color=\"LightGray\"/>\n    </DataGrid.Resources>\n    <DataGrid.Columns>\n        <!--DataGridTextColumn-->\n        <DataGridTextColumn Header=\"姓名\" Binding=\"{Binding Name}\" />\n        <!--DataGridTemplateColumn 可以定義Header、Cell要如何呈現資料-->\n        <DataGridTemplateColumn>\n            <DataGridTemplateColumn.HeaderTemplate>\n                <DataTemplate>\n                    <TextBlock Text=\"Text Header\"/>\n                </DataTemplate>\n            </DataGridTemplateColumn.HeaderTemplate>\n            <DataGridTemplateColumn.CellTemplate>\n                <DataTemplate>\n                    <TextBlock Text=\"{Binding Name}\"/>\n                </DataTemplate>\n            </DataGridTemplateColumn.CellTemplate>\n        </DataGridTemplateColumn>\n        <!--Sample-->\n        <DataGridTemplateColumn>\n            <DataGridTemplateColumn.HeaderTemplate>\n                <DataTemplate>\n                    <StackPanel Orientation=\"Horizontal\">\n                        <TextBlock Text=\"Text Header\"/>\n                        <Button Content=\"Button Header\" Margin=\"5,0,0,0\"/>\n                        <ProgressBar  Foreground=\"DarkOrange\"  Minimum=\"0\" Maximum=\"100\" IsIndeterminate=\"True\" Width=\"100\" Margin=\"5,0,0,0\"/>\n                    </StackPanel>\n                </DataTemplate>\n            </DataGridTemplateColumn.HeaderTemplate>\n            <DataGridTemplateColumn.CellTemplate>\n                <DataTemplate>\n                    <TextBlock Text=\"{Binding Name}\"/>\n                </DataTemplate>\n            </DataGridTemplateColumn.CellTemplate>\n        </DataGridTemplateColumn>\n    </DataGrid.Columns>\n</DataGrid>\n```\n***\n[SampleCode](https://github.com/e23882/DataGridSample)\n","slug":"WPF-DataGrid","published":1,"updated":"2024-11-21T02:20:00.199Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cm3xvfy8b002cewi9x4a9ngsq","content":"<h1><span id=\"簡單datagrid範例\">簡單DataGrid範例</span></h1>\n<h2><span id=\"畫面\">畫面</span></h2>\n<p><img src=\"DataGridSample.PNG\" alt=\"DataGridSample\"></p>\n<h2><span id=\"程式mvvm\">程式(MVVM)</span></h2>\n<h3><span id=\"1-datamodelcs\">1. DataModel.cs</span></h3>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">DataGridDemo</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\">//定義ViewModel中資料集合每筆資料有哪些欄位</span></span><br><span class=\"line\">    <span class=\"keyword\">class</span> <span class=\"title\">DataModel</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> Name &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">int</span> ID &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3><span id=\"2-viewmodelcs\">2. ViewModel.cs</span></h3>\n<pre><code>Q 為啥要用ObservableCollection&lt;T&gt;不用List&lt;T&gt;或是IEnumerable&lt;T&gt;就好\nA 因為ObservableCollection在有新的資料加入集合的時候，畫面會自動更新，如果用List、IEnumerable，新的資料加入集合，畫面上是不會顯示這筆資料的，要額外去處理新資料加入時的邏輯，但是ObservableCollection會比較慢，所以要看情況用\n</code></pre>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.ObjectModel;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">DataGridDemo</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\">//定義給畫面用的ViewModel有哪些屬性</span></span><br><span class=\"line\">    <span class=\"keyword\">class</span> <span class=\"title\">ViewModel</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> ObservableCollection&lt;DataModel&gt; _DataCollection = <span class=\"keyword\">new</span> ObservableCollection&lt;DataModel&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//用ObservableCollection，集合中資料異動時，畫面會自動更新很方便</span></span><br><span class=\"line\">        <span class=\"keyword\">public</span> ObservableCollection&lt;DataModel&gt; DataCollection</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">get</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> _DataCollection;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ViewModel</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                DataCollection.Add(<span class=\"keyword\">new</span> DataModel()</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    ID = i,</span><br><span class=\"line\">                    Name = <span class=\"string\">\"User\"</span> + i</span><br><span class=\"line\">                &#125;);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3><span id=\"3-mainwindowxaml\">3. MainWindow.xaml</span></h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Window</span> <span class=\"attr\">x:Class</span>=<span class=\"string\">\"DataGridDemo.MainWindow\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">xmlns:x</span>=<span class=\"string\">\"http://schemas.microsoft.com/winfx/2006/xaml\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">xmlns:d</span>=<span class=\"string\">\"http://schemas.microsoft.com/expression/blend/2008\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">xmlns:mc</span>=<span class=\"string\">\"http://schemas.openxmlformats.org/markup-compatibility/2006\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">xmlns:local</span>=<span class=\"string\">\"clr-namespace:DataGridDemo\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">mc:Ignorable</span>=<span class=\"string\">\"d\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">Title</span>=<span class=\"string\">\"MainWindow\"</span> <span class=\"attr\">Height</span>=<span class=\"string\">\"450\"</span> <span class=\"attr\">Width</span>=<span class=\"string\">\"800\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Grid</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">Grid.RowDefinitions</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">RowDefinition</span> <span class=\"attr\">Height</span>=<span class=\"string\">\"10\"</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">RowDefinition</span> <span class=\"attr\">Height</span>=<span class=\"string\">\"100\"</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">RowDefinition</span> <span class=\"attr\">Height</span>=<span class=\"string\">\"10\"</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">Grid.RowDefinitions</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">DataGrid</span> <span class=\"attr\">ItemsSource</span>=<span class=\"string\">\"&#123;Binding DataCollection&#125;\"</span> <span class=\"attr\">Grid.Row</span>=<span class=\"string\">\"1\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">Grid</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Window</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3><span id=\"4-mainwindowxamlcs\">4. MainWindow.xaml.cs</span></h3>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.Windows;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">DataGridDemo</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> MainWindow.xaml 的互動邏輯</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">partial</span> <span class=\"keyword\">class</span> <span class=\"title\">MainWindow</span> : <span class=\"title\">Window</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">MainWindow</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            InitializeComponent();</span><br><span class=\"line\">            <span class=\"comment\">//產生ViewModel實例</span></span><br><span class=\"line\">            ViewModel main = <span class=\"keyword\">new</span> ViewModel();</span><br><span class=\"line\">            <span class=\"comment\">//設定xaml的ViewModel來源為ViewModel的實例 main</span></span><br><span class=\"line\">            <span class=\"keyword\">this</span>.DataContext = main;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<h1><span id=\"datagrid-常見問題\">DataGrid 常見問題</span></h1>\n<h2><span id=\"沒有資料的時候顯示預設的datagrid-header\">沒有資料的時候顯示預設的DataGrid Header</span></h2>\n<h3><span id=\"q-datagrid沒有資料的時候沒有顯示預設的欄位名稱\">Q DataGrid沒有資料的時候沒有顯示預設的欄位名稱</span></h3>\n<p>不要長這樣<br><br>\n<img src=\"DataGridNoHeader.PNG\" alt=\"DataGridSample\"></p>\n<h3><span id=\"a-解決方法\">A 解決方法</span></h3>\n<p>在DataGrid中先定義好有哪些欄位</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 在DataGrid中定義有哪些欄位 --&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">DataGrid</span> <span class=\"attr\">ItemsSource</span>=<span class=\"string\">\"&#123;Binding DataCollection, UpdateSourceTrigger=PropertyChanged&#125;\"</span> <span class=\"attr\">Grid.Row</span>=<span class=\"string\">\"1\"</span> <span class=\"attr\">AutoGenerateColumns</span>=<span class=\"string\">\"False\"</span> &gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">DataGrid.Columns</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">DataGridTextColumn</span> <span class=\"attr\">Header</span>=<span class=\"string\">\"ID\"</span>    <span class=\"attr\">Binding</span>=<span class=\"string\">\"&#123;Binding ID&#125;\"</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">DataGridTextColumn</span> <span class=\"attr\">Header</span>=<span class=\"string\">\"Name\"</span>  <span class=\"attr\">Binding</span>=<span class=\"string\">\"&#123;Binding Name&#125;\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">DataGrid.Columns</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">DataGrid</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>這樣就算沒有資料還是會顯示欄位<br>\n<img src=\"DataGridWithHeader.PNG\" alt=\"DataGridSample\"></p>\n<hr>\n<h2><span id=\"自訂datagrid-header樣式\">自訂DataGrid Header樣式</span></h2>\n<h3><span id=\"q-datagrid-header不想要只有單純的文字想要顯示checkbox讓user可以全選\">Q DataGrid Header不想要只有單純的文字，想要顯示CheckBox讓User可以全選</span></h3>\n<p><img src=\"DataGridTemplateHeader.PNG\" alt=\"DataGridSample\"></p>\n<h3><span id=\"a-解決方法-datagridtemplatecolumn\">A 解決方法 － DataGridTemplateColumn</span></h3>\n<p>透過HeaderTemplate、CellTemplate可以設定DataGrid要長什麼樣子</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">DataGrid</span> <span class=\"attr\">x:Name</span>=<span class=\"string\">\"dgData\"</span> <span class=\"attr\">ItemsSource</span>=<span class=\"string\">\"&#123;Binding DataCollection, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay&#125;\"</span> &gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">DataGrid.Resources</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">SolidColorBrush</span> <span class=\"attr\">x:Key</span>=<span class=\"string\">\"&#123;x:Static SystemColors.HighlightBrushKey&#125;\"</span> <span class=\"attr\">Color</span>=<span class=\"string\">\"LightGray\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">DataGrid.Resources</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">DataGrid.Columns</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--DataGridTextColumn--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">DataGridTextColumn</span> <span class=\"attr\">Header</span>=<span class=\"string\">\"姓名\"</span> <span class=\"attr\">Binding</span>=<span class=\"string\">\"&#123;Binding Name&#125;\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--DataGridTemplateColumn 可以定義Header、Cell要如何呈現資料--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">DataGridTemplateColumn</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">DataGridTemplateColumn.HeaderTemplate</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">DataTemplate</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">TextBlock</span> <span class=\"attr\">Text</span>=<span class=\"string\">\"Text Header\"</span>/&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">DataTemplate</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">DataGridTemplateColumn.HeaderTemplate</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">DataGridTemplateColumn.CellTemplate</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">DataTemplate</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">TextBlock</span> <span class=\"attr\">Text</span>=<span class=\"string\">\"&#123;Binding Name&#125;\"</span>/&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">DataTemplate</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">DataGridTemplateColumn.CellTemplate</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">DataGridTemplateColumn</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--Sample--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">DataGridTemplateColumn</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">DataGridTemplateColumn.HeaderTemplate</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">DataTemplate</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">StackPanel</span> <span class=\"attr\">Orientation</span>=<span class=\"string\">\"Horizontal\"</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">TextBlock</span> <span class=\"attr\">Text</span>=<span class=\"string\">\"Text Header\"</span>/&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">Content</span>=<span class=\"string\">\"Button Header\"</span> <span class=\"attr\">Margin</span>=<span class=\"string\">\"5,0,0,0\"</span>/&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">ProgressBar</span>  <span class=\"attr\">Foreground</span>=<span class=\"string\">\"DarkOrange\"</span>  <span class=\"attr\">Minimum</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">Maximum</span>=<span class=\"string\">\"100\"</span> <span class=\"attr\">IsIndeterminate</span>=<span class=\"string\">\"True\"</span> <span class=\"attr\">Width</span>=<span class=\"string\">\"100\"</span> <span class=\"attr\">Margin</span>=<span class=\"string\">\"5,0,0,0\"</span>/&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">StackPanel</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">DataTemplate</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">DataGridTemplateColumn.HeaderTemplate</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">DataGridTemplateColumn.CellTemplate</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">DataTemplate</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">TextBlock</span> <span class=\"attr\">Text</span>=<span class=\"string\">\"&#123;Binding Name&#125;\"</span>/&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">DataTemplate</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">DataGridTemplateColumn.CellTemplate</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">DataGridTemplateColumn</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">DataGrid.Columns</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">DataGrid</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<hr>\n<p><a href=\"https://github.com/e23882/DataGridSample\" target=\"_blank\" rel=\"noopener\">SampleCode</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1>簡單DataGrid範例</h1>\n<h2>畫面</h2>\n<p><img src=\"DataGridSample.PNG\" alt=\"DataGridSample\"></p>\n<h2>程式(MVVM)</h2>\n<h3>1. DataModel.cs</h3>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">DataGridDemo</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\">//定義ViewModel中資料集合每筆資料有哪些欄位</span></span><br><span class=\"line\">    <span class=\"keyword\">class</span> <span class=\"title\">DataModel</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> Name &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">int</span> ID &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3>2. ViewModel.cs</h3>\n<pre><code>Q 為啥要用ObservableCollection&lt;T&gt;不用List&lt;T&gt;或是IEnumerable&lt;T&gt;就好\nA 因為ObservableCollection在有新的資料加入集合的時候，畫面會自動更新，如果用List、IEnumerable，新的資料加入集合，畫面上是不會顯示這筆資料的，要額外去處理新資料加入時的邏輯，但是ObservableCollection會比較慢，所以要看情況用\n</code></pre>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.ObjectModel;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">DataGridDemo</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\">//定義給畫面用的ViewModel有哪些屬性</span></span><br><span class=\"line\">    <span class=\"keyword\">class</span> <span class=\"title\">ViewModel</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> ObservableCollection&lt;DataModel&gt; _DataCollection = <span class=\"keyword\">new</span> ObservableCollection&lt;DataModel&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//用ObservableCollection，集合中資料異動時，畫面會自動更新很方便</span></span><br><span class=\"line\">        <span class=\"keyword\">public</span> ObservableCollection&lt;DataModel&gt; DataCollection</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">get</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> _DataCollection;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ViewModel</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                DataCollection.Add(<span class=\"keyword\">new</span> DataModel()</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    ID = i,</span><br><span class=\"line\">                    Name = <span class=\"string\">\"User\"</span> + i</span><br><span class=\"line\">                &#125;);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3>3. MainWindow.xaml</h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Window</span> <span class=\"attr\">x:Class</span>=<span class=\"string\">\"DataGridDemo.MainWindow\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">xmlns:x</span>=<span class=\"string\">\"http://schemas.microsoft.com/winfx/2006/xaml\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">xmlns:d</span>=<span class=\"string\">\"http://schemas.microsoft.com/expression/blend/2008\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">xmlns:mc</span>=<span class=\"string\">\"http://schemas.openxmlformats.org/markup-compatibility/2006\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">xmlns:local</span>=<span class=\"string\">\"clr-namespace:DataGridDemo\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">mc:Ignorable</span>=<span class=\"string\">\"d\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">Title</span>=<span class=\"string\">\"MainWindow\"</span> <span class=\"attr\">Height</span>=<span class=\"string\">\"450\"</span> <span class=\"attr\">Width</span>=<span class=\"string\">\"800\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Grid</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">Grid.RowDefinitions</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">RowDefinition</span> <span class=\"attr\">Height</span>=<span class=\"string\">\"10\"</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">RowDefinition</span> <span class=\"attr\">Height</span>=<span class=\"string\">\"100\"</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">RowDefinition</span> <span class=\"attr\">Height</span>=<span class=\"string\">\"10\"</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">Grid.RowDefinitions</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">DataGrid</span> <span class=\"attr\">ItemsSource</span>=<span class=\"string\">\"&#123;Binding DataCollection&#125;\"</span> <span class=\"attr\">Grid.Row</span>=<span class=\"string\">\"1\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">Grid</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Window</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3>4. MainWindow.xaml.cs</h3>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.Windows;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">DataGridDemo</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> MainWindow.xaml 的互動邏輯</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">partial</span> <span class=\"keyword\">class</span> <span class=\"title\">MainWindow</span> : <span class=\"title\">Window</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">MainWindow</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            InitializeComponent();</span><br><span class=\"line\">            <span class=\"comment\">//產生ViewModel實例</span></span><br><span class=\"line\">            ViewModel main = <span class=\"keyword\">new</span> ViewModel();</span><br><span class=\"line\">            <span class=\"comment\">//設定xaml的ViewModel來源為ViewModel的實例 main</span></span><br><span class=\"line\">            <span class=\"keyword\">this</span>.DataContext = main;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<h1>DataGrid 常見問題</h1>\n<h2>沒有資料的時候顯示預設的DataGrid Header</h2>\n<h3>Q DataGrid沒有資料的時候沒有顯示預設的欄位名稱</h3>\n<p>不要長這樣<br><br>\n<img src=\"DataGridNoHeader.PNG\" alt=\"DataGridSample\"></p>\n<h3>A 解決方法</h3>\n<p>在DataGrid中先定義好有哪些欄位</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 在DataGrid中定義有哪些欄位 --&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">DataGrid</span> <span class=\"attr\">ItemsSource</span>=<span class=\"string\">\"&#123;Binding DataCollection, UpdateSourceTrigger=PropertyChanged&#125;\"</span> <span class=\"attr\">Grid.Row</span>=<span class=\"string\">\"1\"</span> <span class=\"attr\">AutoGenerateColumns</span>=<span class=\"string\">\"False\"</span> &gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">DataGrid.Columns</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">DataGridTextColumn</span> <span class=\"attr\">Header</span>=<span class=\"string\">\"ID\"</span>    <span class=\"attr\">Binding</span>=<span class=\"string\">\"&#123;Binding ID&#125;\"</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">DataGridTextColumn</span> <span class=\"attr\">Header</span>=<span class=\"string\">\"Name\"</span>  <span class=\"attr\">Binding</span>=<span class=\"string\">\"&#123;Binding Name&#125;\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">DataGrid.Columns</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">DataGrid</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>這樣就算沒有資料還是會顯示欄位<br>\n<img src=\"DataGridWithHeader.PNG\" alt=\"DataGridSample\"></p>\n<hr>\n<h2>自訂DataGrid Header樣式</h2>\n<h3>Q DataGrid Header不想要只有單純的文字，想要顯示CheckBox讓User可以全選</h3>\n<p><img src=\"DataGridTemplateHeader.PNG\" alt=\"DataGridSample\"></p>\n<h3>A 解決方法 － DataGridTemplateColumn</h3>\n<p>透過HeaderTemplate、CellTemplate可以設定DataGrid要長什麼樣子</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">DataGrid</span> <span class=\"attr\">x:Name</span>=<span class=\"string\">\"dgData\"</span> <span class=\"attr\">ItemsSource</span>=<span class=\"string\">\"&#123;Binding DataCollection, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay&#125;\"</span> &gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">DataGrid.Resources</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">SolidColorBrush</span> <span class=\"attr\">x:Key</span>=<span class=\"string\">\"&#123;x:Static SystemColors.HighlightBrushKey&#125;\"</span> <span class=\"attr\">Color</span>=<span class=\"string\">\"LightGray\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">DataGrid.Resources</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">DataGrid.Columns</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--DataGridTextColumn--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">DataGridTextColumn</span> <span class=\"attr\">Header</span>=<span class=\"string\">\"姓名\"</span> <span class=\"attr\">Binding</span>=<span class=\"string\">\"&#123;Binding Name&#125;\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--DataGridTemplateColumn 可以定義Header、Cell要如何呈現資料--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">DataGridTemplateColumn</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">DataGridTemplateColumn.HeaderTemplate</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">DataTemplate</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">TextBlock</span> <span class=\"attr\">Text</span>=<span class=\"string\">\"Text Header\"</span>/&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">DataTemplate</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">DataGridTemplateColumn.HeaderTemplate</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">DataGridTemplateColumn.CellTemplate</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">DataTemplate</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">TextBlock</span> <span class=\"attr\">Text</span>=<span class=\"string\">\"&#123;Binding Name&#125;\"</span>/&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">DataTemplate</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">DataGridTemplateColumn.CellTemplate</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">DataGridTemplateColumn</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--Sample--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">DataGridTemplateColumn</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">DataGridTemplateColumn.HeaderTemplate</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">DataTemplate</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">StackPanel</span> <span class=\"attr\">Orientation</span>=<span class=\"string\">\"Horizontal\"</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">TextBlock</span> <span class=\"attr\">Text</span>=<span class=\"string\">\"Text Header\"</span>/&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">Content</span>=<span class=\"string\">\"Button Header\"</span> <span class=\"attr\">Margin</span>=<span class=\"string\">\"5,0,0,0\"</span>/&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">ProgressBar</span>  <span class=\"attr\">Foreground</span>=<span class=\"string\">\"DarkOrange\"</span>  <span class=\"attr\">Minimum</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">Maximum</span>=<span class=\"string\">\"100\"</span> <span class=\"attr\">IsIndeterminate</span>=<span class=\"string\">\"True\"</span> <span class=\"attr\">Width</span>=<span class=\"string\">\"100\"</span> <span class=\"attr\">Margin</span>=<span class=\"string\">\"5,0,0,0\"</span>/&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">StackPanel</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">DataTemplate</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">DataGridTemplateColumn.HeaderTemplate</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">DataGridTemplateColumn.CellTemplate</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">DataTemplate</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">TextBlock</span> <span class=\"attr\">Text</span>=<span class=\"string\">\"&#123;Binding Name&#125;\"</span>/&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">DataTemplate</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">DataGridTemplateColumn.CellTemplate</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">DataGridTemplateColumn</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">DataGrid.Columns</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">DataGrid</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<hr>\n<p><a href=\"https://github.com/e23882/DataGridSample\" target=\"_blank\" rel=\"noopener\">SampleCode</a></p>\n"},{"title":"WPF DataBinding","catalog":true,"abbrlink":"82450c4","date":"2020-07-02T09:37:05.000Z","subtitle":null,"header-img":null,"_content":"\n## DataBinding 範例\n### 1.定義會用到的視圖模型(ViewModel)\n```csharp\n//繼承INotifyPropertyChanged Interface，讓元件透過Binding訂閱ViewModel中的屬性，資料更新時UI會自己更新，很方便\nclass ViewModel : INotifyPropertyChanged\n{\n    public event PropertyChangedEventHandler PropertyChanged;\n    private bool _IsChecked = true;\n    private string _Content = \"Default Text\";\n\n    //屬性 - IsChecked\n    public bool IsChecked\n    {\n        get\n        {\n            return _IsChecked;\n        }\n        set\n        {\n            _IsChecked = value;\n            OnPropertyChanged();\n        }\n    }\n    //屬性 - Content\n    public string Content\n    {\n        get\n        {\n            return _Content;\n        }\n        set\n        {\n            _Content = value;\n            OnPropertyChanged();\n        }\n    }\n\n    //實作通知介面更新方法\n    public void OnPropertyChanged([CallerMemberName]string propertyName = \"\")\n    {\n        PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));\n    }\n}\n```\n### 2.產生視圖模型實例\nMainWindow.xaml.cs\n```csharp\nusing System.Windows;\n\nnamespace WPFApp\n{\n    /// <summary>\n    /// MainWindow.xaml 的互動邏輯\n    /// </summary>\n    public partial class MainWindow : Window\n    {\n        public MainWindow()\n        {\n            //產生ViewModel物件實例\n            ViewModel main = new ViewModel();\n            //設定MainWindow的ViewModel來源為ViewModel物件實例main\n            this.DataContext = main;\n        }\n    }\n}\n```\n### 3.設定元件屬性Binding ViewModel的屬性\nMainWindow.xaml:\n```xml\n<Window x:Class=\"WPFApp.MainWindow\"\n        xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n        xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n        xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\"\n        xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\n        xmlns:local=\"clr-namespace:WPFApp\"\n        mc:Ignorable=\"d\"\n        Title=\"MainWindow\" Height=\"450\" Width=\"800\">\n    <StackPanel Orientation=\"Vertical\">\n        <!-- 元件TextBox Text屬性 Binding ViewModel中Content屬性 -->\n        <TextBox Text=\"{Binding Content}\"/>\n        <!-- 元件CheckBox IsChecked屬性 Binding ViewModel中IsChecked屬性 -->\n        <CheckBox IsChecked=\"{Binding IsChecked}\"/>\n    </StackPanel>\n</Window>\n```\n\n**[範例程式](https://github.com/e23882/WPF-DataBinding-)**\n\n***\n## 不同的Binding方法\n#### 一般的DataBinding\n```xml\n<Textblock Text={Binding Content}/>\n```\n\n#### Binding指定元件的指定屬性\n```xml\n<Textblock x:Name=\"tbContent\" Text={Binding Content}/>\n<!-- 第一種 -->\n<Textblock Text={Binding Source={x:Reference tbContent}, Path=Text}/>\n<!-- 第二種 -->\n<Textblock Text={Binding Content, ElementName = tbContent}/>\n<!-- 第三種 -->\n<i:InvokeCommandAction Command=\"{Binding TabitemMouseDownCommand}\" CommandParameter=\"{Binding ElementName=tcControl, Path=SelectedIndex}\"/>\n<!-- 更多 Binding -->\n<!-- Coming Soon.... -->\n```\n***\n\n## DataBinding很常遇到的例外 : 引動過程的目標傳回例外狀況\n### **一般是發生在有使用StaticResource的情況發生的 :**\n\n- 可能有元件屬性Binding在 布局容器的資源中先定義好ViewModel、Converter、Resource的實例(instance)但是後來拿掉了\n- 或是被綁定的ViewModel實例初始化發生例外\n\n如果是發生初始化，因為這種問題會報錯在宣告ViewModel產生實例的地方，不會在ViewModel中遇到例外的地方跳出來\n類似下面這種地方\n```xml\n<Windows.Resources>\n        <viewmodel:AAAViewModel x:Key=\"MainViewModel\"/>\n</Windows.Resources>\n```\n但其實例外是發生在AAAViewModel建構子中，在初始化時取得資料連線發生例外\n\n### **解決方法**\n寫測試，單元測試、整合測試，發生錯誤的時候執行測試快速找到問題發生的地方\n***\n## **補充**\n### DataBinding失敗的預設值\n- Text : null\n- Brush : null\n- 數值 : NAN\n\n### DataBinding BindingMode的預設值\n```xml\n<!-- 這兩個在UI更新的時候，都會更新ViewModel中IsChecked屬性，因為CheckBox IsCheck屬性DataBinding的Mode屬性就是預設TwoWay，其他元件的屬性也會有自己的預設值 -->\n<CheckBox IsChecked=\"{Binding Path=IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}\"/>\n<CheckBox IsChecked=\"{Binding Path=IsSelected}\"/>\n```","source":"_posts/WPF-DataBinding.md","raw":"---\ntitle: WPF DataBinding\ncatalog: true\ntags:\n  - C#\n  - WPF\n  - DataBinding\nabbrlink: 82450c4\ncategories: uncategorized\ndate: 2020-07-02 17:37:05\nsubtitle:\nheader-img:\n---\n\n## DataBinding 範例\n### 1.定義會用到的視圖模型(ViewModel)\n```csharp\n//繼承INotifyPropertyChanged Interface，讓元件透過Binding訂閱ViewModel中的屬性，資料更新時UI會自己更新，很方便\nclass ViewModel : INotifyPropertyChanged\n{\n    public event PropertyChangedEventHandler PropertyChanged;\n    private bool _IsChecked = true;\n    private string _Content = \"Default Text\";\n\n    //屬性 - IsChecked\n    public bool IsChecked\n    {\n        get\n        {\n            return _IsChecked;\n        }\n        set\n        {\n            _IsChecked = value;\n            OnPropertyChanged();\n        }\n    }\n    //屬性 - Content\n    public string Content\n    {\n        get\n        {\n            return _Content;\n        }\n        set\n        {\n            _Content = value;\n            OnPropertyChanged();\n        }\n    }\n\n    //實作通知介面更新方法\n    public void OnPropertyChanged([CallerMemberName]string propertyName = \"\")\n    {\n        PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));\n    }\n}\n```\n### 2.產生視圖模型實例\nMainWindow.xaml.cs\n```csharp\nusing System.Windows;\n\nnamespace WPFApp\n{\n    /// <summary>\n    /// MainWindow.xaml 的互動邏輯\n    /// </summary>\n    public partial class MainWindow : Window\n    {\n        public MainWindow()\n        {\n            //產生ViewModel物件實例\n            ViewModel main = new ViewModel();\n            //設定MainWindow的ViewModel來源為ViewModel物件實例main\n            this.DataContext = main;\n        }\n    }\n}\n```\n### 3.設定元件屬性Binding ViewModel的屬性\nMainWindow.xaml:\n```xml\n<Window x:Class=\"WPFApp.MainWindow\"\n        xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n        xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n        xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\"\n        xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\n        xmlns:local=\"clr-namespace:WPFApp\"\n        mc:Ignorable=\"d\"\n        Title=\"MainWindow\" Height=\"450\" Width=\"800\">\n    <StackPanel Orientation=\"Vertical\">\n        <!-- 元件TextBox Text屬性 Binding ViewModel中Content屬性 -->\n        <TextBox Text=\"{Binding Content}\"/>\n        <!-- 元件CheckBox IsChecked屬性 Binding ViewModel中IsChecked屬性 -->\n        <CheckBox IsChecked=\"{Binding IsChecked}\"/>\n    </StackPanel>\n</Window>\n```\n\n**[範例程式](https://github.com/e23882/WPF-DataBinding-)**\n\n***\n## 不同的Binding方法\n#### 一般的DataBinding\n```xml\n<Textblock Text={Binding Content}/>\n```\n\n#### Binding指定元件的指定屬性\n```xml\n<Textblock x:Name=\"tbContent\" Text={Binding Content}/>\n<!-- 第一種 -->\n<Textblock Text={Binding Source={x:Reference tbContent}, Path=Text}/>\n<!-- 第二種 -->\n<Textblock Text={Binding Content, ElementName = tbContent}/>\n<!-- 第三種 -->\n<i:InvokeCommandAction Command=\"{Binding TabitemMouseDownCommand}\" CommandParameter=\"{Binding ElementName=tcControl, Path=SelectedIndex}\"/>\n<!-- 更多 Binding -->\n<!-- Coming Soon.... -->\n```\n***\n\n## DataBinding很常遇到的例外 : 引動過程的目標傳回例外狀況\n### **一般是發生在有使用StaticResource的情況發生的 :**\n\n- 可能有元件屬性Binding在 布局容器的資源中先定義好ViewModel、Converter、Resource的實例(instance)但是後來拿掉了\n- 或是被綁定的ViewModel實例初始化發生例外\n\n如果是發生初始化，因為這種問題會報錯在宣告ViewModel產生實例的地方，不會在ViewModel中遇到例外的地方跳出來\n類似下面這種地方\n```xml\n<Windows.Resources>\n        <viewmodel:AAAViewModel x:Key=\"MainViewModel\"/>\n</Windows.Resources>\n```\n但其實例外是發生在AAAViewModel建構子中，在初始化時取得資料連線發生例外\n\n### **解決方法**\n寫測試，單元測試、整合測試，發生錯誤的時候執行測試快速找到問題發生的地方\n***\n## **補充**\n### DataBinding失敗的預設值\n- Text : null\n- Brush : null\n- 數值 : NAN\n\n### DataBinding BindingMode的預設值\n```xml\n<!-- 這兩個在UI更新的時候，都會更新ViewModel中IsChecked屬性，因為CheckBox IsCheck屬性DataBinding的Mode屬性就是預設TwoWay，其他元件的屬性也會有自己的預設值 -->\n<CheckBox IsChecked=\"{Binding Path=IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}\"/>\n<CheckBox IsChecked=\"{Binding Path=IsSelected}\"/>\n```","slug":"WPF-DataBinding","published":1,"updated":"2024-11-21T02:20:00.198Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cm3xvfy8d002gewi91u36a9my","content":"<h2><span id=\"databinding-範例\">DataBinding 範例</span></h2>\n<h3><span id=\"1定義會用到的視圖模型viewmodel\">1.定義會用到的視圖模型(ViewModel)</span></h3>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//繼承INotifyPropertyChanged Interface，讓元件透過Binding訂閱ViewModel中的屬性，資料更新時UI會自己更新，很方便</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">ViewModel</span> : <span class=\"title\">INotifyPropertyChanged</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">event</span> PropertyChangedEventHandler PropertyChanged;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">bool</span> _IsChecked = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> _Content = <span class=\"string\">\"Default Text\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//屬性 - IsChecked</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">bool</span> IsChecked</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">get</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> _IsChecked;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">set</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            _IsChecked = <span class=\"keyword\">value</span>;</span><br><span class=\"line\">            OnPropertyChanged();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//屬性 - Content</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> Content</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">get</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> _Content;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">set</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            _Content = <span class=\"keyword\">value</span>;</span><br><span class=\"line\">            OnPropertyChanged();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//實作通知介面更新方法</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">OnPropertyChanged</span>(<span class=\"params\">[CallerMemberName]<span class=\"keyword\">string</span> propertyName = <span class=\"string\">\"\"</span></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        PropertyChanged?.Invoke(<span class=\"keyword\">this</span>, <span class=\"keyword\">new</span> PropertyChangedEventArgs(propertyName));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3><span id=\"2產生視圖模型實例\">2.產生視圖模型實例</span></h3>\n<p>MainWindow.xaml.cs</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.Windows;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">WPFApp</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> MainWindow.xaml 的互動邏輯</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">partial</span> <span class=\"keyword\">class</span> <span class=\"title\">MainWindow</span> : <span class=\"title\">Window</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">MainWindow</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            <span class=\"comment\">//產生ViewModel物件實例</span></span><br><span class=\"line\">            ViewModel main = <span class=\"keyword\">new</span> ViewModel();</span><br><span class=\"line\">            <span class=\"comment\">//設定MainWindow的ViewModel來源為ViewModel物件實例main</span></span><br><span class=\"line\">            <span class=\"keyword\">this</span>.DataContext = main;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3><span id=\"3設定元件屬性binding-viewmodel的屬性\">3.設定元件屬性Binding ViewModel的屬性</span></h3>\n<p>MainWindow.xaml:</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Window</span> <span class=\"attr\">x:Class</span>=<span class=\"string\">\"WPFApp.MainWindow\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">xmlns:x</span>=<span class=\"string\">\"http://schemas.microsoft.com/winfx/2006/xaml\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">xmlns:d</span>=<span class=\"string\">\"http://schemas.microsoft.com/expression/blend/2008\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">xmlns:mc</span>=<span class=\"string\">\"http://schemas.openxmlformats.org/markup-compatibility/2006\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">xmlns:local</span>=<span class=\"string\">\"clr-namespace:WPFApp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">mc:Ignorable</span>=<span class=\"string\">\"d\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">Title</span>=<span class=\"string\">\"MainWindow\"</span> <span class=\"attr\">Height</span>=<span class=\"string\">\"450\"</span> <span class=\"attr\">Width</span>=<span class=\"string\">\"800\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">StackPanel</span> <span class=\"attr\">Orientation</span>=<span class=\"string\">\"Vertical\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 元件TextBox Text屬性 Binding ViewModel中Content屬性 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextBox</span> <span class=\"attr\">Text</span>=<span class=\"string\">\"&#123;Binding Content&#125;\"</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 元件CheckBox IsChecked屬性 Binding ViewModel中IsChecked屬性 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">CheckBox</span> <span class=\"attr\">IsChecked</span>=<span class=\"string\">\"&#123;Binding IsChecked&#125;\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">StackPanel</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Window</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><strong><a href=\"https://github.com/e23882/WPF-DataBinding-\" target=\"_blank\" rel=\"noopener\">範例程式</a></strong></p>\n<hr>\n<h2><span id=\"不同的binding方法\">不同的Binding方法</span></h2>\n<h4><span id=\"一般的databinding\">一般的DataBinding</span></h4>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Textblock</span> <span class=\"attr\">Text</span>=<span class=\"string\">&#123;Binding</span> <span class=\"attr\">Content</span>&#125;/&gt;</span></span><br></pre></td></tr></table></figure>\n<h4><span id=\"binding指定元件的指定屬性\">Binding指定元件的指定屬性</span></h4>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Textblock</span> <span class=\"attr\">x:Name</span>=<span class=\"string\">\"tbContent\"</span> <span class=\"attr\">Text</span>=<span class=\"string\">&#123;Binding</span> <span class=\"attr\">Content</span>&#125;/&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 第一種 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Textblock</span> <span class=\"attr\">Text</span>=<span class=\"string\">&#123;Binding</span> <span class=\"attr\">Source</span>=<span class=\"string\">&#123;x:Reference</span> <span class=\"attr\">tbContent</span>&#125;, <span class=\"attr\">Path</span>=<span class=\"string\">Text&#125;/</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 第二種 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Textblock</span> <span class=\"attr\">Text</span>=<span class=\"string\">&#123;Binding</span> <span class=\"attr\">Content</span>, <span class=\"attr\">ElementName</span> = <span class=\"string\">tbContent&#125;/</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 第三種 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">i:InvokeCommandAction</span> <span class=\"attr\">Command</span>=<span class=\"string\">\"&#123;Binding TabitemMouseDownCommand&#125;\"</span> <span class=\"attr\">CommandParameter</span>=<span class=\"string\">\"&#123;Binding ElementName=tcControl, Path=SelectedIndex&#125;\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 更多 Binding --&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- Coming Soon.... --&gt;</span></span><br></pre></td></tr></table></figure>\n<hr>\n<h2><span id=\"databinding很常遇到的例外-引動過程的目標傳回例外狀況\">DataBinding很常遇到的例外 : 引動過程的目標傳回例外狀況</span></h2>\n<h3><span id=\"一般是發生在有使用staticresource的情況發生的\"><strong>一般是發生在有使用StaticResource的情況發生的 :</strong></span></h3>\n<ul>\n<li>可能有元件屬性Binding在 布局容器的資源中先定義好ViewModel、Converter、Resource的實例(instance)但是後來拿掉了</li>\n<li>或是被綁定的ViewModel實例初始化發生例外</li>\n</ul>\n<p>如果是發生初始化，因為這種問題會報錯在宣告ViewModel產生實例的地方，不會在ViewModel中遇到例外的地方跳出來<br>\n類似下面這種地方</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Windows.Resources</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">viewmodel:AAAViewModel</span> <span class=\"attr\">x:Key</span>=<span class=\"string\">\"MainViewModel\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Windows.Resources</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>但其實例外是發生在AAAViewModel建構子中，在初始化時取得資料連線發生例外</p>\n<h3><span id=\"解決方法\"><strong>解決方法</strong></span></h3>\n<p>寫測試，單元測試、整合測試，發生錯誤的時候執行測試快速找到問題發生的地方</p>\n<hr>\n<h2><span id=\"補充\"><strong>補充</strong></span></h2>\n<h3><span id=\"databinding失敗的預設值\">DataBinding失敗的預設值</span></h3>\n<ul>\n<li>Text : null</li>\n<li>Brush : null</li>\n<li>數值 : NAN</li>\n</ul>\n<h3><span id=\"databinding-bindingmode的預設值\">DataBinding BindingMode的預設值</span></h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 這兩個在UI更新的時候，都會更新ViewModel中IsChecked屬性，因為CheckBox IsCheck屬性DataBinding的Mode屬性就是預設TwoWay，其他元件的屬性也會有自己的預設值 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">CheckBox</span> <span class=\"attr\">IsChecked</span>=<span class=\"string\">\"&#123;Binding Path=IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged&#125;\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">CheckBox</span> <span class=\"attr\">IsChecked</span>=<span class=\"string\">\"&#123;Binding Path=IsSelected&#125;\"</span>/&gt;</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h2>DataBinding 範例</h2>\n<h3>1.定義會用到的視圖模型(ViewModel)</h3>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//繼承INotifyPropertyChanged Interface，讓元件透過Binding訂閱ViewModel中的屬性，資料更新時UI會自己更新，很方便</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">ViewModel</span> : <span class=\"title\">INotifyPropertyChanged</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">event</span> PropertyChangedEventHandler PropertyChanged;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">bool</span> _IsChecked = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> _Content = <span class=\"string\">\"Default Text\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//屬性 - IsChecked</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">bool</span> IsChecked</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">get</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> _IsChecked;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">set</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            _IsChecked = <span class=\"keyword\">value</span>;</span><br><span class=\"line\">            OnPropertyChanged();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//屬性 - Content</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> Content</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">get</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> _Content;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">set</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            _Content = <span class=\"keyword\">value</span>;</span><br><span class=\"line\">            OnPropertyChanged();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//實作通知介面更新方法</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">OnPropertyChanged</span>(<span class=\"params\">[CallerMemberName]<span class=\"keyword\">string</span> propertyName = <span class=\"string\">\"\"</span></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        PropertyChanged?.Invoke(<span class=\"keyword\">this</span>, <span class=\"keyword\">new</span> PropertyChangedEventArgs(propertyName));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3>2.產生視圖模型實例</h3>\n<p>MainWindow.xaml.cs</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System.Windows;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">WPFApp</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> MainWindow.xaml 的互動邏輯</span></span><br><span class=\"line\">    <span class=\"comment\"><span class=\"doctag\">///</span> <span class=\"doctag\">&lt;/summary&gt;</span></span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">partial</span> <span class=\"keyword\">class</span> <span class=\"title\">MainWindow</span> : <span class=\"title\">Window</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">MainWindow</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            <span class=\"comment\">//產生ViewModel物件實例</span></span><br><span class=\"line\">            ViewModel main = <span class=\"keyword\">new</span> ViewModel();</span><br><span class=\"line\">            <span class=\"comment\">//設定MainWindow的ViewModel來源為ViewModel物件實例main</span></span><br><span class=\"line\">            <span class=\"keyword\">this</span>.DataContext = main;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3>3.設定元件屬性Binding ViewModel的屬性</h3>\n<p>MainWindow.xaml:</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Window</span> <span class=\"attr\">x:Class</span>=<span class=\"string\">\"WPFApp.MainWindow\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">xmlns:x</span>=<span class=\"string\">\"http://schemas.microsoft.com/winfx/2006/xaml\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">xmlns:d</span>=<span class=\"string\">\"http://schemas.microsoft.com/expression/blend/2008\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">xmlns:mc</span>=<span class=\"string\">\"http://schemas.openxmlformats.org/markup-compatibility/2006\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">xmlns:local</span>=<span class=\"string\">\"clr-namespace:WPFApp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">mc:Ignorable</span>=<span class=\"string\">\"d\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">Title</span>=<span class=\"string\">\"MainWindow\"</span> <span class=\"attr\">Height</span>=<span class=\"string\">\"450\"</span> <span class=\"attr\">Width</span>=<span class=\"string\">\"800\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">StackPanel</span> <span class=\"attr\">Orientation</span>=<span class=\"string\">\"Vertical\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 元件TextBox Text屬性 Binding ViewModel中Content屬性 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextBox</span> <span class=\"attr\">Text</span>=<span class=\"string\">\"&#123;Binding Content&#125;\"</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 元件CheckBox IsChecked屬性 Binding ViewModel中IsChecked屬性 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">CheckBox</span> <span class=\"attr\">IsChecked</span>=<span class=\"string\">\"&#123;Binding IsChecked&#125;\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">StackPanel</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Window</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><strong><a href=\"https://github.com/e23882/WPF-DataBinding-\" target=\"_blank\" rel=\"noopener\">範例程式</a></strong></p>\n<hr>\n<h2>不同的Binding方法</h2>\n<h4>一般的DataBinding</h4>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Textblock</span> <span class=\"attr\">Text</span>=<span class=\"string\">&#123;Binding</span> <span class=\"attr\">Content</span>&#125;/&gt;</span></span><br></pre></td></tr></table></figure>\n<h4>Binding指定元件的指定屬性</h4>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Textblock</span> <span class=\"attr\">x:Name</span>=<span class=\"string\">\"tbContent\"</span> <span class=\"attr\">Text</span>=<span class=\"string\">&#123;Binding</span> <span class=\"attr\">Content</span>&#125;/&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 第一種 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Textblock</span> <span class=\"attr\">Text</span>=<span class=\"string\">&#123;Binding</span> <span class=\"attr\">Source</span>=<span class=\"string\">&#123;x:Reference</span> <span class=\"attr\">tbContent</span>&#125;, <span class=\"attr\">Path</span>=<span class=\"string\">Text&#125;/</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 第二種 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Textblock</span> <span class=\"attr\">Text</span>=<span class=\"string\">&#123;Binding</span> <span class=\"attr\">Content</span>, <span class=\"attr\">ElementName</span> = <span class=\"string\">tbContent&#125;/</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 第三種 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">i:InvokeCommandAction</span> <span class=\"attr\">Command</span>=<span class=\"string\">\"&#123;Binding TabitemMouseDownCommand&#125;\"</span> <span class=\"attr\">CommandParameter</span>=<span class=\"string\">\"&#123;Binding ElementName=tcControl, Path=SelectedIndex&#125;\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 更多 Binding --&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- Coming Soon.... --&gt;</span></span><br></pre></td></tr></table></figure>\n<hr>\n<h2>DataBinding很常遇到的例外 : 引動過程的目標傳回例外狀況</h2>\n<h3><strong>一般是發生在有使用StaticResource的情況發生的 :</strong></h3>\n<ul>\n<li>可能有元件屬性Binding在 布局容器的資源中先定義好ViewModel、Converter、Resource的實例(instance)但是後來拿掉了</li>\n<li>或是被綁定的ViewModel實例初始化發生例外</li>\n</ul>\n<p>如果是發生初始化，因為這種問題會報錯在宣告ViewModel產生實例的地方，不會在ViewModel中遇到例外的地方跳出來<br>\n類似下面這種地方</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Windows.Resources</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">viewmodel:AAAViewModel</span> <span class=\"attr\">x:Key</span>=<span class=\"string\">\"MainViewModel\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Windows.Resources</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>但其實例外是發生在AAAViewModel建構子中，在初始化時取得資料連線發生例外</p>\n<h3><strong>解決方法</strong></h3>\n<p>寫測試，單元測試、整合測試，發生錯誤的時候執行測試快速找到問題發生的地方</p>\n<hr>\n<h2><strong>補充</strong></h2>\n<h3>DataBinding失敗的預設值</h3>\n<ul>\n<li>Text : null</li>\n<li>Brush : null</li>\n<li>數值 : NAN</li>\n</ul>\n<h3>DataBinding BindingMode的預設值</h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 這兩個在UI更新的時候，都會更新ViewModel中IsChecked屬性，因為CheckBox IsCheck屬性DataBinding的Mode屬性就是預設TwoWay，其他元件的屬性也會有自己的預設值 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">CheckBox</span> <span class=\"attr\">IsChecked</span>=<span class=\"string\">\"&#123;Binding Path=IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged&#125;\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">CheckBox</span> <span class=\"attr\">IsChecked</span>=<span class=\"string\">\"&#123;Binding Path=IsSelected&#125;\"</span>/&gt;</span></span><br></pre></td></tr></table></figure>"},{"title":"WPF DataGrid值發生改變時改變背景顏色","catalog":true,"abbrlink":"961b0279","date":"2020-07-02T09:28:15.000Z","subtitle":null,"header-img":null,"_content":"### 透過Style，當DataGrid值異動時改變背景顏色提醒使用者\n#### XAML\n``` xml\n<Style TargetType=\"DataGridCell\" x:Key=\"Cell\">\n\t<Setter Property=\"Foreground\" Value=\"Black\"/>\n\t<Style.Triggers>\n\t\t<EventTrigger RoutedEvent=\"Binding.TargetUpdated\">\n\t\t\t<BeginStoryboard>\n\t\t\t\t<Storyboard>\n\t\t\t\t\t<ColorAnimation Storyboard.TargetProperty=\"Background.Color\"From=\"OrangeRed\" To=\"Transparent\" Duration=\"0:0:1.5\"/>\n\t\t\t\t</Storyboard>\n\t\t\t</BeginStoryboard>\n\t\t</EventTrigger>\n\t</Style.Triggers>\n</Style>\n\n<DataGrid ItemsSource=\"{Binding DataSource}\" Grid.Row=\"1\" AutoGenerateColumns=\"False\" >\n\t<DataGrid.Columns>\n\t\t<DataGridTextColumn Header=\"ID\" Binding=\"{Binding ID,NotifyOnTargetUpdated=True}\"/>\n\t\t<DataGridTextColumn Header=\"Name\" Binding=\"{Binding Name,NotifyOnTargetUpdated=True}\"/>\n\t\t<DataGridTextColumn Header=\"Price\" Binding=\"{Binding Price,NotifyOnTargetUpdated=True}\" CellStyle=\"{StaticResource Cell}\"/>\n\t</DataGrid.Columns>\n</DataGrid>\n```\n#### ViewModel\n```csharp\n// DataSource\nprivate List<DataModel.Data> _DataCollection = new List<DataModel.Data>();\npublic List<DataModel.Data> DataCollection\n{\n\tget\n\t{\n\t\treturn _DataCollection;\n\t}\n\tset\n\t{\n\t\t_DataCollection = value;\n\t\tOnPropertyChanged();\n\t}\n}\n```\n#### DataModel\n```csharp\nclass Data:INotifyPropertyChanged\n{\n\n\tprivate int _Price;\n\tprivate int _Qty;\n\tprivate int _ID;\n\n\tpublic int Price\n\t{\n\t\tget\n\t\t{\n\t\t\treturn _Price;\n\t\t}\n\t\tset\n\t\t{\n\t\t\t_Price = value;\n\t\t\tOnPropertyChanged();\n\t\t}\n\t}\n\n\tpublic int Qty\n\t{\n\t\tget\n\t\t{\n\t\t\treturn _Qty;\n\t\t}\n\t\tset\n\t\t{\n\t\t\t_Qty = value;\n\t\t\tOnPropertyChanged();\n\t\t}\n\t}\n\n\tpublic int ID\n\t{\n\t\tget\n\t\t{\n\t\t\treturn _ID;\n\t\t}\n\t\tset\n\t\t{\n\t\t\t_ID = value;\n\t\t\tOnPropertyChanged();\n\t\t}\n\t}\n\n\tpublic event PropertyChangedEventHandler PropertyChanged;\n\n\tpublic void OnPropertyChanged([CallerMemberName] string propertyName = \"\")\n\t{\n\t\tPropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));\n\t}\n}\n```\n\n### 為什麼ObservableCollection<T>會更新訂閱的介面，但是都沒有觸發界面更新\n```csharp\n\nObservableCollection<T>在集合發生異動的時候資料會自動更新訂閱的介面，但是只有在\"集合\"更新時，集合新增或移除資料的時候才會更新介面\nex:\n\t//Adding data and triggering UI updates\n\tmain.ObservableDataCollection.Add(new DataModel.CommonData() { ID = 11, Price = 20, Qty = 30 });\n\n\t//Remove data and trigger a UI update\n\tmain.ObservableDataCollection.RemoveAt(0);\n\n\t//****ObservableCollection did not trigger a UI updat****//\n\t//Modified data but did not trigger a UI update\n\tmain.ObservableDataCollection[0].Qty = 9999;\n\n所以上面例子裡的DataModel有繼承INotifyPropertyChanged Interface，讓訂閱ObservableCollection<T>資料集的介面，在資料集合中的\"資料\"異動時通知訂閱的界面更新\n```\n\n### List\\<T>、ObservableCollection\\<T>差異\n```xml\nObservableCollection<T>\n\t在新增、移除資料到資料集合中時會發出通知，通知有訂閱的介面更新，但是異動集合中的資料不會發出通知\n\nList<T>\n\t除非List中的資料有通知的機制，不然新增、修改、刪除都不會發出通知\n\t所以就算List中的資料有繼承了通知機制，List<T>也只有在資料異動的時候會更新介面，但是資料集新增、刪除資料介面還是不會更新\n\n最好的解法就是先定義一個繼承INotifyPropertyChanged介面的類別，然後讓ObservableCollection泛型，這樣資料不論在新增、修改、刪除時都會觸發通知機制讓介面更新\n```\n\n","source":"_posts/WPF-DataGrid值發生改變時改變背景顏色.md","raw":"---\ntitle: WPF DataGrid值發生改變時改變背景顏色\ncatalog: true\ntags:\n  - C#\n  - WPF\n  - DataGrid\nabbrlink: 961b0279\ncategories: uncategorized\ndate: 2020-07-02 17:28:15\nsubtitle:\nheader-img:\n---\n### 透過Style，當DataGrid值異動時改變背景顏色提醒使用者\n#### XAML\n``` xml\n<Style TargetType=\"DataGridCell\" x:Key=\"Cell\">\n\t<Setter Property=\"Foreground\" Value=\"Black\"/>\n\t<Style.Triggers>\n\t\t<EventTrigger RoutedEvent=\"Binding.TargetUpdated\">\n\t\t\t<BeginStoryboard>\n\t\t\t\t<Storyboard>\n\t\t\t\t\t<ColorAnimation Storyboard.TargetProperty=\"Background.Color\"From=\"OrangeRed\" To=\"Transparent\" Duration=\"0:0:1.5\"/>\n\t\t\t\t</Storyboard>\n\t\t\t</BeginStoryboard>\n\t\t</EventTrigger>\n\t</Style.Triggers>\n</Style>\n\n<DataGrid ItemsSource=\"{Binding DataSource}\" Grid.Row=\"1\" AutoGenerateColumns=\"False\" >\n\t<DataGrid.Columns>\n\t\t<DataGridTextColumn Header=\"ID\" Binding=\"{Binding ID,NotifyOnTargetUpdated=True}\"/>\n\t\t<DataGridTextColumn Header=\"Name\" Binding=\"{Binding Name,NotifyOnTargetUpdated=True}\"/>\n\t\t<DataGridTextColumn Header=\"Price\" Binding=\"{Binding Price,NotifyOnTargetUpdated=True}\" CellStyle=\"{StaticResource Cell}\"/>\n\t</DataGrid.Columns>\n</DataGrid>\n```\n#### ViewModel\n```csharp\n// DataSource\nprivate List<DataModel.Data> _DataCollection = new List<DataModel.Data>();\npublic List<DataModel.Data> DataCollection\n{\n\tget\n\t{\n\t\treturn _DataCollection;\n\t}\n\tset\n\t{\n\t\t_DataCollection = value;\n\t\tOnPropertyChanged();\n\t}\n}\n```\n#### DataModel\n```csharp\nclass Data:INotifyPropertyChanged\n{\n\n\tprivate int _Price;\n\tprivate int _Qty;\n\tprivate int _ID;\n\n\tpublic int Price\n\t{\n\t\tget\n\t\t{\n\t\t\treturn _Price;\n\t\t}\n\t\tset\n\t\t{\n\t\t\t_Price = value;\n\t\t\tOnPropertyChanged();\n\t\t}\n\t}\n\n\tpublic int Qty\n\t{\n\t\tget\n\t\t{\n\t\t\treturn _Qty;\n\t\t}\n\t\tset\n\t\t{\n\t\t\t_Qty = value;\n\t\t\tOnPropertyChanged();\n\t\t}\n\t}\n\n\tpublic int ID\n\t{\n\t\tget\n\t\t{\n\t\t\treturn _ID;\n\t\t}\n\t\tset\n\t\t{\n\t\t\t_ID = value;\n\t\t\tOnPropertyChanged();\n\t\t}\n\t}\n\n\tpublic event PropertyChangedEventHandler PropertyChanged;\n\n\tpublic void OnPropertyChanged([CallerMemberName] string propertyName = \"\")\n\t{\n\t\tPropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));\n\t}\n}\n```\n\n### 為什麼ObservableCollection<T>會更新訂閱的介面，但是都沒有觸發界面更新\n```csharp\n\nObservableCollection<T>在集合發生異動的時候資料會自動更新訂閱的介面，但是只有在\"集合\"更新時，集合新增或移除資料的時候才會更新介面\nex:\n\t//Adding data and triggering UI updates\n\tmain.ObservableDataCollection.Add(new DataModel.CommonData() { ID = 11, Price = 20, Qty = 30 });\n\n\t//Remove data and trigger a UI update\n\tmain.ObservableDataCollection.RemoveAt(0);\n\n\t//****ObservableCollection did not trigger a UI updat****//\n\t//Modified data but did not trigger a UI update\n\tmain.ObservableDataCollection[0].Qty = 9999;\n\n所以上面例子裡的DataModel有繼承INotifyPropertyChanged Interface，讓訂閱ObservableCollection<T>資料集的介面，在資料集合中的\"資料\"異動時通知訂閱的界面更新\n```\n\n### List\\<T>、ObservableCollection\\<T>差異\n```xml\nObservableCollection<T>\n\t在新增、移除資料到資料集合中時會發出通知，通知有訂閱的介面更新，但是異動集合中的資料不會發出通知\n\nList<T>\n\t除非List中的資料有通知的機制，不然新增、修改、刪除都不會發出通知\n\t所以就算List中的資料有繼承了通知機制，List<T>也只有在資料異動的時候會更新介面，但是資料集新增、刪除資料介面還是不會更新\n\n最好的解法就是先定義一個繼承INotifyPropertyChanged介面的類別，然後讓ObservableCollection泛型，這樣資料不論在新增、修改、刪除時都會觸發通知機制讓介面更新\n```\n\n","slug":"WPF-DataGrid值發生改變時改變背景顏色","published":1,"updated":"2024-11-21T02:20:00.203Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cm3xvfy8e002jewi9k8flopif","content":"<h3><span id=\"透過style當datagrid值異動時改變背景顏色提醒使用者\">透過Style，當DataGrid值異動時改變背景顏色提醒使用者</span></h3>\n<h4><span id=\"xaml\">XAML</span></h4>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Style</span> <span class=\"attr\">TargetType</span>=<span class=\"string\">\"DataGridCell\"</span> <span class=\"attr\">x:Key</span>=<span class=\"string\">\"Cell\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"xml\">\t<span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"Foreground\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"Black\"</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"css\">\t&lt;<span class=\"selector-tag\">Style</span><span class=\"selector-class\">.Triggers</span>&gt;</span></span><br><span class=\"line\"><span class=\"xml\">\t\t<span class=\"tag\">&lt;<span class=\"name\">EventTrigger</span> <span class=\"attr\">RoutedEvent</span>=<span class=\"string\">\"Binding.TargetUpdated\"</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">BeginStoryboard</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">Storyboard</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">ColorAnimation</span> <span class=\"attr\">Storyboard.TargetProperty</span>=<span class=\"string\">\"Background.Color\"</span><span class=\"attr\">From</span>=<span class=\"string\">\"OrangeRed\"</span> <span class=\"attr\">To</span>=<span class=\"string\">\"Transparent\"</span> <span class=\"attr\">Duration</span>=<span class=\"string\">\"0:0:1.5\"</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">Storyboard</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">BeginStoryboard</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">EventTrigger</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t<span class=\"tag\">&lt;/<span class=\"name\">Style.Triggers</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Style</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">DataGrid</span> <span class=\"attr\">ItemsSource</span>=<span class=\"string\">\"&#123;Binding DataSource&#125;\"</span> <span class=\"attr\">Grid.Row</span>=<span class=\"string\">\"1\"</span> <span class=\"attr\">AutoGenerateColumns</span>=<span class=\"string\">\"False\"</span> &gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">DataGrid.Columns</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">DataGridTextColumn</span> <span class=\"attr\">Header</span>=<span class=\"string\">\"ID\"</span> <span class=\"attr\">Binding</span>=<span class=\"string\">\"&#123;Binding ID,NotifyOnTargetUpdated=True&#125;\"</span>/&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">DataGridTextColumn</span> <span class=\"attr\">Header</span>=<span class=\"string\">\"Name\"</span> <span class=\"attr\">Binding</span>=<span class=\"string\">\"&#123;Binding Name,NotifyOnTargetUpdated=True&#125;\"</span>/&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">DataGridTextColumn</span> <span class=\"attr\">Header</span>=<span class=\"string\">\"Price\"</span> <span class=\"attr\">Binding</span>=<span class=\"string\">\"&#123;Binding Price,NotifyOnTargetUpdated=True&#125;\"</span> <span class=\"attr\">CellStyle</span>=<span class=\"string\">\"&#123;StaticResource Cell&#125;\"</span>/&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">DataGrid.Columns</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">DataGrid</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4><span id=\"viewmodel\">ViewModel</span></h4>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// DataSource</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> List&lt;DataModel.Data&gt; _DataCollection = <span class=\"keyword\">new</span> List&lt;DataModel.Data&gt;();</span><br><span class=\"line\"><span class=\"keyword\">public</span> List&lt;DataModel.Data&gt; DataCollection</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">get</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> _DataCollection;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">set</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t_DataCollection = <span class=\"keyword\">value</span>;</span><br><span class=\"line\">\t\tOnPropertyChanged();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4><span id=\"datamodel\">DataModel</span></h4>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">Data</span>:<span class=\"title\">INotifyPropertyChanged</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> _Price;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> _Qty;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> _ID;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">int</span> Price</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">get</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> _Price;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">set</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t_Price = <span class=\"keyword\">value</span>;</span><br><span class=\"line\">\t\t\tOnPropertyChanged();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">int</span> Qty</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">get</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> _Qty;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">set</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t_Qty = <span class=\"keyword\">value</span>;</span><br><span class=\"line\">\t\t\tOnPropertyChanged();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">int</span> ID</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">get</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> _ID;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">set</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t_ID = <span class=\"keyword\">value</span>;</span><br><span class=\"line\">\t\t\tOnPropertyChanged();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">event</span> PropertyChangedEventHandler PropertyChanged;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">OnPropertyChanged</span>(<span class=\"params\">[CallerMemberName] <span class=\"keyword\">string</span> propertyName = <span class=\"string\">\"\"</span></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>\t&#123;</span><br><span class=\"line\">\t\tPropertyChanged?.Invoke(<span class=\"keyword\">this</span>, <span class=\"keyword\">new</span> PropertyChangedEventArgs(propertyName));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3><span id=\"為什麼observablecollection會更新訂閱的介面但是都沒有觸發界面更新\">為什麼ObservableCollection<t>會更新訂閱的介面，但是都沒有觸發界面更新</t></span></h3>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">ObservableCollection&lt;T&gt;在集合發生異動的時候資料會自動更新訂閱的介面，但是只有在<span class=\"string\">\"集合\"</span>更新時，集合新增或移除資料的時候才會更新介面</span><br><span class=\"line\">ex:</span><br><span class=\"line\">\t<span class=\"comment\">//Adding data and triggering UI updates</span></span><br><span class=\"line\">\tmain.ObservableDataCollection.Add(<span class=\"keyword\">new</span> DataModel.CommonData() &#123; ID = <span class=\"number\">11</span>, Price = <span class=\"number\">20</span>, Qty = <span class=\"number\">30</span> &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//Remove data and trigger a UI update</span></span><br><span class=\"line\">\tmain.ObservableDataCollection.RemoveAt(<span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//****ObservableCollection did not trigger a UI updat****//</span></span><br><span class=\"line\">\t<span class=\"comment\">//Modified data but did not trigger a UI update</span></span><br><span class=\"line\">\tmain.ObservableDataCollection[<span class=\"number\">0</span>].Qty = <span class=\"number\">9999</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">所以上面例子裡的DataModel有繼承INotifyPropertyChanged Interface，讓訂閱ObservableCollection&lt;T&gt;資料集的介面，在資料集合中的<span class=\"string\">\"資料\"</span>異動時通知訂閱的界面更新</span><br></pre></td></tr></table></figure>\n<h3><span id=\"listlttgt-observablecollectionlttgt差異\">List&lt;T&gt;、ObservableCollection&lt;T&gt;差異</span></h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ObservableCollection<span class=\"tag\">&lt;<span class=\"name\">T</span>&gt;</span></span><br><span class=\"line\">\t在新增、移除資料到資料集合中時會發出通知，通知有訂閱的介面更新，但是異動集合中的資料不會發出通知</span><br><span class=\"line\"></span><br><span class=\"line\">List<span class=\"tag\">&lt;<span class=\"name\">T</span>&gt;</span></span><br><span class=\"line\">\t除非List中的資料有通知的機制，不然新增、修改、刪除都不會發出通知</span><br><span class=\"line\">\t所以就算List中的資料有繼承了通知機制，List<span class=\"tag\">&lt;<span class=\"name\">T</span>&gt;</span>也只有在資料異動的時候會更新介面，但是資料集新增、刪除資料介面還是不會更新</span><br><span class=\"line\"></span><br><span class=\"line\">最好的解法就是先定義一個繼承INotifyPropertyChanged介面的類別，然後讓ObservableCollection泛型，這樣資料不論在新增、修改、刪除時都會觸發通知機制讓介面更新</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h3>透過Style，當DataGrid值異動時改變背景顏色提醒使用者</h3>\n<h4>XAML</h4>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Style</span> <span class=\"attr\">TargetType</span>=<span class=\"string\">\"DataGridCell\"</span> <span class=\"attr\">x:Key</span>=<span class=\"string\">\"Cell\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"xml\">\t<span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"Foreground\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"Black\"</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"css\">\t&lt;<span class=\"selector-tag\">Style</span><span class=\"selector-class\">.Triggers</span>&gt;</span></span><br><span class=\"line\"><span class=\"xml\">\t\t<span class=\"tag\">&lt;<span class=\"name\">EventTrigger</span> <span class=\"attr\">RoutedEvent</span>=<span class=\"string\">\"Binding.TargetUpdated\"</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">BeginStoryboard</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">Storyboard</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">ColorAnimation</span> <span class=\"attr\">Storyboard.TargetProperty</span>=<span class=\"string\">\"Background.Color\"</span><span class=\"attr\">From</span>=<span class=\"string\">\"OrangeRed\"</span> <span class=\"attr\">To</span>=<span class=\"string\">\"Transparent\"</span> <span class=\"attr\">Duration</span>=<span class=\"string\">\"0:0:1.5\"</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">Storyboard</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">BeginStoryboard</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">EventTrigger</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t<span class=\"tag\">&lt;/<span class=\"name\">Style.Triggers</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Style</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">DataGrid</span> <span class=\"attr\">ItemsSource</span>=<span class=\"string\">\"&#123;Binding DataSource&#125;\"</span> <span class=\"attr\">Grid.Row</span>=<span class=\"string\">\"1\"</span> <span class=\"attr\">AutoGenerateColumns</span>=<span class=\"string\">\"False\"</span> &gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">DataGrid.Columns</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">DataGridTextColumn</span> <span class=\"attr\">Header</span>=<span class=\"string\">\"ID\"</span> <span class=\"attr\">Binding</span>=<span class=\"string\">\"&#123;Binding ID,NotifyOnTargetUpdated=True&#125;\"</span>/&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">DataGridTextColumn</span> <span class=\"attr\">Header</span>=<span class=\"string\">\"Name\"</span> <span class=\"attr\">Binding</span>=<span class=\"string\">\"&#123;Binding Name,NotifyOnTargetUpdated=True&#125;\"</span>/&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">DataGridTextColumn</span> <span class=\"attr\">Header</span>=<span class=\"string\">\"Price\"</span> <span class=\"attr\">Binding</span>=<span class=\"string\">\"&#123;Binding Price,NotifyOnTargetUpdated=True&#125;\"</span> <span class=\"attr\">CellStyle</span>=<span class=\"string\">\"&#123;StaticResource Cell&#125;\"</span>/&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">DataGrid.Columns</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">DataGrid</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4>ViewModel</h4>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// DataSource</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> List&lt;DataModel.Data&gt; _DataCollection = <span class=\"keyword\">new</span> List&lt;DataModel.Data&gt;();</span><br><span class=\"line\"><span class=\"keyword\">public</span> List&lt;DataModel.Data&gt; DataCollection</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">get</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> _DataCollection;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">set</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t_DataCollection = <span class=\"keyword\">value</span>;</span><br><span class=\"line\">\t\tOnPropertyChanged();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4>DataModel</h4>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">Data</span>:<span class=\"title\">INotifyPropertyChanged</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> _Price;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> _Qty;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> _ID;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">int</span> Price</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">get</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> _Price;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">set</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t_Price = <span class=\"keyword\">value</span>;</span><br><span class=\"line\">\t\t\tOnPropertyChanged();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">int</span> Qty</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">get</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> _Qty;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">set</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t_Qty = <span class=\"keyword\">value</span>;</span><br><span class=\"line\">\t\t\tOnPropertyChanged();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">int</span> ID</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">get</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> _ID;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">set</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t_ID = <span class=\"keyword\">value</span>;</span><br><span class=\"line\">\t\t\tOnPropertyChanged();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">event</span> PropertyChangedEventHandler PropertyChanged;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">OnPropertyChanged</span>(<span class=\"params\">[CallerMemberName] <span class=\"keyword\">string</span> propertyName = <span class=\"string\">\"\"</span></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>\t&#123;</span><br><span class=\"line\">\t\tPropertyChanged?.Invoke(<span class=\"keyword\">this</span>, <span class=\"keyword\">new</span> PropertyChangedEventArgs(propertyName));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3>為什麼ObservableCollection<t>會更新訂閱的介面，但是都沒有觸發界面更新</t></h3>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">ObservableCollection&lt;T&gt;在集合發生異動的時候資料會自動更新訂閱的介面，但是只有在<span class=\"string\">\"集合\"</span>更新時，集合新增或移除資料的時候才會更新介面</span><br><span class=\"line\">ex:</span><br><span class=\"line\">\t<span class=\"comment\">//Adding data and triggering UI updates</span></span><br><span class=\"line\">\tmain.ObservableDataCollection.Add(<span class=\"keyword\">new</span> DataModel.CommonData() &#123; ID = <span class=\"number\">11</span>, Price = <span class=\"number\">20</span>, Qty = <span class=\"number\">30</span> &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//Remove data and trigger a UI update</span></span><br><span class=\"line\">\tmain.ObservableDataCollection.RemoveAt(<span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//****ObservableCollection did not trigger a UI updat****//</span></span><br><span class=\"line\">\t<span class=\"comment\">//Modified data but did not trigger a UI update</span></span><br><span class=\"line\">\tmain.ObservableDataCollection[<span class=\"number\">0</span>].Qty = <span class=\"number\">9999</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">所以上面例子裡的DataModel有繼承INotifyPropertyChanged Interface，讓訂閱ObservableCollection&lt;T&gt;資料集的介面，在資料集合中的<span class=\"string\">\"資料\"</span>異動時通知訂閱的界面更新</span><br></pre></td></tr></table></figure>\n<h3>List&lt;T&gt;、ObservableCollection&lt;T&gt;差異</h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ObservableCollection<span class=\"tag\">&lt;<span class=\"name\">T</span>&gt;</span></span><br><span class=\"line\">\t在新增、移除資料到資料集合中時會發出通知，通知有訂閱的介面更新，但是異動集合中的資料不會發出通知</span><br><span class=\"line\"></span><br><span class=\"line\">List<span class=\"tag\">&lt;<span class=\"name\">T</span>&gt;</span></span><br><span class=\"line\">\t除非List中的資料有通知的機制，不然新增、修改、刪除都不會發出通知</span><br><span class=\"line\">\t所以就算List中的資料有繼承了通知機制，List<span class=\"tag\">&lt;<span class=\"name\">T</span>&gt;</span>也只有在資料異動的時候會更新介面，但是資料集新增、刪除資料介面還是不會更新</span><br><span class=\"line\"></span><br><span class=\"line\">最好的解法就是先定義一個繼承INotifyPropertyChanged介面的類別，然後讓ObservableCollection泛型，這樣資料不論在新增、修改、刪除時都會觸發通知機制讓介面更新</span><br></pre></td></tr></table></figure>\n"},{"title":"WPF DataGrid中的元件Binding Command失敗","catalog":true,"abbrlink":"49efdc8a","date":"2020-07-02T09:57:07.000Z","subtitle":null,"header-img":null,"_content":"### WPF DataGrid中的元件Binding Command失敗\n#### 原因\nDataGrid因為ItemSource已經Binding ViewModel中的指定的集合屬性(DataSource)\n它的xaml結構大概長這樣:\n```xml\n<DataGrid ItemsSource=\"{Binding DataSource}\">\n    <DataGridTemplateColumn Width=\"SizeToCells\">\n        <DataGridTemplateColumn.CellTemplate>\n            <DataTemplate>\n                <Button Command=\"{Binding ButtonClickCommand}\"/>\n            </DataTemplate>\n        </DataGridTemplateColumn.CellTemplate>\n    </DataGridTemplateColumn>\n</DataGrid>\n```\n但是Button需要Binding ViewModel中的Command屬性，但是因為DataGrid的資料來源DataSource中沒有Command屬性，所以Bindind失敗，按按鈕才不會成功\n\n#### 解決方式\n讓Button Binding Command往外曾找這個屬性\nRelativeSource Mode= FindAncestor : 找祖先\nAncestorType={ x:Type Window}     : 祖先類型是Window \n因為我在CodeBehind是用 this.DataContext = viewModelO=Instance;)，所以從標籤是window中的DataContext中找要綁定的命令屬性\n\n```xml\n<DataGrid ItemsSource=\"{Binding DataSource}\">\n    <DataGridTemplateColumn Width=\"SizeToCells\">\n        <DataGridTemplateColumn.CellTemplate>\n            <DataTemplate>\n                <Button Command=\"{Binding RelativeSource={RelativeSource Mode= FindAncestor, AncestorType={ x:Type Window}}, Path=DataContext.ButtonClickCommand}\"/>\n            </DataTemplate>\n        </DataGridTemplateColumn.CellTemplate>\n    </DataGridTemplateColumn>\n</DataGrid>\n\n```","source":"_posts/WPF-DataGrid中的元件Binding-Command失敗.md","raw":"---\ntitle: WPF DataGrid中的元件Binding Command失敗\ncatalog: true\ntags:\n  - C#\n  - WPF\n  - DataGrid\nabbrlink: 49efdc8a\ncategories: uncategorized\ndate: 2020-07-02 17:57:07\nsubtitle:\nheader-img:\n---\n### WPF DataGrid中的元件Binding Command失敗\n#### 原因\nDataGrid因為ItemSource已經Binding ViewModel中的指定的集合屬性(DataSource)\n它的xaml結構大概長這樣:\n```xml\n<DataGrid ItemsSource=\"{Binding DataSource}\">\n    <DataGridTemplateColumn Width=\"SizeToCells\">\n        <DataGridTemplateColumn.CellTemplate>\n            <DataTemplate>\n                <Button Command=\"{Binding ButtonClickCommand}\"/>\n            </DataTemplate>\n        </DataGridTemplateColumn.CellTemplate>\n    </DataGridTemplateColumn>\n</DataGrid>\n```\n但是Button需要Binding ViewModel中的Command屬性，但是因為DataGrid的資料來源DataSource中沒有Command屬性，所以Bindind失敗，按按鈕才不會成功\n\n#### 解決方式\n讓Button Binding Command往外曾找這個屬性\nRelativeSource Mode= FindAncestor : 找祖先\nAncestorType={ x:Type Window}     : 祖先類型是Window \n因為我在CodeBehind是用 this.DataContext = viewModelO=Instance;)，所以從標籤是window中的DataContext中找要綁定的命令屬性\n\n```xml\n<DataGrid ItemsSource=\"{Binding DataSource}\">\n    <DataGridTemplateColumn Width=\"SizeToCells\">\n        <DataGridTemplateColumn.CellTemplate>\n            <DataTemplate>\n                <Button Command=\"{Binding RelativeSource={RelativeSource Mode= FindAncestor, AncestorType={ x:Type Window}}, Path=DataContext.ButtonClickCommand}\"/>\n            </DataTemplate>\n        </DataGridTemplateColumn.CellTemplate>\n    </DataGridTemplateColumn>\n</DataGrid>\n\n```","slug":"WPF-DataGrid中的元件Binding-Command失敗","published":1,"updated":"2024-11-21T02:20:00.202Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cm3xvfy8f002newi9qnykgw31","content":"<h3><span id=\"wpf-datagrid中的元件binding-command失敗\">WPF DataGrid中的元件Binding Command失敗</span></h3>\n<h4><span id=\"原因\">原因</span></h4>\n<p>DataGrid因為ItemSource已經Binding ViewModel中的指定的集合屬性(DataSource)<br>\n它的xaml結構大概長這樣:</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">DataGrid</span> <span class=\"attr\">ItemsSource</span>=<span class=\"string\">\"&#123;Binding DataSource&#125;\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">DataGridTemplateColumn</span> <span class=\"attr\">Width</span>=<span class=\"string\">\"SizeToCells\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">DataGridTemplateColumn.CellTemplate</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">DataTemplate</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">Command</span>=<span class=\"string\">\"&#123;Binding ButtonClickCommand&#125;\"</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">DataTemplate</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">DataGridTemplateColumn.CellTemplate</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">DataGridTemplateColumn</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">DataGrid</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>但是Button需要Binding ViewModel中的Command屬性，但是因為DataGrid的資料來源DataSource中沒有Command屬性，所以Bindind失敗，按按鈕才不會成功</p>\n<h4><span id=\"解決方式\">解決方式</span></h4>\n<p>讓Button Binding Command往外曾找這個屬性<br>\nRelativeSource Mode= FindAncestor : 找祖先<br>\nAncestorType={ x:Type Window}     : 祖先類型是Window<br>\n因為我在CodeBehind是用 this.DataContext = viewModelO=Instance;)，所以從標籤是window中的DataContext中找要綁定的命令屬性</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">DataGrid</span> <span class=\"attr\">ItemsSource</span>=<span class=\"string\">\"&#123;Binding DataSource&#125;\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">DataGridTemplateColumn</span> <span class=\"attr\">Width</span>=<span class=\"string\">\"SizeToCells\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">DataGridTemplateColumn.CellTemplate</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">DataTemplate</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">Command</span>=<span class=\"string\">\"&#123;Binding RelativeSource=&#123;RelativeSource Mode= FindAncestor, AncestorType=&#123; x:Type Window&#125;&#125;, Path=DataContext.ButtonClickCommand&#125;\"</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">DataTemplate</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">DataGridTemplateColumn.CellTemplate</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">DataGridTemplateColumn</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">DataGrid</span>&gt;</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h3>WPF DataGrid中的元件Binding Command失敗</h3>\n<h4>原因</h4>\n<p>DataGrid因為ItemSource已經Binding ViewModel中的指定的集合屬性(DataSource)<br>\n它的xaml結構大概長這樣:</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">DataGrid</span> <span class=\"attr\">ItemsSource</span>=<span class=\"string\">\"&#123;Binding DataSource&#125;\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">DataGridTemplateColumn</span> <span class=\"attr\">Width</span>=<span class=\"string\">\"SizeToCells\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">DataGridTemplateColumn.CellTemplate</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">DataTemplate</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">Command</span>=<span class=\"string\">\"&#123;Binding ButtonClickCommand&#125;\"</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">DataTemplate</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">DataGridTemplateColumn.CellTemplate</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">DataGridTemplateColumn</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">DataGrid</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>但是Button需要Binding ViewModel中的Command屬性，但是因為DataGrid的資料來源DataSource中沒有Command屬性，所以Bindind失敗，按按鈕才不會成功</p>\n<h4>解決方式</h4>\n<p>讓Button Binding Command往外曾找這個屬性<br>\nRelativeSource Mode= FindAncestor : 找祖先<br>\nAncestorType={ x:Type Window}     : 祖先類型是Window<br>\n因為我在CodeBehind是用 this.DataContext = viewModelO=Instance;)，所以從標籤是window中的DataContext中找要綁定的命令屬性</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">DataGrid</span> <span class=\"attr\">ItemsSource</span>=<span class=\"string\">\"&#123;Binding DataSource&#125;\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">DataGridTemplateColumn</span> <span class=\"attr\">Width</span>=<span class=\"string\">\"SizeToCells\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">DataGridTemplateColumn.CellTemplate</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">DataTemplate</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">Command</span>=<span class=\"string\">\"&#123;Binding RelativeSource=&#123;RelativeSource Mode= FindAncestor, AncestorType=&#123; x:Type Window&#125;&#125;, Path=DataContext.ButtonClickCommand&#125;\"</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">DataTemplate</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">DataGridTemplateColumn.CellTemplate</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">DataGridTemplateColumn</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">DataGrid</span>&gt;</span></span><br></pre></td></tr></table></figure>"},{"title":"WPF DataTemplate ControlTemplate","catalog":true,"abbrlink":"d251a427","date":"2020-07-02T10:21:23.000Z","subtitle":null,"header-img":null,"_content":"\n### DataTemplate\n用資料(集合)產生元件\n```xml\n<!-- 定義使用資料集合中的什麼欄位，每個欄位要長怎樣 -->\n<Window.Resources>\n        <DataTemplate x:Key=\"template\">\n            <StackPanel>\n                <TextBox Text=\"{Binding Name}\"/>\n            </StackPanel>\n        </DataTemplate>\n    </Window.Resources>\n<Grid>\n        <!-- 綁定資料來源(Itemsource)、指定資料要用什麼樣的範本長出來 -->\n\t<ListBox ItemTemplate=\"{StaticResource template}\" ItemsSource=\"{Binding DataCollection}\"/>\n</Grid>\n```\n所以MainData如果有十筆資料，每筆資料中只要有Name欄位的就會長出一個TextBox Text屬性是Name的值\n![DataTemplateResult](DataResult.PNG)\n### ControlTemplate\n定義元件的樣式\n```xml\n<!-- 定義Button的ControlTemplate -->\n <Window.Resources>\n        <ControlTemplate TargetType=\"Button\" x:Key=\"ButtonTemplate\">\n            <Border CornerRadius=\"10\" Background=\"LightBlue\" Height=\"100\" Width=\"100\">\n                <TextBlock Text=\"123\" TextAlignment=\"Center\" VerticalAlignment=\"Center\"/>\n            </Border>\n        </ControlTemplate>\n</Window.Resources>\n\n<StackPanel>\n    <!-- Button使用定義好的ControlTemplate -->\n    <Button Template=\"{StaticResource ButtonTemplate}\"/>\n</StackPanel>\n```\n![ControlTemplateResult](ControlTemplate.PNG)\n\n### DataTemplate、ControlTemplate 差別\n- DataTemplate : 定義資料長出怎樣的畫面\n- ControlTemplate : 定義元件的樣式\n\n### 常跟ControlTemplate一起用的\n\n- Style  : 元件的樣式\n- Setter : 設定元件的???\n    ```xml\n    <Style TargetType=\"Button\" x:Key=\"ButtonCommon\">\n        <Setter Property=\"Background\" Value=\"Red\"/>\n        <Setter Property=\"Content\" Value=\"Default\"/>\n        <Setter Property=\"FontSize\" Value=\"30\"/>\n    </Style>\n    ```\n- StoryBoard : 故事板，敘述屬性在多少時間內的變化\n- Trigger    : 觸發器，定義觸發故事板的事件\n    ```xml\n     <Style TargetType=\"Button\" x:Key=\"ButtonCommon\">\n        <Setter Property=\"Width\" Value=\"100\"/>\n        <Setter Property=\"Height\" Value=\"100\"/>\n        <Setter Property=\"Content\" Value=\"Test\"/>\n            <Setter Property=\"Template\">\n            <Setter.Value>\n                <ControlTemplate>\n                    <Grid>\n                        <Button Content=\"123\"/>\n                    </Grid>\n                        <ControlTemplate.Triggers>\n                        <Trigger Property=\"IsMouseOver\" Value=\"True\">\n                            <Trigger.EnterActions>\n                                <BeginStoryboard>\n                                    <Storyboard>\n                                        <DoubleAnimation Storyboard.TargetProperty=\"Width\" To=\"110\" Duration=\"0:0:0.15\"/>\n                                        <DoubleAnimation Storyboard.TargetProperty=\"Height\" To=\"70\" Duration=\"0:0:0.15\"/>\n                                    </Storyboard>\n                                </BeginStoryboard>\n                            </Trigger.EnterActions>\n                        </Trigger>\n                    </ControlTemplate.Triggers>\n                </ControlTemplate>\n            </Setter.Value>\n        </Setter>\n    </Style>\n    ```\n","source":"_posts/WPF-DataTemplate-ControlTemplate.md","raw":"---\ntitle: WPF DataTemplate ControlTemplate\ncatalog: true\ntags:\n  - C#\n  - WPF\n  - DataTemplate\n  - ControlTemplate\nabbrlink: d251a427\ncategories: uncategorized\ndate: 2020-07-02 18:21:23\nsubtitle:\nheader-img:\n---\n\n### DataTemplate\n用資料(集合)產生元件\n```xml\n<!-- 定義使用資料集合中的什麼欄位，每個欄位要長怎樣 -->\n<Window.Resources>\n        <DataTemplate x:Key=\"template\">\n            <StackPanel>\n                <TextBox Text=\"{Binding Name}\"/>\n            </StackPanel>\n        </DataTemplate>\n    </Window.Resources>\n<Grid>\n        <!-- 綁定資料來源(Itemsource)、指定資料要用什麼樣的範本長出來 -->\n\t<ListBox ItemTemplate=\"{StaticResource template}\" ItemsSource=\"{Binding DataCollection}\"/>\n</Grid>\n```\n所以MainData如果有十筆資料，每筆資料中只要有Name欄位的就會長出一個TextBox Text屬性是Name的值\n![DataTemplateResult](DataResult.PNG)\n### ControlTemplate\n定義元件的樣式\n```xml\n<!-- 定義Button的ControlTemplate -->\n <Window.Resources>\n        <ControlTemplate TargetType=\"Button\" x:Key=\"ButtonTemplate\">\n            <Border CornerRadius=\"10\" Background=\"LightBlue\" Height=\"100\" Width=\"100\">\n                <TextBlock Text=\"123\" TextAlignment=\"Center\" VerticalAlignment=\"Center\"/>\n            </Border>\n        </ControlTemplate>\n</Window.Resources>\n\n<StackPanel>\n    <!-- Button使用定義好的ControlTemplate -->\n    <Button Template=\"{StaticResource ButtonTemplate}\"/>\n</StackPanel>\n```\n![ControlTemplateResult](ControlTemplate.PNG)\n\n### DataTemplate、ControlTemplate 差別\n- DataTemplate : 定義資料長出怎樣的畫面\n- ControlTemplate : 定義元件的樣式\n\n### 常跟ControlTemplate一起用的\n\n- Style  : 元件的樣式\n- Setter : 設定元件的???\n    ```xml\n    <Style TargetType=\"Button\" x:Key=\"ButtonCommon\">\n        <Setter Property=\"Background\" Value=\"Red\"/>\n        <Setter Property=\"Content\" Value=\"Default\"/>\n        <Setter Property=\"FontSize\" Value=\"30\"/>\n    </Style>\n    ```\n- StoryBoard : 故事板，敘述屬性在多少時間內的變化\n- Trigger    : 觸發器，定義觸發故事板的事件\n    ```xml\n     <Style TargetType=\"Button\" x:Key=\"ButtonCommon\">\n        <Setter Property=\"Width\" Value=\"100\"/>\n        <Setter Property=\"Height\" Value=\"100\"/>\n        <Setter Property=\"Content\" Value=\"Test\"/>\n            <Setter Property=\"Template\">\n            <Setter.Value>\n                <ControlTemplate>\n                    <Grid>\n                        <Button Content=\"123\"/>\n                    </Grid>\n                        <ControlTemplate.Triggers>\n                        <Trigger Property=\"IsMouseOver\" Value=\"True\">\n                            <Trigger.EnterActions>\n                                <BeginStoryboard>\n                                    <Storyboard>\n                                        <DoubleAnimation Storyboard.TargetProperty=\"Width\" To=\"110\" Duration=\"0:0:0.15\"/>\n                                        <DoubleAnimation Storyboard.TargetProperty=\"Height\" To=\"70\" Duration=\"0:0:0.15\"/>\n                                    </Storyboard>\n                                </BeginStoryboard>\n                            </Trigger.EnterActions>\n                        </Trigger>\n                    </ControlTemplate.Triggers>\n                </ControlTemplate>\n            </Setter.Value>\n        </Setter>\n    </Style>\n    ```\n","slug":"WPF-DataTemplate-ControlTemplate","published":1,"updated":"2024-11-21T02:20:00.203Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cm3xvfy8g002qewi9ec3oyq84","content":"<h3><span id=\"datatemplate\">DataTemplate</span></h3>\n<p>用資料(集合)產生元件</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 定義使用資料集合中的什麼欄位，每個欄位要長怎樣 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Window.Resources</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">DataTemplate</span> <span class=\"attr\">x:Key</span>=<span class=\"string\">\"template\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">StackPanel</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">TextBox</span> <span class=\"attr\">Text</span>=<span class=\"string\">\"&#123;Binding Name&#125;\"</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">StackPanel</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">DataTemplate</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">Window.Resources</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Grid</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 綁定資料來源(Itemsource)、指定資料要用什麼樣的範本長出來 --&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">ListBox</span> <span class=\"attr\">ItemTemplate</span>=<span class=\"string\">\"&#123;StaticResource template&#125;\"</span> <span class=\"attr\">ItemsSource</span>=<span class=\"string\">\"&#123;Binding DataCollection&#125;\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Grid</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>所以MainData如果有十筆資料，每筆資料中只要有Name欄位的就會長出一個TextBox Text屬性是Name的值<br>\n<img src=\"DataResult.PNG\" alt=\"DataTemplateResult\"></p>\n<h3><span id=\"controltemplate\">ControlTemplate</span></h3>\n<p>定義元件的樣式</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 定義Button的ControlTemplate --&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">Window.Resources</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">ControlTemplate</span> <span class=\"attr\">TargetType</span>=<span class=\"string\">\"Button\"</span> <span class=\"attr\">x:Key</span>=<span class=\"string\">\"ButtonTemplate\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">Border</span> <span class=\"attr\">CornerRadius</span>=<span class=\"string\">\"10\"</span> <span class=\"attr\">Background</span>=<span class=\"string\">\"LightBlue\"</span> <span class=\"attr\">Height</span>=<span class=\"string\">\"100\"</span> <span class=\"attr\">Width</span>=<span class=\"string\">\"100\"</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">TextBlock</span> <span class=\"attr\">Text</span>=<span class=\"string\">\"123\"</span> <span class=\"attr\">TextAlignment</span>=<span class=\"string\">\"Center\"</span> <span class=\"attr\">VerticalAlignment</span>=<span class=\"string\">\"Center\"</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">Border</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">ControlTemplate</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Window.Resources</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">StackPanel</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- Button使用定義好的ControlTemplate --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">Template</span>=<span class=\"string\">\"&#123;StaticResource ButtonTemplate&#125;\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">StackPanel</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"ControlTemplate.PNG\" alt=\"ControlTemplateResult\"></p>\n<h3><span id=\"datatemplate-controltemplate-差別\">DataTemplate、ControlTemplate 差別</span></h3>\n<ul>\n<li>DataTemplate : 定義資料長出怎樣的畫面</li>\n<li>ControlTemplate : 定義元件的樣式</li>\n</ul>\n<h3><span id=\"常跟controltemplate一起用的\">常跟ControlTemplate一起用的</span></h3>\n<ul>\n<li>\n<p>Style  : 元件的樣式</p>\n</li>\n<li>\n<p>Setter : 設定元件的???</p>\n  <figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Style</span> <span class=\"attr\">TargetType</span>=<span class=\"string\">\"Button\"</span> <span class=\"attr\">x:Key</span>=<span class=\"string\">\"ButtonCommon\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"Background\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"Red\"</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"Content\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"Default\"</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"FontSize\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"30\"</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>StoryBoard : 故事板，敘述屬性在多少時間內的變化</p>\n</li>\n<li>\n<p>Trigger    : 觸發器，定義觸發故事板的事件</p>\n  <figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">Style</span> <span class=\"attr\">TargetType</span>=<span class=\"string\">\"Button\"</span> <span class=\"attr\">x:Key</span>=<span class=\"string\">\"ButtonCommon\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"Width\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"100\"</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"Height\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"100\"</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"Content\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"Test\"</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"Template\"</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"css\">        &lt;<span class=\"selector-tag\">Setter</span><span class=\"selector-class\">.Value</span>&gt;</span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">ControlTemplate</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">Grid</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                    <span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">Content</span>=<span class=\"string\">\"123\"</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;/<span class=\"name\">Grid</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"css\">                    &lt;<span class=\"selector-tag\">ControlTemplate</span><span class=\"selector-class\">.Triggers</span>&gt;</span></span><br><span class=\"line\"><span class=\"xml\">                    <span class=\"tag\">&lt;<span class=\"name\">Trigger</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"IsMouseOver\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"True\"</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"css\">                        &lt;<span class=\"selector-tag\">Trigger</span><span class=\"selector-class\">.EnterActions</span>&gt;</span></span><br><span class=\"line\"><span class=\"xml\">                            <span class=\"tag\">&lt;<span class=\"name\">BeginStoryboard</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                                <span class=\"tag\">&lt;<span class=\"name\">Storyboard</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                                    <span class=\"tag\">&lt;<span class=\"name\">DoubleAnimation</span> <span class=\"attr\">Storyboard.TargetProperty</span>=<span class=\"string\">\"Width\"</span> <span class=\"attr\">To</span>=<span class=\"string\">\"110\"</span> <span class=\"attr\">Duration</span>=<span class=\"string\">\"0:0:0.15\"</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                                    <span class=\"tag\">&lt;<span class=\"name\">DoubleAnimation</span> <span class=\"attr\">Storyboard.TargetProperty</span>=<span class=\"string\">\"Height\"</span> <span class=\"attr\">To</span>=<span class=\"string\">\"70\"</span> <span class=\"attr\">Duration</span>=<span class=\"string\">\"0:0:0.15\"</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                                <span class=\"tag\">&lt;/<span class=\"name\">Storyboard</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                            <span class=\"tag\">&lt;/<span class=\"name\">BeginStoryboard</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                        <span class=\"tag\">&lt;/<span class=\"name\">Trigger.EnterActions</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                    <span class=\"tag\">&lt;/<span class=\"name\">Trigger</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;/<span class=\"name\">ControlTemplate.Triggers</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;/<span class=\"name\">ControlTemplate</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;/<span class=\"name\">Setter.Value</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">Setter</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h3>DataTemplate</h3>\n<p>用資料(集合)產生元件</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 定義使用資料集合中的什麼欄位，每個欄位要長怎樣 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Window.Resources</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">DataTemplate</span> <span class=\"attr\">x:Key</span>=<span class=\"string\">\"template\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">StackPanel</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">TextBox</span> <span class=\"attr\">Text</span>=<span class=\"string\">\"&#123;Binding Name&#125;\"</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">StackPanel</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">DataTemplate</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">Window.Resources</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Grid</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 綁定資料來源(Itemsource)、指定資料要用什麼樣的範本長出來 --&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">ListBox</span> <span class=\"attr\">ItemTemplate</span>=<span class=\"string\">\"&#123;StaticResource template&#125;\"</span> <span class=\"attr\">ItemsSource</span>=<span class=\"string\">\"&#123;Binding DataCollection&#125;\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Grid</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>所以MainData如果有十筆資料，每筆資料中只要有Name欄位的就會長出一個TextBox Text屬性是Name的值<br>\n<img src=\"DataResult.PNG\" alt=\"DataTemplateResult\"></p>\n<h3>ControlTemplate</h3>\n<p>定義元件的樣式</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 定義Button的ControlTemplate --&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">Window.Resources</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">ControlTemplate</span> <span class=\"attr\">TargetType</span>=<span class=\"string\">\"Button\"</span> <span class=\"attr\">x:Key</span>=<span class=\"string\">\"ButtonTemplate\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">Border</span> <span class=\"attr\">CornerRadius</span>=<span class=\"string\">\"10\"</span> <span class=\"attr\">Background</span>=<span class=\"string\">\"LightBlue\"</span> <span class=\"attr\">Height</span>=<span class=\"string\">\"100\"</span> <span class=\"attr\">Width</span>=<span class=\"string\">\"100\"</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">TextBlock</span> <span class=\"attr\">Text</span>=<span class=\"string\">\"123\"</span> <span class=\"attr\">TextAlignment</span>=<span class=\"string\">\"Center\"</span> <span class=\"attr\">VerticalAlignment</span>=<span class=\"string\">\"Center\"</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">Border</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">ControlTemplate</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Window.Resources</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">StackPanel</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- Button使用定義好的ControlTemplate --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">Template</span>=<span class=\"string\">\"&#123;StaticResource ButtonTemplate&#125;\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">StackPanel</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"ControlTemplate.PNG\" alt=\"ControlTemplateResult\"></p>\n<h3>DataTemplate、ControlTemplate 差別</h3>\n<ul>\n<li>DataTemplate : 定義資料長出怎樣的畫面</li>\n<li>ControlTemplate : 定義元件的樣式</li>\n</ul>\n<h3>常跟ControlTemplate一起用的</h3>\n<ul>\n<li>\n<p>Style  : 元件的樣式</p>\n</li>\n<li>\n<p>Setter : 設定元件的???</p>\n  <figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Style</span> <span class=\"attr\">TargetType</span>=<span class=\"string\">\"Button\"</span> <span class=\"attr\">x:Key</span>=<span class=\"string\">\"ButtonCommon\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"Background\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"Red\"</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"Content\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"Default\"</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"FontSize\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"30\"</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>StoryBoard : 故事板，敘述屬性在多少時間內的變化</p>\n</li>\n<li>\n<p>Trigger    : 觸發器，定義觸發故事板的事件</p>\n  <figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">Style</span> <span class=\"attr\">TargetType</span>=<span class=\"string\">\"Button\"</span> <span class=\"attr\">x:Key</span>=<span class=\"string\">\"ButtonCommon\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"Width\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"100\"</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"Height\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"100\"</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"Content\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"Test\"</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"Template\"</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"css\">        &lt;<span class=\"selector-tag\">Setter</span><span class=\"selector-class\">.Value</span>&gt;</span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">ControlTemplate</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">Grid</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                    <span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">Content</span>=<span class=\"string\">\"123\"</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;/<span class=\"name\">Grid</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"css\">                    &lt;<span class=\"selector-tag\">ControlTemplate</span><span class=\"selector-class\">.Triggers</span>&gt;</span></span><br><span class=\"line\"><span class=\"xml\">                    <span class=\"tag\">&lt;<span class=\"name\">Trigger</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"IsMouseOver\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"True\"</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"css\">                        &lt;<span class=\"selector-tag\">Trigger</span><span class=\"selector-class\">.EnterActions</span>&gt;</span></span><br><span class=\"line\"><span class=\"xml\">                            <span class=\"tag\">&lt;<span class=\"name\">BeginStoryboard</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                                <span class=\"tag\">&lt;<span class=\"name\">Storyboard</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                                    <span class=\"tag\">&lt;<span class=\"name\">DoubleAnimation</span> <span class=\"attr\">Storyboard.TargetProperty</span>=<span class=\"string\">\"Width\"</span> <span class=\"attr\">To</span>=<span class=\"string\">\"110\"</span> <span class=\"attr\">Duration</span>=<span class=\"string\">\"0:0:0.15\"</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                                    <span class=\"tag\">&lt;<span class=\"name\">DoubleAnimation</span> <span class=\"attr\">Storyboard.TargetProperty</span>=<span class=\"string\">\"Height\"</span> <span class=\"attr\">To</span>=<span class=\"string\">\"70\"</span> <span class=\"attr\">Duration</span>=<span class=\"string\">\"0:0:0.15\"</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                                <span class=\"tag\">&lt;/<span class=\"name\">Storyboard</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                            <span class=\"tag\">&lt;/<span class=\"name\">BeginStoryboard</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                        <span class=\"tag\">&lt;/<span class=\"name\">Trigger.EnterActions</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                    <span class=\"tag\">&lt;/<span class=\"name\">Trigger</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;/<span class=\"name\">ControlTemplate.Triggers</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;/<span class=\"name\">ControlTemplate</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;/<span class=\"name\">Setter.Value</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">Setter</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n"},{"title":"WPF Dockable","catalog":true,"abbrlink":"d62fa86b","date":"2020-07-02T11:13:32.000Z","subtitle":null,"header-img":null,"_content":"\n### 讓WPF有Dockable的功能\n![Dockable](avalondock.png)\n\n### 使用\n##### Nuget安裝Wpf Toolkit\nnuget搜尋WPF Toolkit，有一個作者是Xceed的就是了\n![Nuget](nuget.PNG)\n##### xaml加入引用資源\n```xml\nxmlns:avalondock=\"http://schemas.xceed.com/wpf/xaml/avalondock\"\n```\n##### 實際使用\n\n![Result](result.PNG)\n```xml\n<Grid>      \n  <avalondock:DockingManager x:Name=\"mtTab\" Grid.Row=\"0\" Visibility=\"{Binding Render}\">\n    <!-- 設定Dockable元件樣式 -->\n    <avalondock:DockingManager.Theme>\n    <avalondock:VS2010Theme/>\n    </avalondock:DockingManager.Theme>\n\n    <!-- LayoutRoot : 在LayoutRoot中的所有元素可以互相停靠 -->\n    <avalondock:LayoutRoot>\n      <!-- Left side -->\n      <avalondock:LayoutRoot.LeftSide>\n        <avalondock:LayoutAnchorSide>\n          <avalondock:LayoutAnchorGroup>\n            <avalondock:LayoutAnchorable Title=\"Left1\">\n              <TextBox Text=\"123\"/>\n            </avalondock:LayoutAnchorable>\n            <avalondock:LayoutAnchorable Title=\"Left2\">\n              <TextBox Text=\"123\"/>\n            </avalondock:LayoutAnchorable>\n            </avalondock:LayoutAnchorGroup>\n        </avalondock:LayoutAnchorSide>\n      </avalondock:LayoutRoot.LeftSide>\n\n      <!-- Right Side -->\n      <avalondock:LayoutRoot.RightSide>\n        <avalondock:LayoutAnchorSide>\n          <avalondock:LayoutAnchorGroup>\n            <avalondock:LayoutAnchorable Title=\"Right1\">\n             <TextBox Text=\"123\"/>\n            </avalondock:LayoutAnchorable>\n            <avalondock:LayoutAnchorable Title=\"Right2\">\n             <TextBox Text=\"123\"/>\n            </avalondock:LayoutAnchorable>\n          </avalondock:LayoutAnchorGroup>\n        </avalondock:LayoutAnchorSide>\n      </avalondock:LayoutRoot.RightSide>\n\n      <!-- Center -->\n      <avalondock:LayoutPanel>\n        <avalondock:LayoutDocumentPane>\n          <avalondock:LayoutDocument Title=\"Main1\" >\n            <TextBox Text=\"123\"/>\n          </avalondock:LayoutDocument>\n          <avalondock:LayoutDocument Title=\"Main2\" >\n            <TextBox Text=\"123\"/>\n          </avalondock:LayoutDocument>\n        </avalondock:LayoutDocumentPane>\n      </avalondock:LayoutPanel>\n    </avalondock:LayoutRoot>\n  </avalondock:DockingManager>\n</Grid>\n```\n### tips\n\navalondock外層的結構基本上都是\n```\nDockingManager\n  LayoutRoot\n    LayoutPanel\n    LayoutRoot.XXXXSide\n```\n在LayoutRoot裡面的LayoutAnchorable、LayoutDocument可以停靠在LayoutRoot中的其他容器裡面\n\n在LayoutRoot裡面可以配置上、下、左、右、中間的布局\n基本的就是這幾種\n```xml\n<!-- 不是主要Panel類型 -->\nLayoutRoot.TopSide(LayoutRoot.LeftSide、LayoutRoot.RightSide、LayoutRoot.BottomSide)\n  LayoutAnchorSide\n    LayoutAnchorGroup\n      LayoutAnchorable Title=\"Type1\"\n        Grid\n<!-- 主要Panel類型 -->\nLayoutPanel\n  LayoutDocumentPane\n    LayoutDocument Title=\"Type2\"\n```\n\n### 改變DockingManager裡面Tabitem的顏色\n```xml\n<avalondock:DockingManager.Resources>\n  <Style TargetType=\"{x:Type avalondock:LayoutDocumentTabItem}\">\n    <Setter Property=\"Background\" Value=\"#2D2D2F\"/>\n    <Setter Property=\"Foreground\" Value=\"White\"/>\n  </Style>\n  <Style TargetType=\"{x:Type avalondock:DockingManager}\">\n    <Setter Property=\"Background\" Value=\"#2D2D2F\"/>\n  </Style>\n</avalondock:DockingManager.Resources>\n```\n***\n#### LayoutAnchorable、LayoutDocument重要屬性\n```xml\n<!-- 可否按X關閉(隱藏) -->\nCanHide=\"False\"\n<!-- 點選TabItem打開時的預設高度 -->\nAutoHideHeight=\"300\"\n```\n\n","source":"_posts/WPF-Dockable.md","raw":"---\ntitle: WPF Dockable\ncatalog: true\ntags:\n  - C#\n  - WPF\n  - Dockable\nabbrlink: d62fa86b\ncategories: uncategorized\ndate: 2020-07-02 19:13:32\nsubtitle:\nheader-img:\n---\n\n### 讓WPF有Dockable的功能\n![Dockable](avalondock.png)\n\n### 使用\n##### Nuget安裝Wpf Toolkit\nnuget搜尋WPF Toolkit，有一個作者是Xceed的就是了\n![Nuget](nuget.PNG)\n##### xaml加入引用資源\n```xml\nxmlns:avalondock=\"http://schemas.xceed.com/wpf/xaml/avalondock\"\n```\n##### 實際使用\n\n![Result](result.PNG)\n```xml\n<Grid>      \n  <avalondock:DockingManager x:Name=\"mtTab\" Grid.Row=\"0\" Visibility=\"{Binding Render}\">\n    <!-- 設定Dockable元件樣式 -->\n    <avalondock:DockingManager.Theme>\n    <avalondock:VS2010Theme/>\n    </avalondock:DockingManager.Theme>\n\n    <!-- LayoutRoot : 在LayoutRoot中的所有元素可以互相停靠 -->\n    <avalondock:LayoutRoot>\n      <!-- Left side -->\n      <avalondock:LayoutRoot.LeftSide>\n        <avalondock:LayoutAnchorSide>\n          <avalondock:LayoutAnchorGroup>\n            <avalondock:LayoutAnchorable Title=\"Left1\">\n              <TextBox Text=\"123\"/>\n            </avalondock:LayoutAnchorable>\n            <avalondock:LayoutAnchorable Title=\"Left2\">\n              <TextBox Text=\"123\"/>\n            </avalondock:LayoutAnchorable>\n            </avalondock:LayoutAnchorGroup>\n        </avalondock:LayoutAnchorSide>\n      </avalondock:LayoutRoot.LeftSide>\n\n      <!-- Right Side -->\n      <avalondock:LayoutRoot.RightSide>\n        <avalondock:LayoutAnchorSide>\n          <avalondock:LayoutAnchorGroup>\n            <avalondock:LayoutAnchorable Title=\"Right1\">\n             <TextBox Text=\"123\"/>\n            </avalondock:LayoutAnchorable>\n            <avalondock:LayoutAnchorable Title=\"Right2\">\n             <TextBox Text=\"123\"/>\n            </avalondock:LayoutAnchorable>\n          </avalondock:LayoutAnchorGroup>\n        </avalondock:LayoutAnchorSide>\n      </avalondock:LayoutRoot.RightSide>\n\n      <!-- Center -->\n      <avalondock:LayoutPanel>\n        <avalondock:LayoutDocumentPane>\n          <avalondock:LayoutDocument Title=\"Main1\" >\n            <TextBox Text=\"123\"/>\n          </avalondock:LayoutDocument>\n          <avalondock:LayoutDocument Title=\"Main2\" >\n            <TextBox Text=\"123\"/>\n          </avalondock:LayoutDocument>\n        </avalondock:LayoutDocumentPane>\n      </avalondock:LayoutPanel>\n    </avalondock:LayoutRoot>\n  </avalondock:DockingManager>\n</Grid>\n```\n### tips\n\navalondock外層的結構基本上都是\n```\nDockingManager\n  LayoutRoot\n    LayoutPanel\n    LayoutRoot.XXXXSide\n```\n在LayoutRoot裡面的LayoutAnchorable、LayoutDocument可以停靠在LayoutRoot中的其他容器裡面\n\n在LayoutRoot裡面可以配置上、下、左、右、中間的布局\n基本的就是這幾種\n```xml\n<!-- 不是主要Panel類型 -->\nLayoutRoot.TopSide(LayoutRoot.LeftSide、LayoutRoot.RightSide、LayoutRoot.BottomSide)\n  LayoutAnchorSide\n    LayoutAnchorGroup\n      LayoutAnchorable Title=\"Type1\"\n        Grid\n<!-- 主要Panel類型 -->\nLayoutPanel\n  LayoutDocumentPane\n    LayoutDocument Title=\"Type2\"\n```\n\n### 改變DockingManager裡面Tabitem的顏色\n```xml\n<avalondock:DockingManager.Resources>\n  <Style TargetType=\"{x:Type avalondock:LayoutDocumentTabItem}\">\n    <Setter Property=\"Background\" Value=\"#2D2D2F\"/>\n    <Setter Property=\"Foreground\" Value=\"White\"/>\n  </Style>\n  <Style TargetType=\"{x:Type avalondock:DockingManager}\">\n    <Setter Property=\"Background\" Value=\"#2D2D2F\"/>\n  </Style>\n</avalondock:DockingManager.Resources>\n```\n***\n#### LayoutAnchorable、LayoutDocument重要屬性\n```xml\n<!-- 可否按X關閉(隱藏) -->\nCanHide=\"False\"\n<!-- 點選TabItem打開時的預設高度 -->\nAutoHideHeight=\"300\"\n```\n\n","slug":"WPF-Dockable","published":1,"updated":"2024-11-21T02:20:00.205Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cm3xvfy8i002tewi9xb8j7mux","content":"<h3><span id=\"讓wpf有dockable的功能\">讓WPF有Dockable的功能</span></h3>\n<p><img src=\"avalondock.png\" alt=\"Dockable\"></p>\n<h3><span id=\"使用\">使用</span></h3>\n<h5><span id=\"nuget安裝wpf-toolkit\">Nuget安裝Wpf Toolkit</span></h5>\n<p>nuget搜尋WPF Toolkit，有一個作者是Xceed的就是了<br>\n<img src=\"nuget.PNG\" alt=\"Nuget\"></p>\n<h5><span id=\"xaml加入引用資源\">xaml加入引用資源</span></h5>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xmlns:avalondock=\"http://schemas.xceed.com/wpf/xaml/avalondock\"</span><br></pre></td></tr></table></figure>\n<h5><span id=\"實際使用\">實際使用</span></h5>\n<p><img src=\"result.PNG\" alt=\"Result\"></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Grid</span>&gt;</span>      </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">avalondock:DockingManager</span> <span class=\"attr\">x:Name</span>=<span class=\"string\">\"mtTab\"</span> <span class=\"attr\">Grid.Row</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">Visibility</span>=<span class=\"string\">\"&#123;Binding Render&#125;\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 設定Dockable元件樣式 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">avalondock:DockingManager.Theme</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">avalondock:VS2010Theme</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">avalondock:DockingManager.Theme</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- LayoutRoot : 在LayoutRoot中的所有元素可以互相停靠 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">avalondock:LayoutRoot</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!-- Left side --&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">avalondock:LayoutRoot.LeftSide</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">avalondock:LayoutAnchorSide</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">avalondock:LayoutAnchorGroup</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">avalondock:LayoutAnchorable</span> <span class=\"attr\">Title</span>=<span class=\"string\">\"Left1\"</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">TextBox</span> <span class=\"attr\">Text</span>=<span class=\"string\">\"123\"</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">avalondock:LayoutAnchorable</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">avalondock:LayoutAnchorable</span> <span class=\"attr\">Title</span>=<span class=\"string\">\"Left2\"</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">TextBox</span> <span class=\"attr\">Text</span>=<span class=\"string\">\"123\"</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">avalondock:LayoutAnchorable</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">avalondock:LayoutAnchorGroup</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">avalondock:LayoutAnchorSide</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">avalondock:LayoutRoot.LeftSide</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">&lt;!-- Right Side --&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">avalondock:LayoutRoot.RightSide</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">avalondock:LayoutAnchorSide</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">avalondock:LayoutAnchorGroup</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">avalondock:LayoutAnchorable</span> <span class=\"attr\">Title</span>=<span class=\"string\">\"Right1\"</span>&gt;</span></span><br><span class=\"line\">             <span class=\"tag\">&lt;<span class=\"name\">TextBox</span> <span class=\"attr\">Text</span>=<span class=\"string\">\"123\"</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">avalondock:LayoutAnchorable</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">avalondock:LayoutAnchorable</span> <span class=\"attr\">Title</span>=<span class=\"string\">\"Right2\"</span>&gt;</span></span><br><span class=\"line\">             <span class=\"tag\">&lt;<span class=\"name\">TextBox</span> <span class=\"attr\">Text</span>=<span class=\"string\">\"123\"</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">avalondock:LayoutAnchorable</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">avalondock:LayoutAnchorGroup</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">avalondock:LayoutAnchorSide</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">avalondock:LayoutRoot.RightSide</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">&lt;!-- Center --&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">avalondock:LayoutPanel</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">avalondock:LayoutDocumentPane</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">avalondock:LayoutDocument</span> <span class=\"attr\">Title</span>=<span class=\"string\">\"Main1\"</span> &gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">TextBox</span> <span class=\"attr\">Text</span>=<span class=\"string\">\"123\"</span>/&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">avalondock:LayoutDocument</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">avalondock:LayoutDocument</span> <span class=\"attr\">Title</span>=<span class=\"string\">\"Main2\"</span> &gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">TextBox</span> <span class=\"attr\">Text</span>=<span class=\"string\">\"123\"</span>/&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">avalondock:LayoutDocument</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">avalondock:LayoutDocumentPane</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">avalondock:LayoutPanel</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">avalondock:LayoutRoot</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">avalondock:DockingManager</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Grid</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3><span id=\"tips\">tips</span></h3>\n<p>avalondock外層的結構基本上都是</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">DockingManager</span></span><br><span class=\"line\">  <span class=\"selector-tag\">LayoutRoot</span></span><br><span class=\"line\">    <span class=\"selector-tag\">LayoutPanel</span></span><br><span class=\"line\">    <span class=\"selector-tag\">LayoutRoot</span><span class=\"selector-class\">.XXXXSide</span></span><br></pre></td></tr></table></figure>\n<p>在LayoutRoot裡面的LayoutAnchorable、LayoutDocument可以停靠在LayoutRoot中的其他容器裡面</p>\n<p>在LayoutRoot裡面可以配置上、下、左、右、中間的布局<br>\n基本的就是這幾種</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 不是主要Panel類型 --&gt;</span></span><br><span class=\"line\">LayoutRoot.TopSide(LayoutRoot.LeftSide、LayoutRoot.RightSide、LayoutRoot.BottomSide)</span><br><span class=\"line\">  LayoutAnchorSide</span><br><span class=\"line\">    LayoutAnchorGroup</span><br><span class=\"line\">      LayoutAnchorable Title=\"Type1\"</span><br><span class=\"line\">        Grid</span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 主要Panel類型 --&gt;</span></span><br><span class=\"line\">LayoutPanel</span><br><span class=\"line\">  LayoutDocumentPane</span><br><span class=\"line\">    LayoutDocument Title=\"Type2\"</span><br></pre></td></tr></table></figure>\n<h3><span id=\"改變dockingmanager裡面tabitem的顏色\">改變DockingManager裡面Tabitem的顏色</span></h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">avalondock:DockingManager.Resources</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">Style</span> <span class=\"attr\">TargetType</span>=<span class=\"string\">\"&#123;x:Type avalondock:LayoutDocumentTabItem&#125;\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"Background\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"#2D2D2F\"</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"Foreground\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"White\"</span>/&gt;</span></span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">Style</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">Style</span> <span class=\"attr\">TargetType</span>=<span class=\"string\">\"&#123;x:Type avalondock:DockingManager&#125;\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"Background\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"#2D2D2F\"</span>/&gt;</span></span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">Style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">avalondock:DockingManager.Resources</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<hr>\n<h4><span id=\"layoutanchorable-layoutdocument重要屬性\">LayoutAnchorable、LayoutDocument重要屬性</span></h4>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 可否按X關閉(隱藏) --&gt;</span></span><br><span class=\"line\">CanHide=\"False\"</span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 點選TabItem打開時的預設高度 --&gt;</span></span><br><span class=\"line\">AutoHideHeight=\"300\"</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h3>讓WPF有Dockable的功能</h3>\n<p><img src=\"avalondock.png\" alt=\"Dockable\"></p>\n<h3>使用</h3>\n<h5>Nuget安裝Wpf Toolkit</h5>\n<p>nuget搜尋WPF Toolkit，有一個作者是Xceed的就是了<br>\n<img src=\"nuget.PNG\" alt=\"Nuget\"></p>\n<h5>xaml加入引用資源</h5>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xmlns:avalondock=\"http://schemas.xceed.com/wpf/xaml/avalondock\"</span><br></pre></td></tr></table></figure>\n<h5>實際使用</h5>\n<p><img src=\"result.PNG\" alt=\"Result\"></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Grid</span>&gt;</span>      </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">avalondock:DockingManager</span> <span class=\"attr\">x:Name</span>=<span class=\"string\">\"mtTab\"</span> <span class=\"attr\">Grid.Row</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">Visibility</span>=<span class=\"string\">\"&#123;Binding Render&#125;\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 設定Dockable元件樣式 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">avalondock:DockingManager.Theme</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">avalondock:VS2010Theme</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">avalondock:DockingManager.Theme</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- LayoutRoot : 在LayoutRoot中的所有元素可以互相停靠 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">avalondock:LayoutRoot</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!-- Left side --&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">avalondock:LayoutRoot.LeftSide</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">avalondock:LayoutAnchorSide</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">avalondock:LayoutAnchorGroup</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">avalondock:LayoutAnchorable</span> <span class=\"attr\">Title</span>=<span class=\"string\">\"Left1\"</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">TextBox</span> <span class=\"attr\">Text</span>=<span class=\"string\">\"123\"</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">avalondock:LayoutAnchorable</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">avalondock:LayoutAnchorable</span> <span class=\"attr\">Title</span>=<span class=\"string\">\"Left2\"</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">TextBox</span> <span class=\"attr\">Text</span>=<span class=\"string\">\"123\"</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">avalondock:LayoutAnchorable</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">avalondock:LayoutAnchorGroup</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">avalondock:LayoutAnchorSide</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">avalondock:LayoutRoot.LeftSide</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">&lt;!-- Right Side --&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">avalondock:LayoutRoot.RightSide</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">avalondock:LayoutAnchorSide</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">avalondock:LayoutAnchorGroup</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">avalondock:LayoutAnchorable</span> <span class=\"attr\">Title</span>=<span class=\"string\">\"Right1\"</span>&gt;</span></span><br><span class=\"line\">             <span class=\"tag\">&lt;<span class=\"name\">TextBox</span> <span class=\"attr\">Text</span>=<span class=\"string\">\"123\"</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">avalondock:LayoutAnchorable</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">avalondock:LayoutAnchorable</span> <span class=\"attr\">Title</span>=<span class=\"string\">\"Right2\"</span>&gt;</span></span><br><span class=\"line\">             <span class=\"tag\">&lt;<span class=\"name\">TextBox</span> <span class=\"attr\">Text</span>=<span class=\"string\">\"123\"</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">avalondock:LayoutAnchorable</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">avalondock:LayoutAnchorGroup</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">avalondock:LayoutAnchorSide</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">avalondock:LayoutRoot.RightSide</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">&lt;!-- Center --&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">avalondock:LayoutPanel</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">avalondock:LayoutDocumentPane</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">avalondock:LayoutDocument</span> <span class=\"attr\">Title</span>=<span class=\"string\">\"Main1\"</span> &gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">TextBox</span> <span class=\"attr\">Text</span>=<span class=\"string\">\"123\"</span>/&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">avalondock:LayoutDocument</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">avalondock:LayoutDocument</span> <span class=\"attr\">Title</span>=<span class=\"string\">\"Main2\"</span> &gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">TextBox</span> <span class=\"attr\">Text</span>=<span class=\"string\">\"123\"</span>/&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">avalondock:LayoutDocument</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">avalondock:LayoutDocumentPane</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">avalondock:LayoutPanel</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">avalondock:LayoutRoot</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">avalondock:DockingManager</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Grid</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3>tips</h3>\n<p>avalondock外層的結構基本上都是</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">DockingManager</span></span><br><span class=\"line\">  <span class=\"selector-tag\">LayoutRoot</span></span><br><span class=\"line\">    <span class=\"selector-tag\">LayoutPanel</span></span><br><span class=\"line\">    <span class=\"selector-tag\">LayoutRoot</span><span class=\"selector-class\">.XXXXSide</span></span><br></pre></td></tr></table></figure>\n<p>在LayoutRoot裡面的LayoutAnchorable、LayoutDocument可以停靠在LayoutRoot中的其他容器裡面</p>\n<p>在LayoutRoot裡面可以配置上、下、左、右、中間的布局<br>\n基本的就是這幾種</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 不是主要Panel類型 --&gt;</span></span><br><span class=\"line\">LayoutRoot.TopSide(LayoutRoot.LeftSide、LayoutRoot.RightSide、LayoutRoot.BottomSide)</span><br><span class=\"line\">  LayoutAnchorSide</span><br><span class=\"line\">    LayoutAnchorGroup</span><br><span class=\"line\">      LayoutAnchorable Title=\"Type1\"</span><br><span class=\"line\">        Grid</span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 主要Panel類型 --&gt;</span></span><br><span class=\"line\">LayoutPanel</span><br><span class=\"line\">  LayoutDocumentPane</span><br><span class=\"line\">    LayoutDocument Title=\"Type2\"</span><br></pre></td></tr></table></figure>\n<h3>改變DockingManager裡面Tabitem的顏色</h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">avalondock:DockingManager.Resources</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">Style</span> <span class=\"attr\">TargetType</span>=<span class=\"string\">\"&#123;x:Type avalondock:LayoutDocumentTabItem&#125;\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"Background\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"#2D2D2F\"</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"Foreground\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"White\"</span>/&gt;</span></span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">Style</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">Style</span> <span class=\"attr\">TargetType</span>=<span class=\"string\">\"&#123;x:Type avalondock:DockingManager&#125;\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"Background\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"#2D2D2F\"</span>/&gt;</span></span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">Style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">avalondock:DockingManager.Resources</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<hr>\n<h4>LayoutAnchorable、LayoutDocument重要屬性</h4>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 可否按X關閉(隱藏) --&gt;</span></span><br><span class=\"line\">CanHide=\"False\"</span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 點選TabItem打開時的預設高度 --&gt;</span></span><br><span class=\"line\">AutoHideHeight=\"300\"</span><br></pre></td></tr></table></figure>\n"},{"title":"WPF OnPropertyChanged不寫死參數PropertyName","catalog":true,"abbrlink":"e440dc75","date":"2020-07-02T12:28:11.000Z","subtitle":null,"header-img":null,"_content":"\n#### [.net framework 4.5 ↑]使用CallerMemberName Attribute\n##### 一般寫法\n繼承INotifyPropertyChanged Interface\n實做介面\n```csharp\npublic void OnPropertyChanged(string parameter){}\n```\n\n##### CallerMemberName Attribute\n這樣OnPropertyChanged(\"ProperyName\")這樣的東西要寫很多次,沒什麼意義\n.net framework4.5之後加入了CallerMemberNameAttribute\n```csharp\npublic void functionName([CallerMeberName] string parameter=\"\"){}\n\n//以後都可以\nprivate string _TestProperty = string.Empty;\npublic string TestProperty\n{\n    get\n    {\n        return _TestProperty;\n    }\n    set\n    {\n        _TestProperty = value;\n        //不用寫參數很方便\n        //OnPropertyChanged(\"TestProperty\");\n        OnPropertyChanged();\n    }\n}\n```","source":"_posts/WPF-OnPropertyChanged不寫死參數PropertyName.md","raw":"---\ntitle: WPF OnPropertyChanged不寫死參數PropertyName\ncatalog: true\ntags:\n  - C#\n  - WPF\nabbrlink: e440dc75\ncategories: uncategorized\ndate: 2020-07-02 20:28:11\nsubtitle:\nheader-img:\n---\n\n#### [.net framework 4.5 ↑]使用CallerMemberName Attribute\n##### 一般寫法\n繼承INotifyPropertyChanged Interface\n實做介面\n```csharp\npublic void OnPropertyChanged(string parameter){}\n```\n\n##### CallerMemberName Attribute\n這樣OnPropertyChanged(\"ProperyName\")這樣的東西要寫很多次,沒什麼意義\n.net framework4.5之後加入了CallerMemberNameAttribute\n```csharp\npublic void functionName([CallerMeberName] string parameter=\"\"){}\n\n//以後都可以\nprivate string _TestProperty = string.Empty;\npublic string TestProperty\n{\n    get\n    {\n        return _TestProperty;\n    }\n    set\n    {\n        _TestProperty = value;\n        //不用寫參數很方便\n        //OnPropertyChanged(\"TestProperty\");\n        OnPropertyChanged();\n    }\n}\n```","slug":"WPF-OnPropertyChanged不寫死參數PropertyName","published":1,"updated":"2024-11-21T02:20:00.209Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cm3xvfy8j002wewi9pvnau0p9","content":"<h4><span id=\"net-framework-45-使用callermembername-attribute\">[.net framework 4.5 ↑]使用CallerMemberName Attribute</span></h4>\n<h5><span id=\"一般寫法\">一般寫法</span></h5>\n<p>繼承INotifyPropertyChanged Interface<br>\n實做介面</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">OnPropertyChanged</span>(<span class=\"params\"><span class=\"keyword\">string</span> parameter</span>)</span>&#123;&#125;</span><br></pre></td></tr></table></figure>\n<h5><span id=\"callermembername-attribute\">CallerMemberName Attribute</span></h5>\n<p>這樣OnPropertyChanged(“ProperyName”)這樣的東西要寫很多次,沒什麼意義<br>\n.net framework4.5之後加入了CallerMemberNameAttribute</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">functionName</span>(<span class=\"params\">[CallerMeberName] <span class=\"keyword\">string</span> parameter=<span class=\"string\">\"\"</span></span>)</span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//以後都可以</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">string</span> _TestProperty = <span class=\"keyword\">string</span>.Empty;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">string</span> TestProperty</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">get</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> _TestProperty;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">set</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        _TestProperty = <span class=\"keyword\">value</span>;</span><br><span class=\"line\">        <span class=\"comment\">//不用寫參數很方便</span></span><br><span class=\"line\">        <span class=\"comment\">//OnPropertyChanged(\"TestProperty\");</span></span><br><span class=\"line\">        OnPropertyChanged();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h4>[.net framework 4.5 ↑]使用CallerMemberName Attribute</h4>\n<h5>一般寫法</h5>\n<p>繼承INotifyPropertyChanged Interface<br>\n實做介面</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">OnPropertyChanged</span>(<span class=\"params\"><span class=\"keyword\">string</span> parameter</span>)</span>&#123;&#125;</span><br></pre></td></tr></table></figure>\n<h5>CallerMemberName Attribute</h5>\n<p>這樣OnPropertyChanged(“ProperyName”)這樣的東西要寫很多次,沒什麼意義<br>\n.net framework4.5之後加入了CallerMemberNameAttribute</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">functionName</span>(<span class=\"params\">[CallerMeberName] <span class=\"keyword\">string</span> parameter=<span class=\"string\">\"\"</span></span>)</span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//以後都可以</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">string</span> _TestProperty = <span class=\"keyword\">string</span>.Empty;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">string</span> TestProperty</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">get</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> _TestProperty;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">set</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        _TestProperty = <span class=\"keyword\">value</span>;</span><br><span class=\"line\">        <span class=\"comment\">//不用寫參數很方便</span></span><br><span class=\"line\">        <span class=\"comment\">//OnPropertyChanged(\"TestProperty\");</span></span><br><span class=\"line\">        OnPropertyChanged();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"WPF Property、Dependency Property","catalog":true,"abbrlink":"84f61cd3","date":"2020-07-02T08:47:45.000Z","subtitle":null,"header-img":null,"_content":"\n\n##### Dependency Property(依賴屬性)\n我們常常會在類別中設計屬性(Property)供其他程式存取，依賴屬性(DependencyProperty)主要是設計在xaml中\n在WPF中屬性和依賴屬性最大的差異在於:\n**屬性被綁訂在依賴屬性上**\n```xml\n<Button Content=\"{Binding ContentText}\"/>\n```\n**依賴屬性綁定屬性**\n```xml\n<leo:LeoButton LeoContent=\"{Binding ContentText}\"/>\n```\n\n在CodeBehind打 **Propdp**再按兩下Tab，visual studio會自動產生Dependency Property的範本，再把依賴屬性的資料型態、名稱、預設值改成自己要的，就可以有一個自己的依賴屬性，依賴屬性常用在自己做的元件上，原生的元件沒有自己需要的屬性，所以自己做一個\n\n- 資料型態 : int\n- 名稱 : MyProperty\n- 預設值 : PropertyMetadata(0)\n\n```CSharp\npublic int MyProperty\n{\n    get { return (int)GetValue(MyPropertyProperty); }\n    set { SetValue(MyPropertyProperty, value); }\n}\n\n// Using a DependencyProperty as the backing store for MyProperty.  This enables animation, styling, binding, etc...\npublic static readonly DependencyProperty MyPropertyProperty =\n    DependencyProperty.Register(\"MyProperty\", typeof(int), typeof(ownerclass), new PropertyMetadata(0));\n```\n##### Property(屬性)\n主要用在CodeBehind，xaml沒辦法用自訂的屬性Property\n```CSharp\nprivate bool _DefaultPropertyName;\npublic bool DefaultPropertyName\n{\n    get\n    {\n        return _DefaultPropertyName;\n    }\n    set\n    {\n        _DefaultPropertyName = value;\n        OnPropertyChanged();\n    }\n}\n```\n##### Property跟Dependency Property之間溝通\n``` csharp\n//取得資料 : \nvar data = (DataType)GetValue(DependencyPropertyName);\n//設定資料 : \nSetValue(DependencyPropertyName, value);\n```","source":"_posts/WPF-Property、Dependency-Property.md","raw":"---\ntitle: WPF Property、Dependency Property\ncatalog: true\ntags:\n  - WPF\n  - C#\n  - xaml\nabbrlink: 84f61cd3\ncategories: uncategorized\ndate: 2020-07-02 16:47:45\nsubtitle:\nheader-img:\n---\n\n\n##### Dependency Property(依賴屬性)\n我們常常會在類別中設計屬性(Property)供其他程式存取，依賴屬性(DependencyProperty)主要是設計在xaml中\n在WPF中屬性和依賴屬性最大的差異在於:\n**屬性被綁訂在依賴屬性上**\n```xml\n<Button Content=\"{Binding ContentText}\"/>\n```\n**依賴屬性綁定屬性**\n```xml\n<leo:LeoButton LeoContent=\"{Binding ContentText}\"/>\n```\n\n在CodeBehind打 **Propdp**再按兩下Tab，visual studio會自動產生Dependency Property的範本，再把依賴屬性的資料型態、名稱、預設值改成自己要的，就可以有一個自己的依賴屬性，依賴屬性常用在自己做的元件上，原生的元件沒有自己需要的屬性，所以自己做一個\n\n- 資料型態 : int\n- 名稱 : MyProperty\n- 預設值 : PropertyMetadata(0)\n\n```CSharp\npublic int MyProperty\n{\n    get { return (int)GetValue(MyPropertyProperty); }\n    set { SetValue(MyPropertyProperty, value); }\n}\n\n// Using a DependencyProperty as the backing store for MyProperty.  This enables animation, styling, binding, etc...\npublic static readonly DependencyProperty MyPropertyProperty =\n    DependencyProperty.Register(\"MyProperty\", typeof(int), typeof(ownerclass), new PropertyMetadata(0));\n```\n##### Property(屬性)\n主要用在CodeBehind，xaml沒辦法用自訂的屬性Property\n```CSharp\nprivate bool _DefaultPropertyName;\npublic bool DefaultPropertyName\n{\n    get\n    {\n        return _DefaultPropertyName;\n    }\n    set\n    {\n        _DefaultPropertyName = value;\n        OnPropertyChanged();\n    }\n}\n```\n##### Property跟Dependency Property之間溝通\n``` csharp\n//取得資料 : \nvar data = (DataType)GetValue(DependencyPropertyName);\n//設定資料 : \nSetValue(DependencyPropertyName, value);\n```","slug":"WPF-Property、Dependency-Property","published":1,"updated":"2024-11-21T02:20:00.209Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cm3xvfy8k002zewi9beizf4t6","content":"<h5><span id=\"dependency-property依賴屬性\">Dependency Property(依賴屬性)</span></h5>\n<p>我們常常會在類別中設計屬性(Property)供其他程式存取，依賴屬性(DependencyProperty)主要是設計在xaml中<br>\n在WPF中屬性和依賴屬性最大的差異在於:<br>\n<strong>屬性被綁訂在依賴屬性上</strong></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">Content</span>=<span class=\"string\">\"&#123;Binding ContentText&#125;\"</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n<p><strong>依賴屬性綁定屬性</strong></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">leo:LeoButton</span> <span class=\"attr\">LeoContent</span>=<span class=\"string\">\"&#123;Binding ContentText&#125;\"</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n<p>在CodeBehind打 <strong>Propdp</strong>再按兩下Tab，visual studio會自動產生Dependency Property的範本，再把依賴屬性的資料型態、名稱、預設值改成自己要的，就可以有一個自己的依賴屬性，依賴屬性常用在自己做的元件上，原生的元件沒有自己需要的屬性，所以自己做一個</p>\n<ul>\n<li>資料型態 : int</li>\n<li>名稱 : MyProperty</li>\n<li>預設值 : PropertyMetadata(0)</li>\n</ul>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> MyProperty</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> (<span class=\"keyword\">int</span>)GetValue(MyPropertyProperty); &#125;</span><br><span class=\"line\">    <span class=\"keyword\">set</span> &#123; SetValue(MyPropertyProperty, <span class=\"keyword\">value</span>); &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Using a DependencyProperty as the backing store for MyProperty.  This enables animation, styling, binding, etc...</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">readonly</span> DependencyProperty MyPropertyProperty =</span><br><span class=\"line\">    DependencyProperty.Register(<span class=\"string\">\"MyProperty\"</span>, <span class=\"keyword\">typeof</span>(<span class=\"keyword\">int</span>), <span class=\"keyword\">typeof</span>(ownerclass), <span class=\"keyword\">new</span> PropertyMetadata(<span class=\"number\">0</span>));</span><br></pre></td></tr></table></figure>\n<h5><span id=\"property屬性\">Property(屬性)</span></h5>\n<p>主要用在CodeBehind，xaml沒辦法用自訂的屬性Property</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">bool</span> _DefaultPropertyName;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">bool</span> DefaultPropertyName</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">get</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> _DefaultPropertyName;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">set</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        _DefaultPropertyName = <span class=\"keyword\">value</span>;</span><br><span class=\"line\">        OnPropertyChanged();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5><span id=\"property跟dependency-property之間溝通\">Property跟Dependency Property之間溝通</span></h5>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//取得資料 : </span></span><br><span class=\"line\"><span class=\"keyword\">var</span> data = (DataType)GetValue(DependencyPropertyName);</span><br><span class=\"line\"><span class=\"comment\">//設定資料 : </span></span><br><span class=\"line\">SetValue(DependencyPropertyName, <span class=\"keyword\">value</span>);</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h5>Dependency Property(依賴屬性)</h5>\n<p>我們常常會在類別中設計屬性(Property)供其他程式存取，依賴屬性(DependencyProperty)主要是設計在xaml中<br>\n在WPF中屬性和依賴屬性最大的差異在於:<br>\n<strong>屬性被綁訂在依賴屬性上</strong></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">Content</span>=<span class=\"string\">\"&#123;Binding ContentText&#125;\"</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n<p><strong>依賴屬性綁定屬性</strong></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">leo:LeoButton</span> <span class=\"attr\">LeoContent</span>=<span class=\"string\">\"&#123;Binding ContentText&#125;\"</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n<p>在CodeBehind打 <strong>Propdp</strong>再按兩下Tab，visual studio會自動產生Dependency Property的範本，再把依賴屬性的資料型態、名稱、預設值改成自己要的，就可以有一個自己的依賴屬性，依賴屬性常用在自己做的元件上，原生的元件沒有自己需要的屬性，所以自己做一個</p>\n<ul>\n<li>資料型態 : int</li>\n<li>名稱 : MyProperty</li>\n<li>預設值 : PropertyMetadata(0)</li>\n</ul>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> MyProperty</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">get</span> &#123; <span class=\"keyword\">return</span> (<span class=\"keyword\">int</span>)GetValue(MyPropertyProperty); &#125;</span><br><span class=\"line\">    <span class=\"keyword\">set</span> &#123; SetValue(MyPropertyProperty, <span class=\"keyword\">value</span>); &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Using a DependencyProperty as the backing store for MyProperty.  This enables animation, styling, binding, etc...</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">readonly</span> DependencyProperty MyPropertyProperty =</span><br><span class=\"line\">    DependencyProperty.Register(<span class=\"string\">\"MyProperty\"</span>, <span class=\"keyword\">typeof</span>(<span class=\"keyword\">int</span>), <span class=\"keyword\">typeof</span>(ownerclass), <span class=\"keyword\">new</span> PropertyMetadata(<span class=\"number\">0</span>));</span><br></pre></td></tr></table></figure>\n<h5>Property(屬性)</h5>\n<p>主要用在CodeBehind，xaml沒辦法用自訂的屬性Property</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">bool</span> _DefaultPropertyName;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">bool</span> DefaultPropertyName</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">get</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> _DefaultPropertyName;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">set</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        _DefaultPropertyName = <span class=\"keyword\">value</span>;</span><br><span class=\"line\">        OnPropertyChanged();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5>Property跟Dependency Property之間溝通</h5>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//取得資料 : </span></span><br><span class=\"line\"><span class=\"keyword\">var</span> data = (DataType)GetValue(DependencyPropertyName);</span><br><span class=\"line\"><span class=\"comment\">//設定資料 : </span></span><br><span class=\"line\">SetValue(DependencyPropertyName, <span class=\"keyword\">value</span>);</span><br></pre></td></tr></table></figure>"},{"title":"WPF MultiBinding","catalog":true,"comments":1,"abbrlink":42547,"date":"2020-08-31T10:56:05.000Z","_content":"\n## MultiBinding\n有時候會要寫什麼值等於多少<br>\n可以用兩個元件來解決，但是這樣就要多寫一個元件，不是很聰明\n```xml\n<TextBlock Text=\"資料筆數 \">\n<TextBlock Text=\"{Binding Count}\">\n```\n<br>\n或是在ViewModel裡面處裡掉，可是這樣這個屬性就沒有辦法跟其它屬性共用\n```csharp\nprivate string _Count = string.Empty;\npublic string Count\n{\n    get\n    {\n        return $\"資料筆數 {_Count}\";\n    }\n    set{.....}\n}\n```\n\n### MultiBinding 優雅解決問題\n\n```xml\n<TextBlock>\n    <TextBlock.Text>\n        <MultiBinding StringFormat=\"{}資料筆數 {0}\">\n            <Binding Path=\"Count\"/>\n        </MultiBinding>\n    </TextBlock.Text>\n</TextBlock>\n```","source":"_posts/WPF-MultiBinding.md","raw":"---\ntitle: WPF MultiBinding\ncatalog: true\ncomments: true\ntags:\n  - WPF\n  - DataBinding\nabbrlink: 42547\ncategories: uncategorized\ndate: 2020-08-31 18:56:05\n---\n\n## MultiBinding\n有時候會要寫什麼值等於多少<br>\n可以用兩個元件來解決，但是這樣就要多寫一個元件，不是很聰明\n```xml\n<TextBlock Text=\"資料筆數 \">\n<TextBlock Text=\"{Binding Count}\">\n```\n<br>\n或是在ViewModel裡面處裡掉，可是這樣這個屬性就沒有辦法跟其它屬性共用\n```csharp\nprivate string _Count = string.Empty;\npublic string Count\n{\n    get\n    {\n        return $\"資料筆數 {_Count}\";\n    }\n    set{.....}\n}\n```\n\n### MultiBinding 優雅解決問題\n\n```xml\n<TextBlock>\n    <TextBlock.Text>\n        <MultiBinding StringFormat=\"{}資料筆數 {0}\">\n            <Binding Path=\"Count\"/>\n        </MultiBinding>\n    </TextBlock.Text>\n</TextBlock>\n```","slug":"WPF-MultiBinding","published":1,"updated":"2024-11-21T02:20:00.208Z","layout":"post","photos":[],"link":"","_id":"cm3xvfy8m0033ewi9niq309h3","content":"<h2><span id=\"multibinding\">MultiBinding</span></h2>\n<p>有時候會要寫什麼值等於多少<br><br>\n可以用兩個元件來解決，但是這樣就要多寫一個元件，不是很聰明</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">TextBlock</span> <span class=\"attr\">Text</span>=<span class=\"string\">\"資料筆數 \"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">TextBlock</span> <span class=\"attr\">Text</span>=<span class=\"string\">\"&#123;Binding Count&#125;\"</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<br>\n或是在ViewModel裡面處裡掉，可是這樣這個屬性就沒有辦法跟其它屬性共用\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">string</span> _Count = <span class=\"keyword\">string</span>.Empty;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">string</span> Count</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">get</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">$\"資料筆數 <span class=\"subst\">&#123;_Count&#125;</span>\"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">set</span>&#123;.....&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3><span id=\"multibinding-優雅解決問題\">MultiBinding 優雅解決問題</span></h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">TextBlock</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">TextBlock.Text</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">MultiBinding</span> <span class=\"attr\">StringFormat</span>=<span class=\"string\">\"&#123;&#125;資料筆數 &#123;0&#125;\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">Binding</span> <span class=\"attr\">Path</span>=<span class=\"string\">\"Count\"</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">MultiBinding</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">TextBlock.Text</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">TextBlock</span>&gt;</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h2>MultiBinding</h2>\n<p>有時候會要寫什麼值等於多少<br><br>\n可以用兩個元件來解決，但是這樣就要多寫一個元件，不是很聰明</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">TextBlock</span> <span class=\"attr\">Text</span>=<span class=\"string\">\"資料筆數 \"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">TextBlock</span> <span class=\"attr\">Text</span>=<span class=\"string\">\"&#123;Binding Count&#125;\"</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<br>\n或是在ViewModel裡面處裡掉，可是這樣這個屬性就沒有辦法跟其它屬性共用\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">string</span> _Count = <span class=\"keyword\">string</span>.Empty;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">string</span> Count</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">get</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">$\"資料筆數 <span class=\"subst\">&#123;_Count&#125;</span>\"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">set</span>&#123;.....&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3>MultiBinding 優雅解決問題</h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">TextBlock</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">TextBlock.Text</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">MultiBinding</span> <span class=\"attr\">StringFormat</span>=<span class=\"string\">\"&#123;&#125;資料筆數 &#123;0&#125;\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">Binding</span> <span class=\"attr\">Path</span>=<span class=\"string\">\"Count\"</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">MultiBinding</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">TextBlock.Text</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">TextBlock</span>&gt;</span></span><br></pre></td></tr></table></figure>"},{"title":"WPF Storyboard","catalog":true,"comments":1,"abbrlink":62239,"date":"2021-02-17T05:49:59.000Z","_content":"\n## WFP Storyboard\n\n平常我們可以透過綁定事件的方式在觸發指定事件的時候，透過ViewModel中的屬性去異動畫面\n```xml\n<StackPanel Background=\"{Binding BackgroundColor}\">\n     <i:Interaction.Triggers>\n        <i:EventTrigger EventName=\"MouseEnter\">\n            <i:InvokeCommandAction Command=\"{Binding UpdateColorCommand}\"/>\n        </i:EventTrigger>\n    </i:Interaction.Triggers>\n</StackPanel>\n```\n```C sharp\npublic void UpdateColorCommandAction()\n{\n    BackgroundColor = Brushes.Black;\n}\n```\n\n可是這個方法在畫面的更新是很生硬的，就是透明馬上變黑色\n\n如果我們需要做一些慢慢變色這樣的效果這時候就可以使用StoryBoard\n### StoryBoard\n```xml\n<StackPanel Background=\"Black\" Grid.Row=\"1\" Grid.Column=\"0\" >\n    <StackPanel.Style>\n        <Style>\n            <Style.Triggers>\n                <EventTrigger RoutedEvent=\"Mouse.MouseEnter\">\n                    <BeginStoryboard>\n                        <Storyboard>\n                            <ColorAnimation Storyboard.TargetProperty=\"Background.Color\" From=\"Black\" To=\"Transparent\" Duration=\"0:0:1\"/>\n                        </Storyboard>\n                    </BeginStoryboard>\n                </EventTrigger>\n                <EventTrigger RoutedEvent=\"Mouse.MouseLeave\">\n                    <BeginStoryboard>\n                        <Storyboard>\n                            <ColorAnimation Storyboard.TargetProperty=\"Background.Color\" From=\"Transparent\" To=\"Black\" Duration=\"0:0:1\"/>\n                        </Storyboard>\n                    </BeginStoryboard>\n                </EventTrigger>\n            </Style.Triggers>\n        </Style>\n    </StackPanel.Style>\n</StackPanel>\n```\n\n### EventTrigger\n上面StoryBoard中用到的EventTrigger不是指StackPanel的事件，而是指觸發事件的行為 **Mouse.MouseEnter**\n因為在IDE中，你輸入 \n``` xml\n<EventTrigger RoutedEvent=\"\"> \n```\n他不會自動填入有哪些Event可以選，很麻煩<br><br>\n\n所以這裡舉幾個我個人很常用到的行為\n\n如果你知道有其他方法可以用選的去設定RoutedEvent的值的話請告訴我，感謝\n``` xml\nMouse\n    Mouse.MouseEnter\n    Mouse.MouseLeave\n\nButton\n    Button.Click\n\nBinding\n    Binding.TargetUpdated\n```","source":"_posts/WPF-Storyboard.md","raw":"---\ntitle: WPF Storyboard\ncatalog: true\ncomments: true\ntags:\n  - WPF\nabbrlink: 62239\ncategories: uncategorized\ndate: 2021-02-17 13:49:59\n---\n\n## WFP Storyboard\n\n平常我們可以透過綁定事件的方式在觸發指定事件的時候，透過ViewModel中的屬性去異動畫面\n```xml\n<StackPanel Background=\"{Binding BackgroundColor}\">\n     <i:Interaction.Triggers>\n        <i:EventTrigger EventName=\"MouseEnter\">\n            <i:InvokeCommandAction Command=\"{Binding UpdateColorCommand}\"/>\n        </i:EventTrigger>\n    </i:Interaction.Triggers>\n</StackPanel>\n```\n```C sharp\npublic void UpdateColorCommandAction()\n{\n    BackgroundColor = Brushes.Black;\n}\n```\n\n可是這個方法在畫面的更新是很生硬的，就是透明馬上變黑色\n\n如果我們需要做一些慢慢變色這樣的效果這時候就可以使用StoryBoard\n### StoryBoard\n```xml\n<StackPanel Background=\"Black\" Grid.Row=\"1\" Grid.Column=\"0\" >\n    <StackPanel.Style>\n        <Style>\n            <Style.Triggers>\n                <EventTrigger RoutedEvent=\"Mouse.MouseEnter\">\n                    <BeginStoryboard>\n                        <Storyboard>\n                            <ColorAnimation Storyboard.TargetProperty=\"Background.Color\" From=\"Black\" To=\"Transparent\" Duration=\"0:0:1\"/>\n                        </Storyboard>\n                    </BeginStoryboard>\n                </EventTrigger>\n                <EventTrigger RoutedEvent=\"Mouse.MouseLeave\">\n                    <BeginStoryboard>\n                        <Storyboard>\n                            <ColorAnimation Storyboard.TargetProperty=\"Background.Color\" From=\"Transparent\" To=\"Black\" Duration=\"0:0:1\"/>\n                        </Storyboard>\n                    </BeginStoryboard>\n                </EventTrigger>\n            </Style.Triggers>\n        </Style>\n    </StackPanel.Style>\n</StackPanel>\n```\n\n### EventTrigger\n上面StoryBoard中用到的EventTrigger不是指StackPanel的事件，而是指觸發事件的行為 **Mouse.MouseEnter**\n因為在IDE中，你輸入 \n``` xml\n<EventTrigger RoutedEvent=\"\"> \n```\n他不會自動填入有哪些Event可以選，很麻煩<br><br>\n\n所以這裡舉幾個我個人很常用到的行為\n\n如果你知道有其他方法可以用選的去設定RoutedEvent的值的話請告訴我，感謝\n``` xml\nMouse\n    Mouse.MouseEnter\n    Mouse.MouseLeave\n\nButton\n    Button.Click\n\nBinding\n    Binding.TargetUpdated\n```","slug":"WPF-Storyboard","published":1,"updated":"2024-11-21T02:20:00.210Z","layout":"post","photos":[],"link":"","_id":"cm3xvfy8n0036ewi9mvxlxhtr","content":"<h2><span id=\"wfp-storyboard\">WFP Storyboard</span></h2>\n<p>平常我們可以透過綁定事件的方式在觸發指定事件的時候，透過ViewModel中的屬性去異動畫面</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">StackPanel</span> <span class=\"attr\">Background</span>=<span class=\"string\">\"&#123;Binding BackgroundColor&#125;\"</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">i:Interaction.Triggers</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">i:EventTrigger</span> <span class=\"attr\">EventName</span>=<span class=\"string\">\"MouseEnter\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">i:InvokeCommandAction</span> <span class=\"attr\">Command</span>=<span class=\"string\">\"&#123;Binding UpdateColorCommand&#125;\"</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">i:EventTrigger</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">i:Interaction.Triggers</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">StackPanel</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight c\"><figcaption><span>sharp</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">UpdateColorCommandAction</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    BackgroundColor = Brushes.Black;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>可是這個方法在畫面的更新是很生硬的，就是透明馬上變黑色</p>\n<p>如果我們需要做一些慢慢變色這樣的效果這時候就可以使用StoryBoard</p>\n<h3><span id=\"storyboard\">StoryBoard</span></h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">StackPanel</span> <span class=\"attr\">Background</span>=<span class=\"string\">\"Black\"</span> <span class=\"attr\">Grid.Row</span>=<span class=\"string\">\"1\"</span> <span class=\"attr\">Grid.Column</span>=<span class=\"string\">\"0\"</span> &gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">StackPanel.Style</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">Style</span>&gt;</span></span><br><span class=\"line\"><span class=\"css\">            &lt;<span class=\"selector-tag\">Style</span><span class=\"selector-class\">.Triggers</span>&gt;</span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">EventTrigger</span> <span class=\"attr\">RoutedEvent</span>=<span class=\"string\">\"Mouse.MouseEnter\"</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                    <span class=\"tag\">&lt;<span class=\"name\">BeginStoryboard</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                        <span class=\"tag\">&lt;<span class=\"name\">Storyboard</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                            <span class=\"tag\">&lt;<span class=\"name\">ColorAnimation</span> <span class=\"attr\">Storyboard.TargetProperty</span>=<span class=\"string\">\"Background.Color\"</span> <span class=\"attr\">From</span>=<span class=\"string\">\"Black\"</span> <span class=\"attr\">To</span>=<span class=\"string\">\"Transparent\"</span> <span class=\"attr\">Duration</span>=<span class=\"string\">\"0:0:1\"</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                        <span class=\"tag\">&lt;/<span class=\"name\">Storyboard</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                    <span class=\"tag\">&lt;/<span class=\"name\">BeginStoryboard</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;/<span class=\"name\">EventTrigger</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">EventTrigger</span> <span class=\"attr\">RoutedEvent</span>=<span class=\"string\">\"Mouse.MouseLeave\"</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                    <span class=\"tag\">&lt;<span class=\"name\">BeginStoryboard</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                        <span class=\"tag\">&lt;<span class=\"name\">Storyboard</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                            <span class=\"tag\">&lt;<span class=\"name\">ColorAnimation</span> <span class=\"attr\">Storyboard.TargetProperty</span>=<span class=\"string\">\"Background.Color\"</span> <span class=\"attr\">From</span>=<span class=\"string\">\"Transparent\"</span> <span class=\"attr\">To</span>=<span class=\"string\">\"Black\"</span> <span class=\"attr\">Duration</span>=<span class=\"string\">\"0:0:1\"</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                        <span class=\"tag\">&lt;/<span class=\"name\">Storyboard</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                    <span class=\"tag\">&lt;/<span class=\"name\">BeginStoryboard</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;/<span class=\"name\">EventTrigger</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;/<span class=\"name\">Style.Triggers</span>&gt;</span></span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">Style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">StackPanel.Style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">StackPanel</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3><span id=\"eventtrigger\">EventTrigger</span></h3>\n<p>上面StoryBoard中用到的EventTrigger不是指StackPanel的事件，而是指觸發事件的行為 <strong>Mouse.MouseEnter</strong><br>\n因為在IDE中，你輸入</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">EventTrigger</span> <span class=\"attr\">RoutedEvent</span>=<span class=\"string\">\"\"</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>他不會自動填入有哪些Event可以選，很麻煩<br><br></p>\n<p>所以這裡舉幾個我個人很常用到的行為</p>\n<p>如果你知道有其他方法可以用選的去設定RoutedEvent的值的話請告訴我，感謝</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Mouse</span><br><span class=\"line\">    Mouse.MouseEnter</span><br><span class=\"line\">    Mouse.MouseLeave</span><br><span class=\"line\"></span><br><span class=\"line\">Button</span><br><span class=\"line\">    Button.Click</span><br><span class=\"line\"></span><br><span class=\"line\">Binding</span><br><span class=\"line\">    Binding.TargetUpdated</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h2>WFP Storyboard</h2>\n<p>平常我們可以透過綁定事件的方式在觸發指定事件的時候，透過ViewModel中的屬性去異動畫面</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">StackPanel</span> <span class=\"attr\">Background</span>=<span class=\"string\">\"&#123;Binding BackgroundColor&#125;\"</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">i:Interaction.Triggers</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">i:EventTrigger</span> <span class=\"attr\">EventName</span>=<span class=\"string\">\"MouseEnter\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">i:InvokeCommandAction</span> <span class=\"attr\">Command</span>=<span class=\"string\">\"&#123;Binding UpdateColorCommand&#125;\"</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">i:EventTrigger</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">i:Interaction.Triggers</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">StackPanel</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight c\"><figcaption><span>sharp</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">UpdateColorCommandAction</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    BackgroundColor = Brushes.Black;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>可是這個方法在畫面的更新是很生硬的，就是透明馬上變黑色</p>\n<p>如果我們需要做一些慢慢變色這樣的效果這時候就可以使用StoryBoard</p>\n<h3>StoryBoard</h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">StackPanel</span> <span class=\"attr\">Background</span>=<span class=\"string\">\"Black\"</span> <span class=\"attr\">Grid.Row</span>=<span class=\"string\">\"1\"</span> <span class=\"attr\">Grid.Column</span>=<span class=\"string\">\"0\"</span> &gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">StackPanel.Style</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">Style</span>&gt;</span></span><br><span class=\"line\"><span class=\"css\">            &lt;<span class=\"selector-tag\">Style</span><span class=\"selector-class\">.Triggers</span>&gt;</span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">EventTrigger</span> <span class=\"attr\">RoutedEvent</span>=<span class=\"string\">\"Mouse.MouseEnter\"</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                    <span class=\"tag\">&lt;<span class=\"name\">BeginStoryboard</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                        <span class=\"tag\">&lt;<span class=\"name\">Storyboard</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                            <span class=\"tag\">&lt;<span class=\"name\">ColorAnimation</span> <span class=\"attr\">Storyboard.TargetProperty</span>=<span class=\"string\">\"Background.Color\"</span> <span class=\"attr\">From</span>=<span class=\"string\">\"Black\"</span> <span class=\"attr\">To</span>=<span class=\"string\">\"Transparent\"</span> <span class=\"attr\">Duration</span>=<span class=\"string\">\"0:0:1\"</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                        <span class=\"tag\">&lt;/<span class=\"name\">Storyboard</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                    <span class=\"tag\">&lt;/<span class=\"name\">BeginStoryboard</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;/<span class=\"name\">EventTrigger</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">EventTrigger</span> <span class=\"attr\">RoutedEvent</span>=<span class=\"string\">\"Mouse.MouseLeave\"</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                    <span class=\"tag\">&lt;<span class=\"name\">BeginStoryboard</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                        <span class=\"tag\">&lt;<span class=\"name\">Storyboard</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                            <span class=\"tag\">&lt;<span class=\"name\">ColorAnimation</span> <span class=\"attr\">Storyboard.TargetProperty</span>=<span class=\"string\">\"Background.Color\"</span> <span class=\"attr\">From</span>=<span class=\"string\">\"Transparent\"</span> <span class=\"attr\">To</span>=<span class=\"string\">\"Black\"</span> <span class=\"attr\">Duration</span>=<span class=\"string\">\"0:0:1\"</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                        <span class=\"tag\">&lt;/<span class=\"name\">Storyboard</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                    <span class=\"tag\">&lt;/<span class=\"name\">BeginStoryboard</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;/<span class=\"name\">EventTrigger</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;/<span class=\"name\">Style.Triggers</span>&gt;</span></span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">Style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">StackPanel.Style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">StackPanel</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3>EventTrigger</h3>\n<p>上面StoryBoard中用到的EventTrigger不是指StackPanel的事件，而是指觸發事件的行為 <strong>Mouse.MouseEnter</strong><br>\n因為在IDE中，你輸入</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">EventTrigger</span> <span class=\"attr\">RoutedEvent</span>=<span class=\"string\">\"\"</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>他不會自動填入有哪些Event可以選，很麻煩<br><br></p>\n<p>所以這裡舉幾個我個人很常用到的行為</p>\n<p>如果你知道有其他方法可以用選的去設定RoutedEvent的值的話請告訴我，感謝</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Mouse</span><br><span class=\"line\">    Mouse.MouseEnter</span><br><span class=\"line\">    Mouse.MouseLeave</span><br><span class=\"line\"></span><br><span class=\"line\">Button</span><br><span class=\"line\">    Button.Click</span><br><span class=\"line\"></span><br><span class=\"line\">Binding</span><br><span class=\"line\">    Binding.TargetUpdated</span><br></pre></td></tr></table></figure>"},{"title":"WPF Trigger","catalog":true,"comments":1,"abbrlink":36678,"date":"2021-02-17T06:33:04.000Z","_content":"## Trigger\n\n### DataTrigger\n```xml\n<TextBlock x:Name=\"tbText\"/>\n<StackPanel Background=\"Black\">\n    <StackPanel.Style>\n        <Style>\n            <Style.Triggers>\n                <DataTrigger Binding={Binding ElementName=tbText, Path = Text} Value=\"Yes\"/>\n                    <Setter Property=\"Background\" Value=\"Red\"/>\n                </DataTrigger>\n                <DataTrigger Binding={Binding ElementName=tbText, Path = Text} Value=\"No\"/>\n                    <Setter Property=\"Background\" Value=\"Blue\"/>\n                </DataTrigger>\n            </Style.Triggers>\n        </Style>\n    </StackPanel.Style>\n    <Button Content=\"123\"/>\n</StackPanel>\n```\n### EventTrigger\n```xml\n<StackPanel Background=\"Black\">\n    <StackPanel.Style>\n        <Style>\n            <Style.Triggers>\n                <EventTrigger RoutedEvent=\"Mouse.Enter\">\n                    <BeginStoryboard>\n                        <Storyboard>\n                            <ColorAnimation Storyboard.TargetProperty=\"Background.Color\" From=\"Black\" To=\"Transparent\" Duration=\"0:0:1\"/>\n                            </Storyboard>\n                        </BeginStoryboard>\n                </EventTrigger>\n                <EventTrigger RoutedEvent=\"Mouse.MouseLeave\">\n                    <BeginStoryboard>\n                        <Storyboard>\n                            <ColorAnimation Storyboard.TargetProperty=\"Background.Color\" From=\"Transparent\" To=\"Black\" Duration=\"0:0:1\"/>\n                            </Storyboard>\n                        </BeginStoryboard>\n                </EventTrigger>\n            </Style.Triggers>\n        </Style>\n    </StackPanel.Style>\n    <Button Content=\"123\"/>\n</StackPanel>\n```\n### Trigger\n```xml\n <TextBlock Text=\"Hello, styled world!\" FontSize=\"28\" HorizontalAlignment=\"Center\" VerticalAlignment=\"Center\">\n    <TextBlock.Style>\n        <Style TargetType=\"TextBlock\">\n            <Setter Property=\"Foreground\" Value=\"Blue\"></Setter>\n            <Style.Triggers>\n                <Trigger Property=\"IsMouseOver\" Value=\"True\">\n                    <Setter Property=\"Foreground\" Value=\"Red\" />\n                    <Setter Property=\"TextDecorations\" Value=\"Underline\" />\n                </Trigger>\n            </Style.Triggers>\n        </Style>\n    </TextBlock.Style>\n</TextBlock>\n```","source":"_posts/WPF-Trigger.md","raw":"---\ntitle: WPF Trigger\ncatalog: true\ncomments: true\ntags:\n  - WPF\nabbrlink: 36678\ncategories: uncategorized\ndate: 2021-02-17 14:33:04\n---\n## Trigger\n\n### DataTrigger\n```xml\n<TextBlock x:Name=\"tbText\"/>\n<StackPanel Background=\"Black\">\n    <StackPanel.Style>\n        <Style>\n            <Style.Triggers>\n                <DataTrigger Binding={Binding ElementName=tbText, Path = Text} Value=\"Yes\"/>\n                    <Setter Property=\"Background\" Value=\"Red\"/>\n                </DataTrigger>\n                <DataTrigger Binding={Binding ElementName=tbText, Path = Text} Value=\"No\"/>\n                    <Setter Property=\"Background\" Value=\"Blue\"/>\n                </DataTrigger>\n            </Style.Triggers>\n        </Style>\n    </StackPanel.Style>\n    <Button Content=\"123\"/>\n</StackPanel>\n```\n### EventTrigger\n```xml\n<StackPanel Background=\"Black\">\n    <StackPanel.Style>\n        <Style>\n            <Style.Triggers>\n                <EventTrigger RoutedEvent=\"Mouse.Enter\">\n                    <BeginStoryboard>\n                        <Storyboard>\n                            <ColorAnimation Storyboard.TargetProperty=\"Background.Color\" From=\"Black\" To=\"Transparent\" Duration=\"0:0:1\"/>\n                            </Storyboard>\n                        </BeginStoryboard>\n                </EventTrigger>\n                <EventTrigger RoutedEvent=\"Mouse.MouseLeave\">\n                    <BeginStoryboard>\n                        <Storyboard>\n                            <ColorAnimation Storyboard.TargetProperty=\"Background.Color\" From=\"Transparent\" To=\"Black\" Duration=\"0:0:1\"/>\n                            </Storyboard>\n                        </BeginStoryboard>\n                </EventTrigger>\n            </Style.Triggers>\n        </Style>\n    </StackPanel.Style>\n    <Button Content=\"123\"/>\n</StackPanel>\n```\n### Trigger\n```xml\n <TextBlock Text=\"Hello, styled world!\" FontSize=\"28\" HorizontalAlignment=\"Center\" VerticalAlignment=\"Center\">\n    <TextBlock.Style>\n        <Style TargetType=\"TextBlock\">\n            <Setter Property=\"Foreground\" Value=\"Blue\"></Setter>\n            <Style.Triggers>\n                <Trigger Property=\"IsMouseOver\" Value=\"True\">\n                    <Setter Property=\"Foreground\" Value=\"Red\" />\n                    <Setter Property=\"TextDecorations\" Value=\"Underline\" />\n                </Trigger>\n            </Style.Triggers>\n        </Style>\n    </TextBlock.Style>\n</TextBlock>\n```","slug":"WPF-Trigger","published":1,"updated":"2024-11-21T02:20:00.211Z","layout":"post","photos":[],"link":"","_id":"cm3xvfy8o003aewi940kc1ju3","content":"<h2><span id=\"trigger\">Trigger</span></h2>\n<h3><span id=\"datatrigger\">DataTrigger</span></h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">TextBlock</span> <span class=\"attr\">x:Name</span>=<span class=\"string\">\"tbText\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">StackPanel</span> <span class=\"attr\">Background</span>=<span class=\"string\">\"Black\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">StackPanel.Style</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">Style</span>&gt;</span></span><br><span class=\"line\"><span class=\"css\">            &lt;<span class=\"selector-tag\">Style</span><span class=\"selector-class\">.Triggers</span>&gt;</span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">DataTrigger</span> <span class=\"attr\">Binding</span>=<span class=\"string\">&#123;Binding</span> <span class=\"attr\">ElementName</span>=<span class=\"string\">tbText,</span> <span class=\"attr\">Path</span> = <span class=\"string\">Text&#125;</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"Yes\"</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                    <span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"Background\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"Red\"</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;/<span class=\"name\">DataTrigger</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">DataTrigger</span> <span class=\"attr\">Binding</span>=<span class=\"string\">&#123;Binding</span> <span class=\"attr\">ElementName</span>=<span class=\"string\">tbText,</span> <span class=\"attr\">Path</span> = <span class=\"string\">Text&#125;</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"No\"</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                    <span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"Background\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"Blue\"</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;/<span class=\"name\">DataTrigger</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;/<span class=\"name\">Style.Triggers</span>&gt;</span></span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">Style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">StackPanel.Style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">Content</span>=<span class=\"string\">\"123\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">StackPanel</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3><span id=\"eventtrigger\">EventTrigger</span></h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">StackPanel</span> <span class=\"attr\">Background</span>=<span class=\"string\">\"Black\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">StackPanel.Style</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">Style</span>&gt;</span></span><br><span class=\"line\"><span class=\"css\">            &lt;<span class=\"selector-tag\">Style</span><span class=\"selector-class\">.Triggers</span>&gt;</span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">EventTrigger</span> <span class=\"attr\">RoutedEvent</span>=<span class=\"string\">\"Mouse.Enter\"</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                    <span class=\"tag\">&lt;<span class=\"name\">BeginStoryboard</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                        <span class=\"tag\">&lt;<span class=\"name\">Storyboard</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                            <span class=\"tag\">&lt;<span class=\"name\">ColorAnimation</span> <span class=\"attr\">Storyboard.TargetProperty</span>=<span class=\"string\">\"Background.Color\"</span> <span class=\"attr\">From</span>=<span class=\"string\">\"Black\"</span> <span class=\"attr\">To</span>=<span class=\"string\">\"Transparent\"</span> <span class=\"attr\">Duration</span>=<span class=\"string\">\"0:0:1\"</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                            <span class=\"tag\">&lt;/<span class=\"name\">Storyboard</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                        <span class=\"tag\">&lt;/<span class=\"name\">BeginStoryboard</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;/<span class=\"name\">EventTrigger</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">EventTrigger</span> <span class=\"attr\">RoutedEvent</span>=<span class=\"string\">\"Mouse.MouseLeave\"</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                    <span class=\"tag\">&lt;<span class=\"name\">BeginStoryboard</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                        <span class=\"tag\">&lt;<span class=\"name\">Storyboard</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                            <span class=\"tag\">&lt;<span class=\"name\">ColorAnimation</span> <span class=\"attr\">Storyboard.TargetProperty</span>=<span class=\"string\">\"Background.Color\"</span> <span class=\"attr\">From</span>=<span class=\"string\">\"Transparent\"</span> <span class=\"attr\">To</span>=<span class=\"string\">\"Black\"</span> <span class=\"attr\">Duration</span>=<span class=\"string\">\"0:0:1\"</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                            <span class=\"tag\">&lt;/<span class=\"name\">Storyboard</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                        <span class=\"tag\">&lt;/<span class=\"name\">BeginStoryboard</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;/<span class=\"name\">EventTrigger</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;/<span class=\"name\">Style.Triggers</span>&gt;</span></span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">Style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">StackPanel.Style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">Content</span>=<span class=\"string\">\"123\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">StackPanel</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3><span id=\"trigger\">Trigger</span></h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">TextBlock</span> <span class=\"attr\">Text</span>=<span class=\"string\">\"Hello, styled world!\"</span> <span class=\"attr\">FontSize</span>=<span class=\"string\">\"28\"</span> <span class=\"attr\">HorizontalAlignment</span>=<span class=\"string\">\"Center\"</span> <span class=\"attr\">VerticalAlignment</span>=<span class=\"string\">\"Center\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">TextBlock.Style</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">Style</span> <span class=\"attr\">TargetType</span>=<span class=\"string\">\"TextBlock\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"Foreground\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"Blue\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Setter</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"css\">            &lt;<span class=\"selector-tag\">Style</span><span class=\"selector-class\">.Triggers</span>&gt;</span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">Trigger</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"IsMouseOver\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"True\"</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                    <span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"Foreground\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"Red\"</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                    <span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"TextDecorations\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"Underline\"</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;/<span class=\"name\">Trigger</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;/<span class=\"name\">Style.Triggers</span>&gt;</span></span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">Style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">TextBlock.Style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">TextBlock</span>&gt;</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h2>Trigger</h2>\n<h3>DataTrigger</h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">TextBlock</span> <span class=\"attr\">x:Name</span>=<span class=\"string\">\"tbText\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">StackPanel</span> <span class=\"attr\">Background</span>=<span class=\"string\">\"Black\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">StackPanel.Style</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">Style</span>&gt;</span></span><br><span class=\"line\"><span class=\"css\">            &lt;<span class=\"selector-tag\">Style</span><span class=\"selector-class\">.Triggers</span>&gt;</span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">DataTrigger</span> <span class=\"attr\">Binding</span>=<span class=\"string\">&#123;Binding</span> <span class=\"attr\">ElementName</span>=<span class=\"string\">tbText,</span> <span class=\"attr\">Path</span> = <span class=\"string\">Text&#125;</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"Yes\"</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                    <span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"Background\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"Red\"</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;/<span class=\"name\">DataTrigger</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">DataTrigger</span> <span class=\"attr\">Binding</span>=<span class=\"string\">&#123;Binding</span> <span class=\"attr\">ElementName</span>=<span class=\"string\">tbText,</span> <span class=\"attr\">Path</span> = <span class=\"string\">Text&#125;</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"No\"</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                    <span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"Background\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"Blue\"</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;/<span class=\"name\">DataTrigger</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;/<span class=\"name\">Style.Triggers</span>&gt;</span></span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">Style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">StackPanel.Style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">Content</span>=<span class=\"string\">\"123\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">StackPanel</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3>EventTrigger</h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">StackPanel</span> <span class=\"attr\">Background</span>=<span class=\"string\">\"Black\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">StackPanel.Style</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">Style</span>&gt;</span></span><br><span class=\"line\"><span class=\"css\">            &lt;<span class=\"selector-tag\">Style</span><span class=\"selector-class\">.Triggers</span>&gt;</span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">EventTrigger</span> <span class=\"attr\">RoutedEvent</span>=<span class=\"string\">\"Mouse.Enter\"</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                    <span class=\"tag\">&lt;<span class=\"name\">BeginStoryboard</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                        <span class=\"tag\">&lt;<span class=\"name\">Storyboard</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                            <span class=\"tag\">&lt;<span class=\"name\">ColorAnimation</span> <span class=\"attr\">Storyboard.TargetProperty</span>=<span class=\"string\">\"Background.Color\"</span> <span class=\"attr\">From</span>=<span class=\"string\">\"Black\"</span> <span class=\"attr\">To</span>=<span class=\"string\">\"Transparent\"</span> <span class=\"attr\">Duration</span>=<span class=\"string\">\"0:0:1\"</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                            <span class=\"tag\">&lt;/<span class=\"name\">Storyboard</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                        <span class=\"tag\">&lt;/<span class=\"name\">BeginStoryboard</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;/<span class=\"name\">EventTrigger</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">EventTrigger</span> <span class=\"attr\">RoutedEvent</span>=<span class=\"string\">\"Mouse.MouseLeave\"</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                    <span class=\"tag\">&lt;<span class=\"name\">BeginStoryboard</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                        <span class=\"tag\">&lt;<span class=\"name\">Storyboard</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                            <span class=\"tag\">&lt;<span class=\"name\">ColorAnimation</span> <span class=\"attr\">Storyboard.TargetProperty</span>=<span class=\"string\">\"Background.Color\"</span> <span class=\"attr\">From</span>=<span class=\"string\">\"Transparent\"</span> <span class=\"attr\">To</span>=<span class=\"string\">\"Black\"</span> <span class=\"attr\">Duration</span>=<span class=\"string\">\"0:0:1\"</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                            <span class=\"tag\">&lt;/<span class=\"name\">Storyboard</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                        <span class=\"tag\">&lt;/<span class=\"name\">BeginStoryboard</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;/<span class=\"name\">EventTrigger</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;/<span class=\"name\">Style.Triggers</span>&gt;</span></span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">Style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">StackPanel.Style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">Content</span>=<span class=\"string\">\"123\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">StackPanel</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3>Trigger</h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">TextBlock</span> <span class=\"attr\">Text</span>=<span class=\"string\">\"Hello, styled world!\"</span> <span class=\"attr\">FontSize</span>=<span class=\"string\">\"28\"</span> <span class=\"attr\">HorizontalAlignment</span>=<span class=\"string\">\"Center\"</span> <span class=\"attr\">VerticalAlignment</span>=<span class=\"string\">\"Center\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">TextBlock.Style</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">Style</span> <span class=\"attr\">TargetType</span>=<span class=\"string\">\"TextBlock\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"Foreground\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"Blue\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Setter</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"css\">            &lt;<span class=\"selector-tag\">Style</span><span class=\"selector-class\">.Triggers</span>&gt;</span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">Trigger</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"IsMouseOver\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"True\"</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                    <span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"Foreground\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"Red\"</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                    <span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"TextDecorations\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"Underline\"</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;/<span class=\"name\">Trigger</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;/<span class=\"name\">Style.Triggers</span>&gt;</span></span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">Style</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">TextBlock.Style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">TextBlock</span>&gt;</span></span><br></pre></td></tr></table></figure>"},{"title":"WPF TextBox浮水印","catalog":true,"abbrlink":"a3f6b311","date":"2020-07-02T10:16:17.000Z","subtitle":null,"header-img":null,"_content":"## Code\n```xml\n<TextBox>\n\t<TextBox.Style>\n\t\t<Style TargetType=\"TextBox\" xmlns:sys=\"clr-namespace:System;assembly=mscorlib\">\n\t\t\t<Style.Resources>\n\t\t\t\t<VisualBrush x:Key=\"CueBannerBrush\" AlignmentX=\"Left\" AlignmentY=\"Center\" Stretch=\"None\">\n\t\t\t\t\t<VisualBrush.Visual>\n\t\t\t\t\t\t<Label Content=\"浮水印顯示文字\" Foreground=\"LightGray\" />\n\t\t\t\t\t</VisualBrush.Visual>\n\t\t\t\t</VisualBrush>\n\t\t\t</Style.Resources>\n\t\t\t<Style.Triggers>\n\t\t\t\t<Trigger Property=\"Text\" Value=\"{x:Static sys:String.Empty}\">\n\t\t\t\t\t<Setter Property=\"Background\" Value=\"{StaticResource CueBannerBrush}\" />\n\t\t\t\t</Trigger>\n\t\t\t\t<Trigger Property=\"Text\" Value=\"{x:Null}\">\n\t\t\t\t\t<Setter Property=\"Background\" Value=\"{StaticResource CueBannerBrush}\" />\n\t\t\t\t</Trigger>\n\t\t\t\t<Trigger Property=\"IsKeyboardFocused\" Value=\"True\">\n\t\t\t\t\t<Setter Property=\"Background\" Value=\"White\" />\n\t\t\t\t</Trigger>\n\t\t\t</Style.Triggers>\n\t\t</Style>\n\t</TextBox.Style>\n</TextBox>\n```\n## 結果\n![Result](result.PNG)","source":"_posts/WPF-TextBox浮水印.md","raw":"---\ntitle: WPF TextBox浮水印\ncatalog: true\ntags:\n  - C#\n  - WPF\nabbrlink: a3f6b311\ncategories: uncategorized\ndate: 2020-07-02 18:16:17\nsubtitle:\nheader-img:\n---\n## Code\n```xml\n<TextBox>\n\t<TextBox.Style>\n\t\t<Style TargetType=\"TextBox\" xmlns:sys=\"clr-namespace:System;assembly=mscorlib\">\n\t\t\t<Style.Resources>\n\t\t\t\t<VisualBrush x:Key=\"CueBannerBrush\" AlignmentX=\"Left\" AlignmentY=\"Center\" Stretch=\"None\">\n\t\t\t\t\t<VisualBrush.Visual>\n\t\t\t\t\t\t<Label Content=\"浮水印顯示文字\" Foreground=\"LightGray\" />\n\t\t\t\t\t</VisualBrush.Visual>\n\t\t\t\t</VisualBrush>\n\t\t\t</Style.Resources>\n\t\t\t<Style.Triggers>\n\t\t\t\t<Trigger Property=\"Text\" Value=\"{x:Static sys:String.Empty}\">\n\t\t\t\t\t<Setter Property=\"Background\" Value=\"{StaticResource CueBannerBrush}\" />\n\t\t\t\t</Trigger>\n\t\t\t\t<Trigger Property=\"Text\" Value=\"{x:Null}\">\n\t\t\t\t\t<Setter Property=\"Background\" Value=\"{StaticResource CueBannerBrush}\" />\n\t\t\t\t</Trigger>\n\t\t\t\t<Trigger Property=\"IsKeyboardFocused\" Value=\"True\">\n\t\t\t\t\t<Setter Property=\"Background\" Value=\"White\" />\n\t\t\t\t</Trigger>\n\t\t\t</Style.Triggers>\n\t\t</Style>\n\t</TextBox.Style>\n</TextBox>\n```\n## 結果\n![Result](result.PNG)","slug":"WPF-TextBox浮水印","published":1,"updated":"2024-11-21T02:20:00.210Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cm3xvfy8p003dewi9ihpifvxm","content":"<h2><span id=\"code\">Code</span></h2>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">TextBox</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">TextBox.Style</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">Style</span> <span class=\"attr\">TargetType</span>=<span class=\"string\">\"TextBox\"</span> <span class=\"attr\">xmlns:sys</span>=<span class=\"string\">\"clr-namespace:System;assembly=mscorlib\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"css\">\t\t\t&lt;<span class=\"selector-tag\">Style</span><span class=\"selector-class\">.Resources</span>&gt;</span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">VisualBrush</span> <span class=\"attr\">x:Key</span>=<span class=\"string\">\"CueBannerBrush\"</span> <span class=\"attr\">AlignmentX</span>=<span class=\"string\">\"Left\"</span> <span class=\"attr\">AlignmentY</span>=<span class=\"string\">\"Center\"</span> <span class=\"attr\">Stretch</span>=<span class=\"string\">\"None\"</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"css\">\t\t\t\t\t&lt;<span class=\"selector-tag\">VisualBrush</span><span class=\"selector-class\">.Visual</span>&gt;</span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">Label</span> <span class=\"attr\">Content</span>=<span class=\"string\">\"浮水印顯示文字\"</span> <span class=\"attr\">Foreground</span>=<span class=\"string\">\"LightGray\"</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">VisualBrush.Visual</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">VisualBrush</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">Style.Resources</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"css\">\t\t\t&lt;<span class=\"selector-tag\">Style</span><span class=\"selector-class\">.Triggers</span>&gt;</span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">Trigger</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"Text\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"&#123;x:Static sys:String.Empty&#125;\"</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"Background\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"&#123;StaticResource CueBannerBrush&#125;\"</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">Trigger</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">Trigger</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"Text\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"&#123;x:Null&#125;\"</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"Background\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"&#123;StaticResource CueBannerBrush&#125;\"</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">Trigger</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">Trigger</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"IsKeyboardFocused\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"True\"</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"Background\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"White\"</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">Trigger</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">Style.Triggers</span>&gt;</span></span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">Style</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">TextBox.Style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">TextBox</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2><span id=\"結果\">結果</span></h2>\n<p><img src=\"result.PNG\" alt=\"Result\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h2>Code</h2>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">TextBox</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">TextBox.Style</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">Style</span> <span class=\"attr\">TargetType</span>=<span class=\"string\">\"TextBox\"</span> <span class=\"attr\">xmlns:sys</span>=<span class=\"string\">\"clr-namespace:System;assembly=mscorlib\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"css\">\t\t\t&lt;<span class=\"selector-tag\">Style</span><span class=\"selector-class\">.Resources</span>&gt;</span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">VisualBrush</span> <span class=\"attr\">x:Key</span>=<span class=\"string\">\"CueBannerBrush\"</span> <span class=\"attr\">AlignmentX</span>=<span class=\"string\">\"Left\"</span> <span class=\"attr\">AlignmentY</span>=<span class=\"string\">\"Center\"</span> <span class=\"attr\">Stretch</span>=<span class=\"string\">\"None\"</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"css\">\t\t\t\t\t&lt;<span class=\"selector-tag\">VisualBrush</span><span class=\"selector-class\">.Visual</span>&gt;</span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">Label</span> <span class=\"attr\">Content</span>=<span class=\"string\">\"浮水印顯示文字\"</span> <span class=\"attr\">Foreground</span>=<span class=\"string\">\"LightGray\"</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">VisualBrush.Visual</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">VisualBrush</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">Style.Resources</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"css\">\t\t\t&lt;<span class=\"selector-tag\">Style</span><span class=\"selector-class\">.Triggers</span>&gt;</span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">Trigger</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"Text\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"&#123;x:Static sys:String.Empty&#125;\"</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"Background\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"&#123;StaticResource CueBannerBrush&#125;\"</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">Trigger</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">Trigger</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"Text\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"&#123;x:Null&#125;\"</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"Background\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"&#123;StaticResource CueBannerBrush&#125;\"</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">Trigger</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">Trigger</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"IsKeyboardFocused\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"True\"</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"Background\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"White\"</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">Trigger</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">Style.Triggers</span>&gt;</span></span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">Style</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">TextBox.Style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">TextBox</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2>結果</h2>\n<p><img src=\"result.PNG\" alt=\"Result\"></p>\n"},{"title":"WPF Resource用法","catalog":true,"abbrlink":"16f5df77","date":"2020-07-02T12:38:21.000Z","subtitle":null,"header-img":null,"_content":"## Resource類型\n### Resource Property\n#### Style\n```xml\n<Window>\n\t<!-- 定義checkbox樣式 CheckBoxStyle-->\n\t<Window.Resources>\n\t\t<Style TargetType=\"{x:Type CheckBox}\" x:Key=\"CheckBoxStyle\">\n\t\t\t<Setter Property=\"Background\" Value=\"Red\"/>\n\t\t</Style>\n\t</Window.Resources>\n\t<!-- 套用樣式CheckBoxStyle -->\n\t<CheckBox IsChecked=\"{Binding Path=Data.Result}\" Style=\"{StaticResource CheckBoxStyle}\"/>\n</Window>\n```\n#### Template \n```xml\n<Window>\n\t<Windows.Resource>\n\t\t<!-- 定義DataTemplate service -->\n\t\t<Datatemplate x:key=\"service\">\n\t\t\t<Textbox Text=\"{Binding ServiceName}\"/>\n\t\t</Datatemplate>\n\t</Windows.Resource>\n\t<!-- Listbox Itemtamplate屬性 套用 service datatemplate -->\n\t<ListBox ItemTemplate=\"{StaticResource Service}\" itemsource=\"{binding DataSource}\"/>\n</Window>\n```\n#### 宣告靜態資源\n```xml\n<Window>\n\t<Windows.Resource>\n\t\t<!-- 在Resource 中宣告ViewModel Instance -->\n\t\t<local:ViewModel x:Key=\"MainData\">\n\t</Windows.Resource>\n\t<Grid DataContext=\"{Binding Source={StaticResource MainData}}\">\n\t\t<!-- .... -->\n\t</Grid>\n</Window>\n```\n### Global Resource\n#### App.Xaml\n\t把Resource寫到App.xaml,這樣專案下的所有元件都可以用\n\n### Resource Dinctionary\n#### Dictionary.xaml\n```xml\n<ResourceDictionary xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n                    xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n                    xmlns:local=\"clr-namespace:yourproject\">\n    \n</ResourceDictionary>\n```\n### Resource Dictionary","source":"_posts/WPF-元件Resource.md","raw":"---\ntitle: WPF Resource用法\ncatalog: true\ntags:\n  - C#\n  - WPF\n  - Resource\nabbrlink: 16f5df77\ncategories: uncategorized\ndate: 2020-07-02 20:38:21\nsubtitle:\nheader-img:\n---\n## Resource類型\n### Resource Property\n#### Style\n```xml\n<Window>\n\t<!-- 定義checkbox樣式 CheckBoxStyle-->\n\t<Window.Resources>\n\t\t<Style TargetType=\"{x:Type CheckBox}\" x:Key=\"CheckBoxStyle\">\n\t\t\t<Setter Property=\"Background\" Value=\"Red\"/>\n\t\t</Style>\n\t</Window.Resources>\n\t<!-- 套用樣式CheckBoxStyle -->\n\t<CheckBox IsChecked=\"{Binding Path=Data.Result}\" Style=\"{StaticResource CheckBoxStyle}\"/>\n</Window>\n```\n#### Template \n```xml\n<Window>\n\t<Windows.Resource>\n\t\t<!-- 定義DataTemplate service -->\n\t\t<Datatemplate x:key=\"service\">\n\t\t\t<Textbox Text=\"{Binding ServiceName}\"/>\n\t\t</Datatemplate>\n\t</Windows.Resource>\n\t<!-- Listbox Itemtamplate屬性 套用 service datatemplate -->\n\t<ListBox ItemTemplate=\"{StaticResource Service}\" itemsource=\"{binding DataSource}\"/>\n</Window>\n```\n#### 宣告靜態資源\n```xml\n<Window>\n\t<Windows.Resource>\n\t\t<!-- 在Resource 中宣告ViewModel Instance -->\n\t\t<local:ViewModel x:Key=\"MainData\">\n\t</Windows.Resource>\n\t<Grid DataContext=\"{Binding Source={StaticResource MainData}}\">\n\t\t<!-- .... -->\n\t</Grid>\n</Window>\n```\n### Global Resource\n#### App.Xaml\n\t把Resource寫到App.xaml,這樣專案下的所有元件都可以用\n\n### Resource Dinctionary\n#### Dictionary.xaml\n```xml\n<ResourceDictionary xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n                    xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n                    xmlns:local=\"clr-namespace:yourproject\">\n    \n</ResourceDictionary>\n```\n### Resource Dictionary","slug":"WPF-元件Resource","published":1,"updated":"2024-11-21T02:20:00.212Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cm3xvfy8q003hewi9hfts0qx3","content":"<h2><span id=\"resource類型\">Resource類型</span></h2>\n<h3><span id=\"resource-property\">Resource Property</span></h3>\n<h4><span id=\"style\">Style</span></h4>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Window</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"comment\">&lt;!-- 定義checkbox樣式 CheckBoxStyle--&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">Window.Resources</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">Style</span> <span class=\"attr\">TargetType</span>=<span class=\"string\">\"&#123;x:Type CheckBox&#125;\"</span> <span class=\"attr\">x:Key</span>=<span class=\"string\">\"CheckBoxStyle\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"Background\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"Red\"</span>/&gt;</span></span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">Style</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">Window.Resources</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"comment\">&lt;!-- 套用樣式CheckBoxStyle --&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">CheckBox</span> <span class=\"attr\">IsChecked</span>=<span class=\"string\">\"&#123;Binding Path=Data.Result&#125;\"</span> <span class=\"attr\">Style</span>=<span class=\"string\">\"&#123;StaticResource CheckBoxStyle&#125;\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Window</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4><span id=\"template\">Template</span></h4>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Window</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">Windows.Resource</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"comment\">&lt;!-- 定義DataTemplate service --&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">Datatemplate</span> <span class=\"attr\">x:key</span>=<span class=\"string\">\"service\"</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">Textbox</span> <span class=\"attr\">Text</span>=<span class=\"string\">\"&#123;Binding ServiceName&#125;\"</span>/&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">Datatemplate</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">Windows.Resource</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"comment\">&lt;!-- Listbox Itemtamplate屬性 套用 service datatemplate --&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">ListBox</span> <span class=\"attr\">ItemTemplate</span>=<span class=\"string\">\"&#123;StaticResource Service&#125;\"</span> <span class=\"attr\">itemsource</span>=<span class=\"string\">\"&#123;binding DataSource&#125;\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Window</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4><span id=\"宣告靜態資源\">宣告靜態資源</span></h4>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Window</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">Windows.Resource</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"comment\">&lt;!-- 在Resource 中宣告ViewModel Instance --&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">local:ViewModel</span> <span class=\"attr\">x:Key</span>=<span class=\"string\">\"MainData\"</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">Windows.Resource</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">Grid</span> <span class=\"attr\">DataContext</span>=<span class=\"string\">\"&#123;Binding Source=&#123;StaticResource MainData&#125;&#125;\"</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"comment\">&lt;!-- .... --&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">Grid</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Window</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3><span id=\"global-resource\">Global Resource</span></h3>\n<h4><span id=\"appxaml\">App.Xaml</span></h4>\n<pre><code>把Resource寫到App.xaml,這樣專案下的所有元件都可以用\n</code></pre>\n<h3><span id=\"resource-dinctionary\">Resource Dinctionary</span></h3>\n<h4><span id=\"dictionaryxaml\">Dictionary.xaml</span></h4>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ResourceDictionary</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                    <span class=\"attr\">xmlns:x</span>=<span class=\"string\">\"http://schemas.microsoft.com/winfx/2006/xaml\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                    <span class=\"attr\">xmlns:local</span>=<span class=\"string\">\"clr-namespace:yourproject\"</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ResourceDictionary</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3><span id=\"resource-dictionary\">Resource Dictionary</span></h3>\n","site":{"data":{}},"excerpt":"","more":"<h2>Resource類型</h2>\n<h3>Resource Property</h3>\n<h4>Style</h4>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Window</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"comment\">&lt;!-- 定義checkbox樣式 CheckBoxStyle--&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">Window.Resources</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">Style</span> <span class=\"attr\">TargetType</span>=<span class=\"string\">\"&#123;x:Type CheckBox&#125;\"</span> <span class=\"attr\">x:Key</span>=<span class=\"string\">\"CheckBoxStyle\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"Background\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"Red\"</span>/&gt;</span></span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">Style</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">Window.Resources</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"comment\">&lt;!-- 套用樣式CheckBoxStyle --&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">CheckBox</span> <span class=\"attr\">IsChecked</span>=<span class=\"string\">\"&#123;Binding Path=Data.Result&#125;\"</span> <span class=\"attr\">Style</span>=<span class=\"string\">\"&#123;StaticResource CheckBoxStyle&#125;\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Window</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4>Template</h4>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Window</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">Windows.Resource</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"comment\">&lt;!-- 定義DataTemplate service --&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">Datatemplate</span> <span class=\"attr\">x:key</span>=<span class=\"string\">\"service\"</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">Textbox</span> <span class=\"attr\">Text</span>=<span class=\"string\">\"&#123;Binding ServiceName&#125;\"</span>/&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">Datatemplate</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">Windows.Resource</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"comment\">&lt;!-- Listbox Itemtamplate屬性 套用 service datatemplate --&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">ListBox</span> <span class=\"attr\">ItemTemplate</span>=<span class=\"string\">\"&#123;StaticResource Service&#125;\"</span> <span class=\"attr\">itemsource</span>=<span class=\"string\">\"&#123;binding DataSource&#125;\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Window</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4>宣告靜態資源</h4>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Window</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">Windows.Resource</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"comment\">&lt;!-- 在Resource 中宣告ViewModel Instance --&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">local:ViewModel</span> <span class=\"attr\">x:Key</span>=<span class=\"string\">\"MainData\"</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">Windows.Resource</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">Grid</span> <span class=\"attr\">DataContext</span>=<span class=\"string\">\"&#123;Binding Source=&#123;StaticResource MainData&#125;&#125;\"</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"comment\">&lt;!-- .... --&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">Grid</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Window</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3>Global Resource</h3>\n<h4>App.Xaml</h4>\n<pre><code>把Resource寫到App.xaml,這樣專案下的所有元件都可以用\n</code></pre>\n<h3>Resource Dinctionary</h3>\n<h4>Dictionary.xaml</h4>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ResourceDictionary</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                    <span class=\"attr\">xmlns:x</span>=<span class=\"string\">\"http://schemas.microsoft.com/winfx/2006/xaml\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                    <span class=\"attr\">xmlns:local</span>=<span class=\"string\">\"clr-namespace:yourproject\"</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ResourceDictionary</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3>Resource Dictionary</h3>\n"},{"title":"WPF 套用Metro樣式","catalog":true,"abbrlink":"c3a3a6d2","date":"2020-07-02T11:16:16.000Z","subtitle":null,"header-img":null,"_content":"\n#### Nuget安裝MahApps相關套件\n```xml\nMahApps.Metro.IconPacks\nMahApps.Metro.Metro\nMahApps.Metro.Resources\n```\n### 主程式(MainWindow.xaml)套用MahApp樣式\n#### Xaml\n```xml\nxmlns:Controls=\"clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro\"\n```\n#### CodeBehind\n###### **WindowName:MetroWindow**\n```csharp\nusing MahApps.Metro.Controls;\n\npublic partial class WindowName:MetroWindow\n```\n### 調整App.xaml\n加入樣式\n``` xml\n<ResourceDictionary>\n    <ResourceDictionary.MergedDictionaries>\n        <ResourceDictionary Source=\"pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml\" />\n        <<ResourceDictionary Source=\"pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml\" />\n        <<<ResourceDictionary Source=\"pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml\" />\n        <<<ResourceDictionary Source=\"pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml\" />\n        <<<ResourceDictionary Source=\"pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml\" />\n    <</ResourceDictionary.MergedDictionaries>\n</ResourceDictionary>\n```\n### 結果\n![Mahapps](Mahapps.PNG)","source":"_posts/WPF-套用Metro樣式.md","raw":"---\ntitle: WPF 套用Metro樣式\ncatalog: true\ntags:\n  - C#\n  - WPF\n  - MahApps\n  - Metro Style\nabbrlink: c3a3a6d2\ncategories: uncategorized\ndate: 2020-07-02 19:16:16\nsubtitle:\nheader-img:\n---\n\n#### Nuget安裝MahApps相關套件\n```xml\nMahApps.Metro.IconPacks\nMahApps.Metro.Metro\nMahApps.Metro.Resources\n```\n### 主程式(MainWindow.xaml)套用MahApp樣式\n#### Xaml\n```xml\nxmlns:Controls=\"clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro\"\n```\n#### CodeBehind\n###### **WindowName:MetroWindow**\n```csharp\nusing MahApps.Metro.Controls;\n\npublic partial class WindowName:MetroWindow\n```\n### 調整App.xaml\n加入樣式\n``` xml\n<ResourceDictionary>\n    <ResourceDictionary.MergedDictionaries>\n        <ResourceDictionary Source=\"pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml\" />\n        <<ResourceDictionary Source=\"pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml\" />\n        <<<ResourceDictionary Source=\"pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml\" />\n        <<<ResourceDictionary Source=\"pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml\" />\n        <<<ResourceDictionary Source=\"pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml\" />\n    <</ResourceDictionary.MergedDictionaries>\n</ResourceDictionary>\n```\n### 結果\n![Mahapps](Mahapps.PNG)","slug":"WPF-套用Metro樣式","published":1,"updated":"2024-11-21T02:20:00.212Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cm3xvfy8r003kewi9tdqdj4gs","content":"<h4><span id=\"nuget安裝mahapps相關套件\">Nuget安裝MahApps相關套件</span></h4>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MahApps.Metro.IconPacks</span><br><span class=\"line\">MahApps.Metro.Metro</span><br><span class=\"line\">MahApps.Metro.Resources</span><br></pre></td></tr></table></figure>\n<h3><span id=\"主程式mainwindowxaml套用mahapp樣式\">主程式(MainWindow.xaml)套用MahApp樣式</span></h3>\n<h4><span id=\"xaml\">Xaml</span></h4>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xmlns:Controls=\"clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro\"</span><br></pre></td></tr></table></figure>\n<h4><span id=\"codebehind\">CodeBehind</span></h4>\n<h6><span id=\"windownamemetrowindow\"><strong>WindowName:MetroWindow</strong></span></h6>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> MahApps.Metro.Controls;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">partial</span> <span class=\"keyword\">class</span> <span class=\"title\">WindowName</span>:<span class=\"title\">MetroWindow</span></span><br></pre></td></tr></table></figure>\n<h3><span id=\"調整appxaml\">調整App.xaml</span></h3>\n<p>加入樣式</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ResourceDictionary</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ResourceDictionary.MergedDictionaries</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">ResourceDictionary</span> <span class=\"attr\">Source</span>=<span class=\"string\">\"pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml\"</span> /&gt;</span></span><br><span class=\"line\">        &lt;&lt;ResourceDictionary Source=\"pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml\" /&gt;</span><br><span class=\"line\">        &lt;&lt;&lt;ResourceDictionary Source=\"pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml\" /&gt;</span><br><span class=\"line\">        &lt;&lt;&lt;ResourceDictionary Source=\"pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml\" /&gt;</span><br><span class=\"line\">        &lt;&lt;&lt;ResourceDictionary Source=\"pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml\" /&gt;</span><br><span class=\"line\">    &lt;&lt;/ResourceDictionary.MergedDictionaries&gt;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ResourceDictionary</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3><span id=\"結果\">結果</span></h3>\n<p><img src=\"Mahapps.PNG\" alt=\"Mahapps\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h4>Nuget安裝MahApps相關套件</h4>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MahApps.Metro.IconPacks</span><br><span class=\"line\">MahApps.Metro.Metro</span><br><span class=\"line\">MahApps.Metro.Resources</span><br></pre></td></tr></table></figure>\n<h3>主程式(MainWindow.xaml)套用MahApp樣式</h3>\n<h4>Xaml</h4>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xmlns:Controls=\"clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro\"</span><br></pre></td></tr></table></figure>\n<h4>CodeBehind</h4>\n<h6><strong>WindowName:MetroWindow</strong></h6>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> MahApps.Metro.Controls;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">partial</span> <span class=\"keyword\">class</span> <span class=\"title\">WindowName</span>:<span class=\"title\">MetroWindow</span></span><br></pre></td></tr></table></figure>\n<h3>調整App.xaml</h3>\n<p>加入樣式</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ResourceDictionary</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ResourceDictionary.MergedDictionaries</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">ResourceDictionary</span> <span class=\"attr\">Source</span>=<span class=\"string\">\"pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml\"</span> /&gt;</span></span><br><span class=\"line\">        &lt;&lt;ResourceDictionary Source=\"pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml\" /&gt;</span><br><span class=\"line\">        &lt;&lt;&lt;ResourceDictionary Source=\"pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml\" /&gt;</span><br><span class=\"line\">        &lt;&lt;&lt;ResourceDictionary Source=\"pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml\" /&gt;</span><br><span class=\"line\">        &lt;&lt;&lt;ResourceDictionary Source=\"pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml\" /&gt;</span><br><span class=\"line\">    &lt;&lt;/ResourceDictionary.MergedDictionaries&gt;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ResourceDictionary</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3>結果</h3>\n<p><img src=\"Mahapps.PNG\" alt=\"Mahapps\"></p>\n"},{"title":"WPF 漸層背景顏色","catalog":true,"abbrlink":"652c0bd9","date":"2020-07-02T10:14:45.000Z","subtitle":null,"header-img":null,"_content":"```Xml\n<Style TargetType=\"{x:Type ToggleButton}\" x:Key=\"TogCommon\">\n\t<Setter Property=\"Template\">\n\t\t<Setter.Value>\n\t\t\t<ControlTemplate TargetType=\"ToggleButton\">\n\t\t\t\t<Border BorderBrush=\"{TemplateBinding BorderBrush}\" Background=\"{TemplateBinding Background}\"/>\n\t\t\t</ControlTemplate>\n\t\t</Setter.Value>\n\t</Setter>\n\t<Style.Triggers>\n\t\t<Trigger Property=\"IsChecked\" Value=\"True\">\n\t\t\t<Setter Property=\"Background\" Value=\"Red\" />\n\t\t</Trigger>\n\t\t<Trigger Property=\"IsChecked\" Value=\"False\">\n\t\t\t<Setter Property=\"Background\" Value=\"Green\" />\n\t\t</Trigger>\n\t</Style.Triggers>\n\t <Style.Triggers>\n\t\t<Trigger Property=\"IsChecked\" Value=\"True\">\n\t\t\t<Setter Property=\"Background\">\n\t\t\t\t<Setter.Value>\n\t\t\t\t\t<LinearGradientBrush  StartPoint=\"0,0\" EndPoint=\"0,1\">\n\t\t\t\t\t\t<GradientStop Color=\"#00A000\" Offset=\"0\"/>\n\t\t\t\t\t\t<GradientStop Color=\"#00AF00\" Offset=\"0.445\"/>\n\t\t\t\t\t\t<GradientStop Color=\"#00A000\" Offset=\"0.53\"/>\n\t\t\t\t\t</LinearGradientBrush>\n\t\t\t\t</Setter.Value>\n\t\t\t</Setter>\n\t\t\t<Setter Property=\"Foreground\" Value=\"White\"/>\n\t\t\t<Setter Property=\"Content\" Value=\"以上\"/>\n\t\t</Trigger>\n\t\t<Trigger Property=\"IsChecked\" Value=\"False\">\n\t\t\t<Setter Property=\"Background\">\n\t\t\t\t<Setter.Value>\n\t\t\t\t\t<LinearGradientBrush  StartPoint=\"0,0\" EndPoint=\"0,1\">\n\t\t\t\t\t\t<GradientStop Color=\"#FF0000\" Offset=\"0\"/>\n\t\t\t\t\t\t<GradientStop Color=\"#EA0000\" Offset=\"0.445\"/>\n\t\t\t\t\t\t<GradientStop Color=\"#CE0000\" Offset=\"0.53\"/>\n\t\t\t\t\t</LinearGradientBrush>\n\t\t\t\t</Setter.Value>\n\t\t\t</Setter>\n\t\t\t<Setter Property=\"Foreground\" Value=\"White\"/>\n\t\t\t<Setter Property=\"Content\" Value=\"以下\"/>\n\t\t</Trigger>\n\t</Style.Triggers>\n</Style>\n```","source":"_posts/WPF-漸層背景顏色.md","raw":"---\ntitle: WPF 漸層背景顏色\ncatalog: true\ntags:\n  - C#\n  - WPF\nabbrlink: 652c0bd9\ncategories: uncategorized\ndate: 2020-07-02 18:14:45\nsubtitle:\nheader-img:\n---\n```Xml\n<Style TargetType=\"{x:Type ToggleButton}\" x:Key=\"TogCommon\">\n\t<Setter Property=\"Template\">\n\t\t<Setter.Value>\n\t\t\t<ControlTemplate TargetType=\"ToggleButton\">\n\t\t\t\t<Border BorderBrush=\"{TemplateBinding BorderBrush}\" Background=\"{TemplateBinding Background}\"/>\n\t\t\t</ControlTemplate>\n\t\t</Setter.Value>\n\t</Setter>\n\t<Style.Triggers>\n\t\t<Trigger Property=\"IsChecked\" Value=\"True\">\n\t\t\t<Setter Property=\"Background\" Value=\"Red\" />\n\t\t</Trigger>\n\t\t<Trigger Property=\"IsChecked\" Value=\"False\">\n\t\t\t<Setter Property=\"Background\" Value=\"Green\" />\n\t\t</Trigger>\n\t</Style.Triggers>\n\t <Style.Triggers>\n\t\t<Trigger Property=\"IsChecked\" Value=\"True\">\n\t\t\t<Setter Property=\"Background\">\n\t\t\t\t<Setter.Value>\n\t\t\t\t\t<LinearGradientBrush  StartPoint=\"0,0\" EndPoint=\"0,1\">\n\t\t\t\t\t\t<GradientStop Color=\"#00A000\" Offset=\"0\"/>\n\t\t\t\t\t\t<GradientStop Color=\"#00AF00\" Offset=\"0.445\"/>\n\t\t\t\t\t\t<GradientStop Color=\"#00A000\" Offset=\"0.53\"/>\n\t\t\t\t\t</LinearGradientBrush>\n\t\t\t\t</Setter.Value>\n\t\t\t</Setter>\n\t\t\t<Setter Property=\"Foreground\" Value=\"White\"/>\n\t\t\t<Setter Property=\"Content\" Value=\"以上\"/>\n\t\t</Trigger>\n\t\t<Trigger Property=\"IsChecked\" Value=\"False\">\n\t\t\t<Setter Property=\"Background\">\n\t\t\t\t<Setter.Value>\n\t\t\t\t\t<LinearGradientBrush  StartPoint=\"0,0\" EndPoint=\"0,1\">\n\t\t\t\t\t\t<GradientStop Color=\"#FF0000\" Offset=\"0\"/>\n\t\t\t\t\t\t<GradientStop Color=\"#EA0000\" Offset=\"0.445\"/>\n\t\t\t\t\t\t<GradientStop Color=\"#CE0000\" Offset=\"0.53\"/>\n\t\t\t\t\t</LinearGradientBrush>\n\t\t\t\t</Setter.Value>\n\t\t\t</Setter>\n\t\t\t<Setter Property=\"Foreground\" Value=\"White\"/>\n\t\t\t<Setter Property=\"Content\" Value=\"以下\"/>\n\t\t</Trigger>\n\t</Style.Triggers>\n</Style>\n```","slug":"WPF-漸層背景顏色","published":1,"updated":"2024-11-21T02:20:00.215Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cm3xvfy8t003oewi9mdthgvef","content":"<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Style</span> <span class=\"attr\">TargetType</span>=<span class=\"string\">\"&#123;x:Type ToggleButton&#125;\"</span> <span class=\"attr\">x:Key</span>=<span class=\"string\">\"TogCommon\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"xml\">\t<span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"Template\"</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"css\">\t\t&lt;<span class=\"selector-tag\">Setter</span><span class=\"selector-class\">.Value</span>&gt;</span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">ControlTemplate</span> <span class=\"attr\">TargetType</span>=<span class=\"string\">\"ToggleButton\"</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">Border</span> <span class=\"attr\">BorderBrush</span>=<span class=\"string\">\"&#123;TemplateBinding BorderBrush&#125;\"</span> <span class=\"attr\">Background</span>=<span class=\"string\">\"&#123;TemplateBinding Background&#125;\"</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">ControlTemplate</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">Setter.Value</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t<span class=\"tag\">&lt;/<span class=\"name\">Setter</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"css\">\t&lt;<span class=\"selector-tag\">Style</span><span class=\"selector-class\">.Triggers</span>&gt;</span></span><br><span class=\"line\"><span class=\"xml\">\t\t<span class=\"tag\">&lt;<span class=\"name\">Trigger</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"IsChecked\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"True\"</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"Background\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"Red\"</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">Trigger</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t<span class=\"tag\">&lt;<span class=\"name\">Trigger</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"IsChecked\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"False\"</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"Background\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"Green\"</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">Trigger</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t<span class=\"tag\">&lt;/<span class=\"name\">Style.Triggers</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"css\">\t &lt;<span class=\"selector-tag\">Style</span><span class=\"selector-class\">.Triggers</span>&gt;</span></span><br><span class=\"line\"><span class=\"xml\">\t\t<span class=\"tag\">&lt;<span class=\"name\">Trigger</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"IsChecked\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"True\"</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"Background\"</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"css\">\t\t\t\t&lt;<span class=\"selector-tag\">Setter</span><span class=\"selector-class\">.Value</span>&gt;</span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">LinearGradientBrush</span>  <span class=\"attr\">StartPoint</span>=<span class=\"string\">\"0,0\"</span> <span class=\"attr\">EndPoint</span>=<span class=\"string\">\"0,1\"</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">GradientStop</span> <span class=\"attr\">Color</span>=<span class=\"string\">\"#00A000\"</span> <span class=\"attr\">Offset</span>=<span class=\"string\">\"0\"</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">GradientStop</span> <span class=\"attr\">Color</span>=<span class=\"string\">\"#00AF00\"</span> <span class=\"attr\">Offset</span>=<span class=\"string\">\"0.445\"</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">GradientStop</span> <span class=\"attr\">Color</span>=<span class=\"string\">\"#00A000\"</span> <span class=\"attr\">Offset</span>=<span class=\"string\">\"0.53\"</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">LinearGradientBrush</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">Setter.Value</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">Setter</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"Foreground\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"White\"</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"Content\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"以上\"</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">Trigger</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t<span class=\"tag\">&lt;<span class=\"name\">Trigger</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"IsChecked\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"False\"</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"Background\"</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"css\">\t\t\t\t&lt;<span class=\"selector-tag\">Setter</span><span class=\"selector-class\">.Value</span>&gt;</span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">LinearGradientBrush</span>  <span class=\"attr\">StartPoint</span>=<span class=\"string\">\"0,0\"</span> <span class=\"attr\">EndPoint</span>=<span class=\"string\">\"0,1\"</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">GradientStop</span> <span class=\"attr\">Color</span>=<span class=\"string\">\"#FF0000\"</span> <span class=\"attr\">Offset</span>=<span class=\"string\">\"0\"</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">GradientStop</span> <span class=\"attr\">Color</span>=<span class=\"string\">\"#EA0000\"</span> <span class=\"attr\">Offset</span>=<span class=\"string\">\"0.445\"</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">GradientStop</span> <span class=\"attr\">Color</span>=<span class=\"string\">\"#CE0000\"</span> <span class=\"attr\">Offset</span>=<span class=\"string\">\"0.53\"</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">LinearGradientBrush</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">Setter.Value</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">Setter</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"Foreground\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"White\"</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"Content\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"以下\"</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">Trigger</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t<span class=\"tag\">&lt;/<span class=\"name\">Style.Triggers</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Style</span>&gt;</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Style</span> <span class=\"attr\">TargetType</span>=<span class=\"string\">\"&#123;x:Type ToggleButton&#125;\"</span> <span class=\"attr\">x:Key</span>=<span class=\"string\">\"TogCommon\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"xml\">\t<span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"Template\"</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"css\">\t\t&lt;<span class=\"selector-tag\">Setter</span><span class=\"selector-class\">.Value</span>&gt;</span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">ControlTemplate</span> <span class=\"attr\">TargetType</span>=<span class=\"string\">\"ToggleButton\"</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">Border</span> <span class=\"attr\">BorderBrush</span>=<span class=\"string\">\"&#123;TemplateBinding BorderBrush&#125;\"</span> <span class=\"attr\">Background</span>=<span class=\"string\">\"&#123;TemplateBinding Background&#125;\"</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">ControlTemplate</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">Setter.Value</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t<span class=\"tag\">&lt;/<span class=\"name\">Setter</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"css\">\t&lt;<span class=\"selector-tag\">Style</span><span class=\"selector-class\">.Triggers</span>&gt;</span></span><br><span class=\"line\"><span class=\"xml\">\t\t<span class=\"tag\">&lt;<span class=\"name\">Trigger</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"IsChecked\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"True\"</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"Background\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"Red\"</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">Trigger</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t<span class=\"tag\">&lt;<span class=\"name\">Trigger</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"IsChecked\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"False\"</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"Background\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"Green\"</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">Trigger</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t<span class=\"tag\">&lt;/<span class=\"name\">Style.Triggers</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"css\">\t &lt;<span class=\"selector-tag\">Style</span><span class=\"selector-class\">.Triggers</span>&gt;</span></span><br><span class=\"line\"><span class=\"xml\">\t\t<span class=\"tag\">&lt;<span class=\"name\">Trigger</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"IsChecked\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"True\"</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"Background\"</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"css\">\t\t\t\t&lt;<span class=\"selector-tag\">Setter</span><span class=\"selector-class\">.Value</span>&gt;</span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">LinearGradientBrush</span>  <span class=\"attr\">StartPoint</span>=<span class=\"string\">\"0,0\"</span> <span class=\"attr\">EndPoint</span>=<span class=\"string\">\"0,1\"</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">GradientStop</span> <span class=\"attr\">Color</span>=<span class=\"string\">\"#00A000\"</span> <span class=\"attr\">Offset</span>=<span class=\"string\">\"0\"</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">GradientStop</span> <span class=\"attr\">Color</span>=<span class=\"string\">\"#00AF00\"</span> <span class=\"attr\">Offset</span>=<span class=\"string\">\"0.445\"</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">GradientStop</span> <span class=\"attr\">Color</span>=<span class=\"string\">\"#00A000\"</span> <span class=\"attr\">Offset</span>=<span class=\"string\">\"0.53\"</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">LinearGradientBrush</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">Setter.Value</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">Setter</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"Foreground\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"White\"</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"Content\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"以上\"</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">Trigger</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t<span class=\"tag\">&lt;<span class=\"name\">Trigger</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"IsChecked\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"False\"</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"Background\"</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"css\">\t\t\t\t&lt;<span class=\"selector-tag\">Setter</span><span class=\"selector-class\">.Value</span>&gt;</span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">LinearGradientBrush</span>  <span class=\"attr\">StartPoint</span>=<span class=\"string\">\"0,0\"</span> <span class=\"attr\">EndPoint</span>=<span class=\"string\">\"0,1\"</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">GradientStop</span> <span class=\"attr\">Color</span>=<span class=\"string\">\"#FF0000\"</span> <span class=\"attr\">Offset</span>=<span class=\"string\">\"0\"</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">GradientStop</span> <span class=\"attr\">Color</span>=<span class=\"string\">\"#EA0000\"</span> <span class=\"attr\">Offset</span>=<span class=\"string\">\"0.445\"</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">GradientStop</span> <span class=\"attr\">Color</span>=<span class=\"string\">\"#CE0000\"</span> <span class=\"attr\">Offset</span>=<span class=\"string\">\"0.53\"</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">LinearGradientBrush</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">Setter.Value</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">Setter</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"Foreground\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"White\"</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"Content\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"以下\"</span>/&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">Trigger</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">\t<span class=\"tag\">&lt;/<span class=\"name\">Style.Triggers</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Style</span>&gt;</span></span><br></pre></td></tr></table></figure>"},{"title":"WPF 綁定自訂元件屬性","catalog":true,"comments":1,"abbrlink":40650,"date":"2021-02-19T08:03:40.000Z","_content":"\n## 綁定自訂元件屬性\n\n這個問題是發生在有一次我要把公司舊的程式改成MVVM的設計，在將ViewModel綁定到一個我們自己做的元件上的依賴屬性上時發現綁定成功了，但是ViewModel值發生異動時，那個自訂的元件的畫面卻沒有更新\n\n\n### 自訂元件\n那顆自訂元件大概長這樣，我們先叫他LeoBlock，LeoBlock有一個TextBlcok跟一個按鈕，主要功能是在按按鈕的時候TextBlcok會顯示最新的值\n\n##### Xaml\n```XML\n<UserControl x:Class=\"WPFPractice0219.LeoBlock\"\n             xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n             xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\" \n             xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\" \n             xmlns:local=\"clr-namespace:WPFPractice0219\"\n             mc:Ignorable=\"d\" \n             d:DesignHeight=\"450\" d:DesignWidth=\"800\" x:Name=\"ucMain\">\n    <StackPanel Orientation=\"Horizontal\">\n        <TextBlock x:Name=\"tb\" Text=\"{Binding LeoText, ElementName=ucMain}\"/>\n        <Button Content=\"Test\" Click=\"Button_Click\"/>\n    </StackPanel>\n</UserControl>\n```\n\n##### Code Behind\nLeoBlock裡面有一個依賴屬性 - LeoText，這個屬性當初是設計來給其他地方存取的\n```c sharp\npublic partial class LeoBlock : UserControl\n{\n    public LeoBlock()\n    {\n        InitializeComponent();\n        this.DataContext = new LeoBlockViewModel();\n    }\n\n\n    public string LeoText\n    {\n        get { return (string)GetValue(LeoTextProperty); }\n        set { SetValue(LeoTextProperty, value); }\n    }\n\n    DependencyProperty.Register(\"LeoText\", typeof(string), typeof(LeoBlock), new PropertyMetadata(\"Default\"));\n\n    private void Button_Click(object sender, RoutedEventArgs e)\n    {\n        \n    }\n}\n```\n### 主視窗(MainWindow)\nLeoBlcok被用在MainWindow中，其中的LeoText屬性被綁定在ViewModel中的ContentText屬性上\n\n原本我以為這樣LeoBlock的LeoText這樣就會綁定成功了，沒想到不是像我想的一樣\n\nLeoBlock顯示的是依賴屬性LeoText的預設值(Default)，而不是主視窗中ViewModel的ContentText屬性(ViewModel Default Value)\n##### MainWindow\n```xml\n<Window x:Class=\"WPFPractice0219.MainWindow\"\n        xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n        xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n        xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\"\n        xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\n        xmlns:local=\"clr-namespace:WPFPractice0219\"\n        xmlns:i=\"clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity\"\n        xmlns:jwb=\"clr-namespace:Jepun.Win.Base;assembly=Jepun.Win.Base\"\n        mc:Ignorable=\"d\"\n        Title=\"MainWindow\" Height=\"450\" Width=\"800\" x:Name=\"mainWindow\">\n    <StackPanel Orientation=\"Vertical\">\n        <Button Content=\"Update\" Command=\"{Binding ButtonClickCommand}\"/>\n        <local:LeoBlock LeoText=\"{Binding ContentText\"/>\n    </StackPanel>\n</Window>\n```\n\n##### MainWindow.xaml.cs\n```csharp\npublic partial class MainWindow : Window\n{\n    INotifyPropertyChanged main = null;\n    public MainWindow()\n    {\n        InitializeComponent();\n        IKernel Container = new StandardKernel();\n        Container.Bind<INotifyPropertyChanged>().To<MainViewModel>();\n        main = Container.Get<MainViewModel>();\n        this.DataContext = main;\n    }\n\n    private void DatePicker_DateChanged(object sender, System.EventArgs e)\n    {\n        \n    }\n}\n```\n\n##### MainViewModel\n``` c sharp\npublic class MainViewModel:ViewModelBase\n{\n    private string _ContentText = \"ViewModel Default Value\";\n    \n    public string ContentText\n    {\n        get\n        {\n            return _ContentText;\n        }\n        set\n        {\n            _ContentText = value;\n            OnPropertyChanged();\n        }\n    }\n}\n```\n\n### 解決方法\n在主視窗綁定依賴屬性(LeoText)到ViewModel時改成這樣寫 : Binding DataContext.ContentText\n``` xml\n<StackPanel Orientation=\"Vertical\">\n    <Button Content=\"Update\" Command=\"{Binding ButtonClickCommand}\"/>\n    <local:LeoBlock LeoText=\"{Binding DataContext.ContentText, ElementName=mainWindow}\"/>\n</StackPanel>\n```","source":"_posts/WPF-綁定自訂元件屬性.md","raw":"---\ntitle: WPF 綁定自訂元件屬性\ncatalog: true\ncomments: true\ntags:\n  - WPF\n  - DataBinding\n  - UserControl\n  - DependencyProperty\nabbrlink: 40650\ncategories: uncategorized\ndate: 2021-02-19 16:03:40\n---\n\n## 綁定自訂元件屬性\n\n這個問題是發生在有一次我要把公司舊的程式改成MVVM的設計，在將ViewModel綁定到一個我們自己做的元件上的依賴屬性上時發現綁定成功了，但是ViewModel值發生異動時，那個自訂的元件的畫面卻沒有更新\n\n\n### 自訂元件\n那顆自訂元件大概長這樣，我們先叫他LeoBlock，LeoBlock有一個TextBlcok跟一個按鈕，主要功能是在按按鈕的時候TextBlcok會顯示最新的值\n\n##### Xaml\n```XML\n<UserControl x:Class=\"WPFPractice0219.LeoBlock\"\n             xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n             xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\" \n             xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\" \n             xmlns:local=\"clr-namespace:WPFPractice0219\"\n             mc:Ignorable=\"d\" \n             d:DesignHeight=\"450\" d:DesignWidth=\"800\" x:Name=\"ucMain\">\n    <StackPanel Orientation=\"Horizontal\">\n        <TextBlock x:Name=\"tb\" Text=\"{Binding LeoText, ElementName=ucMain}\"/>\n        <Button Content=\"Test\" Click=\"Button_Click\"/>\n    </StackPanel>\n</UserControl>\n```\n\n##### Code Behind\nLeoBlock裡面有一個依賴屬性 - LeoText，這個屬性當初是設計來給其他地方存取的\n```c sharp\npublic partial class LeoBlock : UserControl\n{\n    public LeoBlock()\n    {\n        InitializeComponent();\n        this.DataContext = new LeoBlockViewModel();\n    }\n\n\n    public string LeoText\n    {\n        get { return (string)GetValue(LeoTextProperty); }\n        set { SetValue(LeoTextProperty, value); }\n    }\n\n    DependencyProperty.Register(\"LeoText\", typeof(string), typeof(LeoBlock), new PropertyMetadata(\"Default\"));\n\n    private void Button_Click(object sender, RoutedEventArgs e)\n    {\n        \n    }\n}\n```\n### 主視窗(MainWindow)\nLeoBlcok被用在MainWindow中，其中的LeoText屬性被綁定在ViewModel中的ContentText屬性上\n\n原本我以為這樣LeoBlock的LeoText這樣就會綁定成功了，沒想到不是像我想的一樣\n\nLeoBlock顯示的是依賴屬性LeoText的預設值(Default)，而不是主視窗中ViewModel的ContentText屬性(ViewModel Default Value)\n##### MainWindow\n```xml\n<Window x:Class=\"WPFPractice0219.MainWindow\"\n        xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n        xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n        xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\"\n        xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\n        xmlns:local=\"clr-namespace:WPFPractice0219\"\n        xmlns:i=\"clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity\"\n        xmlns:jwb=\"clr-namespace:Jepun.Win.Base;assembly=Jepun.Win.Base\"\n        mc:Ignorable=\"d\"\n        Title=\"MainWindow\" Height=\"450\" Width=\"800\" x:Name=\"mainWindow\">\n    <StackPanel Orientation=\"Vertical\">\n        <Button Content=\"Update\" Command=\"{Binding ButtonClickCommand}\"/>\n        <local:LeoBlock LeoText=\"{Binding ContentText\"/>\n    </StackPanel>\n</Window>\n```\n\n##### MainWindow.xaml.cs\n```csharp\npublic partial class MainWindow : Window\n{\n    INotifyPropertyChanged main = null;\n    public MainWindow()\n    {\n        InitializeComponent();\n        IKernel Container = new StandardKernel();\n        Container.Bind<INotifyPropertyChanged>().To<MainViewModel>();\n        main = Container.Get<MainViewModel>();\n        this.DataContext = main;\n    }\n\n    private void DatePicker_DateChanged(object sender, System.EventArgs e)\n    {\n        \n    }\n}\n```\n\n##### MainViewModel\n``` c sharp\npublic class MainViewModel:ViewModelBase\n{\n    private string _ContentText = \"ViewModel Default Value\";\n    \n    public string ContentText\n    {\n        get\n        {\n            return _ContentText;\n        }\n        set\n        {\n            _ContentText = value;\n            OnPropertyChanged();\n        }\n    }\n}\n```\n\n### 解決方法\n在主視窗綁定依賴屬性(LeoText)到ViewModel時改成這樣寫 : Binding DataContext.ContentText\n``` xml\n<StackPanel Orientation=\"Vertical\">\n    <Button Content=\"Update\" Command=\"{Binding ButtonClickCommand}\"/>\n    <local:LeoBlock LeoText=\"{Binding DataContext.ContentText, ElementName=mainWindow}\"/>\n</StackPanel>\n```","slug":"WPF-綁定自訂元件屬性","published":1,"updated":"2024-11-21T02:20:00.215Z","layout":"post","photos":[],"link":"","_id":"cm3xvfy8u003rewi9qfqco5if","content":"<h2><span id=\"綁定自訂元件屬性\">綁定自訂元件屬性</span></h2>\n<p>這個問題是發生在有一次我要把公司舊的程式改成MVVM的設計，在將ViewModel綁定到一個我們自己做的元件上的依賴屬性上時發現綁定成功了，但是ViewModel值發生異動時，那個自訂的元件的畫面卻沒有更新</p>\n<h3><span id=\"自訂元件\">自訂元件</span></h3>\n<p>那顆自訂元件大概長這樣，我們先叫他LeoBlock，LeoBlock有一個TextBlcok跟一個按鈕，主要功能是在按按鈕的時候TextBlcok會顯示最新的值</p>\n<h5><span id=\"xaml\">Xaml</span></h5>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">UserControl</span> <span class=\"attr\">x:Class</span>=<span class=\"string\">\"WPFPractice0219.LeoBlock\"</span></span></span><br><span class=\"line\"><span class=\"tag\">             <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"</span></span></span><br><span class=\"line\"><span class=\"tag\">             <span class=\"attr\">xmlns:x</span>=<span class=\"string\">\"http://schemas.microsoft.com/winfx/2006/xaml\"</span></span></span><br><span class=\"line\"><span class=\"tag\">             <span class=\"attr\">xmlns:mc</span>=<span class=\"string\">\"http://schemas.openxmlformats.org/markup-compatibility/2006\"</span> </span></span><br><span class=\"line\"><span class=\"tag\">             <span class=\"attr\">xmlns:d</span>=<span class=\"string\">\"http://schemas.microsoft.com/expression/blend/2008\"</span> </span></span><br><span class=\"line\"><span class=\"tag\">             <span class=\"attr\">xmlns:local</span>=<span class=\"string\">\"clr-namespace:WPFPractice0219\"</span></span></span><br><span class=\"line\"><span class=\"tag\">             <span class=\"attr\">mc:Ignorable</span>=<span class=\"string\">\"d\"</span> </span></span><br><span class=\"line\"><span class=\"tag\">             <span class=\"attr\">d:DesignHeight</span>=<span class=\"string\">\"450\"</span> <span class=\"attr\">d:DesignWidth</span>=<span class=\"string\">\"800\"</span> <span class=\"attr\">x:Name</span>=<span class=\"string\">\"ucMain\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">StackPanel</span> <span class=\"attr\">Orientation</span>=<span class=\"string\">\"Horizontal\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextBlock</span> <span class=\"attr\">x:Name</span>=<span class=\"string\">\"tb\"</span> <span class=\"attr\">Text</span>=<span class=\"string\">\"&#123;Binding LeoText, ElementName=ucMain&#125;\"</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">Content</span>=<span class=\"string\">\"Test\"</span> <span class=\"attr\">Click</span>=<span class=\"string\">\"Button_Click\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">StackPanel</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">UserControl</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h5><span id=\"code-behind\">Code Behind</span></h5>\n<p>LeoBlock裡面有一個依賴屬性 - LeoText，這個屬性當初是設計來給其他地方存取的</p>\n<figure class=\"highlight c\"><figcaption><span>sharp</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> partial <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">LeoBlock</span> :</span> UserControl</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">LeoBlock</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        InitializeComponent();</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.DataContext = <span class=\"keyword\">new</span> LeoBlockViewModel();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> LeoText</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">get</span> &#123; <span class=\"keyword\">return</span> (<span class=\"built_in\">string</span>)GetValue(LeoTextProperty); &#125;</span><br><span class=\"line\">        <span class=\"built_in\">set</span> &#123; SetValue(LeoTextProperty, value); &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    DependencyProperty.Register(<span class=\"string\">\"LeoText\"</span>, typeof(<span class=\"built_in\">string</span>), typeof(LeoBlock), <span class=\"keyword\">new</span> PropertyMetadata(<span class=\"string\">\"Default\"</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">Button_Click</span><span class=\"params\">(object sender, RoutedEventArgs e)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3><span id=\"主視窗mainwindow\">主視窗(MainWindow)</span></h3>\n<p>LeoBlcok被用在MainWindow中，其中的LeoText屬性被綁定在ViewModel中的ContentText屬性上</p>\n<p>原本我以為這樣LeoBlock的LeoText這樣就會綁定成功了，沒想到不是像我想的一樣</p>\n<p>LeoBlock顯示的是依賴屬性LeoText的預設值(Default)，而不是主視窗中ViewModel的ContentText屬性(ViewModel Default Value)</p>\n<h5><span id=\"mainwindow\">MainWindow</span></h5>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Window</span> <span class=\"attr\">x:Class</span>=<span class=\"string\">\"WPFPractice0219.MainWindow\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">xmlns:x</span>=<span class=\"string\">\"http://schemas.microsoft.com/winfx/2006/xaml\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">xmlns:d</span>=<span class=\"string\">\"http://schemas.microsoft.com/expression/blend/2008\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">xmlns:mc</span>=<span class=\"string\">\"http://schemas.openxmlformats.org/markup-compatibility/2006\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">xmlns:local</span>=<span class=\"string\">\"clr-namespace:WPFPractice0219\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">xmlns:i</span>=<span class=\"string\">\"clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">xmlns:jwb</span>=<span class=\"string\">\"clr-namespace:Jepun.Win.Base;assembly=Jepun.Win.Base\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">mc:Ignorable</span>=<span class=\"string\">\"d\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">Title</span>=<span class=\"string\">\"MainWindow\"</span> <span class=\"attr\">Height</span>=<span class=\"string\">\"450\"</span> <span class=\"attr\">Width</span>=<span class=\"string\">\"800\"</span> <span class=\"attr\">x:Name</span>=<span class=\"string\">\"mainWindow\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">StackPanel</span> <span class=\"attr\">Orientation</span>=<span class=\"string\">\"Vertical\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">Content</span>=<span class=\"string\">\"Update\"</span> <span class=\"attr\">Command</span>=<span class=\"string\">\"&#123;Binding ButtonClickCommand&#125;\"</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">local:LeoBlock</span> <span class=\"attr\">LeoText</span>=<span class=\"string\">\"&#123;Binding ContentText\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">StackPanel</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Window</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h5><span id=\"mainwindowxamlcs\">MainWindow.xaml.cs</span></h5>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">partial</span> <span class=\"keyword\">class</span> <span class=\"title\">MainWindow</span> : <span class=\"title\">Window</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    INotifyPropertyChanged main = <span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">MainWindow</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        InitializeComponent();</span><br><span class=\"line\">        IKernel Container = <span class=\"keyword\">new</span> StandardKernel();</span><br><span class=\"line\">        Container.Bind&lt;INotifyPropertyChanged&gt;().To&lt;MainViewModel&gt;();</span><br><span class=\"line\">        main = Container.Get&lt;MainViewModel&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.DataContext = main;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">DatePicker_DateChanged</span>(<span class=\"params\"><span class=\"keyword\">object</span> sender, System.EventArgs e</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5><span id=\"mainviewmodel\">MainViewModel</span></h5>\n<figure class=\"highlight c\"><figcaption><span>sharp</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainViewModel</span>:</span>ViewModelBase</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"built_in\">string</span> _ContentText = <span class=\"string\">\"ViewModel Default Value\"</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> ContentText</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">get</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> _ContentText;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">set</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            _ContentText = value;</span><br><span class=\"line\">            OnPropertyChanged();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3><span id=\"解決方法\">解決方法</span></h3>\n<p>在主視窗綁定依賴屬性(LeoText)到ViewModel時改成這樣寫 : Binding DataContext.ContentText</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">StackPanel</span> <span class=\"attr\">Orientation</span>=<span class=\"string\">\"Vertical\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">Content</span>=<span class=\"string\">\"Update\"</span> <span class=\"attr\">Command</span>=<span class=\"string\">\"&#123;Binding ButtonClickCommand&#125;\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">local:LeoBlock</span> <span class=\"attr\">LeoText</span>=<span class=\"string\">\"&#123;Binding DataContext.ContentText, ElementName=mainWindow&#125;\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">StackPanel</span>&gt;</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h2>綁定自訂元件屬性</h2>\n<p>這個問題是發生在有一次我要把公司舊的程式改成MVVM的設計，在將ViewModel綁定到一個我們自己做的元件上的依賴屬性上時發現綁定成功了，但是ViewModel值發生異動時，那個自訂的元件的畫面卻沒有更新</p>\n<h3>自訂元件</h3>\n<p>那顆自訂元件大概長這樣，我們先叫他LeoBlock，LeoBlock有一個TextBlcok跟一個按鈕，主要功能是在按按鈕的時候TextBlcok會顯示最新的值</p>\n<h5>Xaml</h5>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">UserControl</span> <span class=\"attr\">x:Class</span>=<span class=\"string\">\"WPFPractice0219.LeoBlock\"</span></span></span><br><span class=\"line\"><span class=\"tag\">             <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"</span></span></span><br><span class=\"line\"><span class=\"tag\">             <span class=\"attr\">xmlns:x</span>=<span class=\"string\">\"http://schemas.microsoft.com/winfx/2006/xaml\"</span></span></span><br><span class=\"line\"><span class=\"tag\">             <span class=\"attr\">xmlns:mc</span>=<span class=\"string\">\"http://schemas.openxmlformats.org/markup-compatibility/2006\"</span> </span></span><br><span class=\"line\"><span class=\"tag\">             <span class=\"attr\">xmlns:d</span>=<span class=\"string\">\"http://schemas.microsoft.com/expression/blend/2008\"</span> </span></span><br><span class=\"line\"><span class=\"tag\">             <span class=\"attr\">xmlns:local</span>=<span class=\"string\">\"clr-namespace:WPFPractice0219\"</span></span></span><br><span class=\"line\"><span class=\"tag\">             <span class=\"attr\">mc:Ignorable</span>=<span class=\"string\">\"d\"</span> </span></span><br><span class=\"line\"><span class=\"tag\">             <span class=\"attr\">d:DesignHeight</span>=<span class=\"string\">\"450\"</span> <span class=\"attr\">d:DesignWidth</span>=<span class=\"string\">\"800\"</span> <span class=\"attr\">x:Name</span>=<span class=\"string\">\"ucMain\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">StackPanel</span> <span class=\"attr\">Orientation</span>=<span class=\"string\">\"Horizontal\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextBlock</span> <span class=\"attr\">x:Name</span>=<span class=\"string\">\"tb\"</span> <span class=\"attr\">Text</span>=<span class=\"string\">\"&#123;Binding LeoText, ElementName=ucMain&#125;\"</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">Content</span>=<span class=\"string\">\"Test\"</span> <span class=\"attr\">Click</span>=<span class=\"string\">\"Button_Click\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">StackPanel</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">UserControl</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h5>Code Behind</h5>\n<p>LeoBlock裡面有一個依賴屬性 - LeoText，這個屬性當初是設計來給其他地方存取的</p>\n<figure class=\"highlight c\"><figcaption><span>sharp</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> partial <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">LeoBlock</span> :</span> UserControl</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">LeoBlock</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        InitializeComponent();</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.DataContext = <span class=\"keyword\">new</span> LeoBlockViewModel();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> LeoText</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">get</span> &#123; <span class=\"keyword\">return</span> (<span class=\"built_in\">string</span>)GetValue(LeoTextProperty); &#125;</span><br><span class=\"line\">        <span class=\"built_in\">set</span> &#123; SetValue(LeoTextProperty, value); &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    DependencyProperty.Register(<span class=\"string\">\"LeoText\"</span>, typeof(<span class=\"built_in\">string</span>), typeof(LeoBlock), <span class=\"keyword\">new</span> PropertyMetadata(<span class=\"string\">\"Default\"</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">Button_Click</span><span class=\"params\">(object sender, RoutedEventArgs e)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3>主視窗(MainWindow)</h3>\n<p>LeoBlcok被用在MainWindow中，其中的LeoText屬性被綁定在ViewModel中的ContentText屬性上</p>\n<p>原本我以為這樣LeoBlock的LeoText這樣就會綁定成功了，沒想到不是像我想的一樣</p>\n<p>LeoBlock顯示的是依賴屬性LeoText的預設值(Default)，而不是主視窗中ViewModel的ContentText屬性(ViewModel Default Value)</p>\n<h5>MainWindow</h5>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Window</span> <span class=\"attr\">x:Class</span>=<span class=\"string\">\"WPFPractice0219.MainWindow\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">xmlns:x</span>=<span class=\"string\">\"http://schemas.microsoft.com/winfx/2006/xaml\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">xmlns:d</span>=<span class=\"string\">\"http://schemas.microsoft.com/expression/blend/2008\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">xmlns:mc</span>=<span class=\"string\">\"http://schemas.openxmlformats.org/markup-compatibility/2006\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">xmlns:local</span>=<span class=\"string\">\"clr-namespace:WPFPractice0219\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">xmlns:i</span>=<span class=\"string\">\"clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">xmlns:jwb</span>=<span class=\"string\">\"clr-namespace:Jepun.Win.Base;assembly=Jepun.Win.Base\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">mc:Ignorable</span>=<span class=\"string\">\"d\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">Title</span>=<span class=\"string\">\"MainWindow\"</span> <span class=\"attr\">Height</span>=<span class=\"string\">\"450\"</span> <span class=\"attr\">Width</span>=<span class=\"string\">\"800\"</span> <span class=\"attr\">x:Name</span>=<span class=\"string\">\"mainWindow\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">StackPanel</span> <span class=\"attr\">Orientation</span>=<span class=\"string\">\"Vertical\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">Content</span>=<span class=\"string\">\"Update\"</span> <span class=\"attr\">Command</span>=<span class=\"string\">\"&#123;Binding ButtonClickCommand&#125;\"</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">local:LeoBlock</span> <span class=\"attr\">LeoText</span>=<span class=\"string\">\"&#123;Binding ContentText\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">StackPanel</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Window</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h5>MainWindow.xaml.cs</h5>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">partial</span> <span class=\"keyword\">class</span> <span class=\"title\">MainWindow</span> : <span class=\"title\">Window</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    INotifyPropertyChanged main = <span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">MainWindow</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        InitializeComponent();</span><br><span class=\"line\">        IKernel Container = <span class=\"keyword\">new</span> StandardKernel();</span><br><span class=\"line\">        Container.Bind&lt;INotifyPropertyChanged&gt;().To&lt;MainViewModel&gt;();</span><br><span class=\"line\">        main = Container.Get&lt;MainViewModel&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.DataContext = main;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">DatePicker_DateChanged</span>(<span class=\"params\"><span class=\"keyword\">object</span> sender, System.EventArgs e</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5>MainViewModel</h5>\n<figure class=\"highlight c\"><figcaption><span>sharp</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainViewModel</span>:</span>ViewModelBase</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"built_in\">string</span> _ContentText = <span class=\"string\">\"ViewModel Default Value\"</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> ContentText</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">get</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> _ContentText;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">set</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            _ContentText = value;</span><br><span class=\"line\">            OnPropertyChanged();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3>解決方法</h3>\n<p>在主視窗綁定依賴屬性(LeoText)到ViewModel時改成這樣寫 : Binding DataContext.ContentText</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">StackPanel</span> <span class=\"attr\">Orientation</span>=<span class=\"string\">\"Vertical\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">Content</span>=<span class=\"string\">\"Update\"</span> <span class=\"attr\">Command</span>=<span class=\"string\">\"&#123;Binding ButtonClickCommand&#125;\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">local:LeoBlock</span> <span class=\"attr\">LeoText</span>=<span class=\"string\">\"&#123;Binding DataContext.ContentText, ElementName=mainWindow&#125;\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">StackPanel</span>&gt;</span></span><br></pre></td></tr></table></figure>"},{"title":"[Hexo] Theme BeanTech","catalog":true,"subtitle":"This is hexo theme Demo.","header-img":"Demo.png","catagories":["Hexo"],"abbrlink":"dbcfa929","date":"2017-03-18T02:51:24.000Z","_content":"> Ported Theme of [Hux Blog](https://github.com/Huxpro/huxpro.github.io), Thank [Huxpro](https://github.com/Huxpro) for designing such a flawless theme.\n> \n> This BeanTech theme created by [YuHsuan](http://beantech.org) modified from the original Porter [Kaijun](http://kaijun.rocks/hexo-theme-huxblog/)\n\n# [Live Demo](http://beantech.org)\n---\n![BeanTech Desktop](http://beantech.org/img/beantech-desktop.png)\n\n# Usage\n---\nI publish the whole project for your convenience, so you can just follow the instruction down below, then you can easily customiz your own blog!\n\nLet's begin!!!\n\n## Init\n---\n```bash\ngit clone https://github.com/YenYuHsuan/hexo-theme-beantech.git ./hexo-beantech\ncd hexo-beantech\nnpm install\n```\n\n## Modify\n---\nModify `_config.yml` file with your own info.\nEspecially the section:\n### Deployment\nReplace to your own repo!\n```yml\ndeploy:\n  type: git\n  repo: https://github.com/<yourAccount>/<repo>\n  branch: <your-branch>\n```\n\n### Sidebar settings\nCopy your avatar image to `<root>/img/` and modify the `_config.yml`:\n```yml\nsidebar: true    # whether or not using Sidebar.\nsidebar-about-description: \"<your description>\"\nsidebar-avatar: img/<your avatar path>\n```\nand activate your personal widget you like\n```yml\nwidgets:         # here are widget you can use, you can comment out\n- featured-tags\n- short-about\n- recent-posts\n- friends-blog\n- archive\n- category\n```\nif you want to add sidebar widget, please add at `layout/_widget`.\n### Signature Setup\nCopy your signature image to `<root>/img/signature` and modify the `_config.yml`:\n```yml\nsignature: true   # show signature\nsignature-img: img/signature/<your-signature-ID>\n```\n### Go to top icon Setup\nMy icon is using iron man, you can change to your own icon at `css/image`.\n\n### Post tag\nYou can decide to show post tags or not.\n```yml\nhome_posts_tag: true\n```\n![home_posts_tag-true](home_posts_tag-true.png)\n```yml\nhome_posts_tag: false\n```\n![home_posts_tag-false](home_posts_tag-false.png)\n\n### Markdown render\nMy markdown render engine plugin is [hexo-renderer-markdown-it](https://github.com/celsomiranda/hexo-renderer-markdown-it).\n```yml\n# Markdown-it config\n## Docs: https://github.com/celsomiranda/hexo-renderer-markdown-it/wiki\nmarkdown:\n  render:\n    html: true\n    xhtmlOut: false\n    breaks: true\n    linkify: true\n    typographer: true\n    quotes: '“”‘’'\n```\nand if you want to change the header anchor 'ℬ', you can go to `layout/post.ejs` to change it.\n```javascript\nasync(\"https://cdn.bootcss.com/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'left',\n          icon: ℬ // this is the header anchor \"unicode\" icon\n        };\n```\n\n## Hexo Basics\n---\nSome hexo command:\n```bash\nhexo new post \"<post name>\" # you can change post to another layout if you want\nhexo clean && hexo generate # generate the static file\nhexo server # run hexo in local environment\nhexo deploy # hexo will push the static files automatically into the specific branch(gh-pages) of your repo!\n```\n\n# Have fun ^_^ \n---\n<!-- Place this tag in your head or just before your close body tag. -->\n<script async defer src=\"https://buttons.github.io/buttons.js\"></script>\n<!-- Place this tag where you want the button to render. -->\n\nPlease <a class=\"github-button\" href=\"https://github.com/YenYuHsuan/hexo-theme-beantech\" data-icon=\"octicon-star\" aria-label=\"Star YenYuHsuan/hexo-theme-beantech on GitHub\">Star</a> this Project if you like it! <a class=\"github-button\" href=\"https://github.com/YenYuHsuan\" aria-label=\"Follow @YenYuHsuan on GitHub\">Follow</a> would also be appreciated!\nPeace!\n","source":"_posts/hexo-theme-beantech.md","raw":"---\ntitle: '[Hexo] Theme BeanTech'\ncatalog: true\nsubtitle: This is hexo theme Demo.\nheader-img: Demo.png\ntags:\n  - Hexo\n  - Blog\ncatagories:\n  - Hexo\nabbrlink: dbcfa929\ncategories: uncategorized\ndate: 2017-03-18 10:51:24\n---\n> Ported Theme of [Hux Blog](https://github.com/Huxpro/huxpro.github.io), Thank [Huxpro](https://github.com/Huxpro) for designing such a flawless theme.\n> \n> This BeanTech theme created by [YuHsuan](http://beantech.org) modified from the original Porter [Kaijun](http://kaijun.rocks/hexo-theme-huxblog/)\n\n# [Live Demo](http://beantech.org)\n---\n![BeanTech Desktop](http://beantech.org/img/beantech-desktop.png)\n\n# Usage\n---\nI publish the whole project for your convenience, so you can just follow the instruction down below, then you can easily customiz your own blog!\n\nLet's begin!!!\n\n## Init\n---\n```bash\ngit clone https://github.com/YenYuHsuan/hexo-theme-beantech.git ./hexo-beantech\ncd hexo-beantech\nnpm install\n```\n\n## Modify\n---\nModify `_config.yml` file with your own info.\nEspecially the section:\n### Deployment\nReplace to your own repo!\n```yml\ndeploy:\n  type: git\n  repo: https://github.com/<yourAccount>/<repo>\n  branch: <your-branch>\n```\n\n### Sidebar settings\nCopy your avatar image to `<root>/img/` and modify the `_config.yml`:\n```yml\nsidebar: true    # whether or not using Sidebar.\nsidebar-about-description: \"<your description>\"\nsidebar-avatar: img/<your avatar path>\n```\nand activate your personal widget you like\n```yml\nwidgets:         # here are widget you can use, you can comment out\n- featured-tags\n- short-about\n- recent-posts\n- friends-blog\n- archive\n- category\n```\nif you want to add sidebar widget, please add at `layout/_widget`.\n### Signature Setup\nCopy your signature image to `<root>/img/signature` and modify the `_config.yml`:\n```yml\nsignature: true   # show signature\nsignature-img: img/signature/<your-signature-ID>\n```\n### Go to top icon Setup\nMy icon is using iron man, you can change to your own icon at `css/image`.\n\n### Post tag\nYou can decide to show post tags or not.\n```yml\nhome_posts_tag: true\n```\n![home_posts_tag-true](home_posts_tag-true.png)\n```yml\nhome_posts_tag: false\n```\n![home_posts_tag-false](home_posts_tag-false.png)\n\n### Markdown render\nMy markdown render engine plugin is [hexo-renderer-markdown-it](https://github.com/celsomiranda/hexo-renderer-markdown-it).\n```yml\n# Markdown-it config\n## Docs: https://github.com/celsomiranda/hexo-renderer-markdown-it/wiki\nmarkdown:\n  render:\n    html: true\n    xhtmlOut: false\n    breaks: true\n    linkify: true\n    typographer: true\n    quotes: '“”‘’'\n```\nand if you want to change the header anchor 'ℬ', you can go to `layout/post.ejs` to change it.\n```javascript\nasync(\"https://cdn.bootcss.com/anchor-js/1.1.1/anchor.min.js\",function(){\n        anchors.options = {\n          visible: 'hover',\n          placement: 'left',\n          icon: ℬ // this is the header anchor \"unicode\" icon\n        };\n```\n\n## Hexo Basics\n---\nSome hexo command:\n```bash\nhexo new post \"<post name>\" # you can change post to another layout if you want\nhexo clean && hexo generate # generate the static file\nhexo server # run hexo in local environment\nhexo deploy # hexo will push the static files automatically into the specific branch(gh-pages) of your repo!\n```\n\n# Have fun ^_^ \n---\n<!-- Place this tag in your head or just before your close body tag. -->\n<script async defer src=\"https://buttons.github.io/buttons.js\"></script>\n<!-- Place this tag where you want the button to render. -->\n\nPlease <a class=\"github-button\" href=\"https://github.com/YenYuHsuan/hexo-theme-beantech\" data-icon=\"octicon-star\" aria-label=\"Star YenYuHsuan/hexo-theme-beantech on GitHub\">Star</a> this Project if you like it! <a class=\"github-button\" href=\"https://github.com/YenYuHsuan\" aria-label=\"Follow @YenYuHsuan on GitHub\">Follow</a> would also be appreciated!\nPeace!\n","slug":"hexo-theme-beantech","published":1,"updated":"2024-11-21T02:20:00.216Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cm3xvfy8v003uewi9aquf56ll","content":"<blockquote>\n<p>Ported Theme of <a href=\"https://github.com/Huxpro/huxpro.github.io\" target=\"_blank\" rel=\"noopener\">Hux Blog</a>, Thank <a href=\"https://github.com/Huxpro\" target=\"_blank\" rel=\"noopener\">Huxpro</a> for designing such a flawless theme.</p>\n<p>This BeanTech theme created by <a href=\"http://beantech.org\" target=\"_blank\" rel=\"noopener\">YuHsuan</a> modified from the original Porter <a href=\"http://kaijun.rocks/hexo-theme-huxblog/\" target=\"_blank\" rel=\"noopener\">Kaijun</a></p>\n</blockquote>\n<h1><span id=\"live-demo\"></span></h1>\n<hr>\n<p><img src=\"http://beantech.org/img/beantech-desktop.png\" alt=\"BeanTech Desktop\"></p>\n<h1><span id=\"usage\">Usage</span></h1>\n<hr>\n<p>I publish the whole project for your convenience, so you can just follow the instruction down below, then you can easily customiz your own blog!</p>\n<p>Let’s begin!!!</p>\n<h2><span id=\"init\">Init</span></h2>\n<hr>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/YenYuHsuan/hexo-theme-beantech.git ./hexo-beantech</span><br><span class=\"line\"><span class=\"built_in\">cd</span> hexo-beantech</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n<h2><span id=\"modify\">Modify</span></h2>\n<hr>\n<p>Modify <code>_config.yml</code> file with your own info.<br>\nEspecially the section:</p>\n<h3><span id=\"deployment\">Deployment</span></h3>\n<p>Replace to your own repo!</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">git</span></span><br><span class=\"line\">  <span class=\"attr\">repo:</span> <span class=\"string\">https://github.com/&lt;yourAccount&gt;/&lt;repo&gt;</span></span><br><span class=\"line\">  <span class=\"attr\">branch:</span> <span class=\"string\">&lt;your-branch&gt;</span></span><br></pre></td></tr></table></figure>\n<h3><span id=\"sidebar-settings\">Sidebar settings</span></h3>\n<p>Copy your avatar image to <code>&lt;root&gt;/img/</code> and modify the <code>_config.yml</code>:</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">sidebar:</span> <span class=\"literal\">true</span>    <span class=\"comment\"># whether or not using Sidebar.</span></span><br><span class=\"line\"><span class=\"attr\">sidebar-about-description:</span> <span class=\"string\">\"&lt;your description&gt;\"</span></span><br><span class=\"line\"><span class=\"attr\">sidebar-avatar:</span> <span class=\"string\">img/&lt;your</span> <span class=\"string\">avatar</span> <span class=\"string\">path&gt;</span></span><br></pre></td></tr></table></figure>\n<p>and activate your personal widget you like</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">widgets:</span>         <span class=\"comment\"># here are widget you can use, you can comment out</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">featured-tags</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">short-about</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">recent-posts</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">friends-blog</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">archive</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">category</span></span><br></pre></td></tr></table></figure>\n<p>if you want to add sidebar widget, please add at <code>layout/_widget</code>.</p>\n<h3><span id=\"signature-setup\">Signature Setup</span></h3>\n<p>Copy your signature image to <code>&lt;root&gt;/img/signature</code> and modify the <code>_config.yml</code>:</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">signature:</span> <span class=\"literal\">true</span>   <span class=\"comment\"># show signature</span></span><br><span class=\"line\"><span class=\"attr\">signature-img:</span> <span class=\"string\">img/signature/&lt;your-signature-ID&gt;</span></span><br></pre></td></tr></table></figure>\n<h3><span id=\"go-to-top-icon-setup\">Go to top icon Setup</span></h3>\n<p>My icon is using iron man, you can change to your own icon at <code>css/image</code>.</p>\n<h3><span id=\"post-tag\">Post tag</span></h3>\n<p>You can decide to show post tags or not.</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">home_posts_tag:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"home_posts_tag-true.png\" alt=\"home_posts_tag-true\"></p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">home_posts_tag:</span> <span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"home_posts_tag-false.png\" alt=\"home_posts_tag-false\"></p>\n<h3><span id=\"markdown-render\">Markdown render</span></h3>\n<p>My markdown render engine plugin is <a href=\"https://github.com/celsomiranda/hexo-renderer-markdown-it\" target=\"_blank\" rel=\"noopener\">hexo-renderer-markdown-it</a>.</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Markdown-it config</span></span><br><span class=\"line\"><span class=\"comment\">## Docs: https://github.com/celsomiranda/hexo-renderer-markdown-it/wiki</span></span><br><span class=\"line\"><span class=\"attr\">markdown:</span></span><br><span class=\"line\">  <span class=\"attr\">render:</span></span><br><span class=\"line\">    <span class=\"attr\">html:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"attr\">xhtmlOut:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">    <span class=\"attr\">breaks:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"attr\">linkify:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"attr\">typographer:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"attr\">quotes:</span> <span class=\"string\">'“”‘’'</span></span><br></pre></td></tr></table></figure>\n<p>and if you want to change the header anchor ‘ℬ’, you can go to <code>layout/post.ejs</code> to change it.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span>(<span class=\"string\">\"https://cdn.bootcss.com/anchor-js/1.1.1/anchor.min.js\"</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        anchors.options = &#123;</span><br><span class=\"line\">          visible: <span class=\"string\">'hover'</span>,</span><br><span class=\"line\">          placement: <span class=\"string\">'left'</span>,</span><br><span class=\"line\">          icon: ℬ <span class=\"comment\">// this is the header anchor \"unicode\" icon</span></span><br><span class=\"line\">        &#125;;</span><br></pre></td></tr></table></figure>\n<h2><span id=\"hexo-basics\">Hexo Basics</span></h2>\n<hr>\n<p>Some hexo command:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new post <span class=\"string\">\"&lt;post name&gt;\"</span> <span class=\"comment\"># you can change post to another layout if you want</span></span><br><span class=\"line\">hexo clean &amp;&amp; hexo generate <span class=\"comment\"># generate the static file</span></span><br><span class=\"line\">hexo server <span class=\"comment\"># run hexo in local environment</span></span><br><span class=\"line\">hexo deploy <span class=\"comment\"># hexo will push the static files automatically into the specific branch(gh-pages) of your repo!</span></span><br></pre></td></tr></table></figure>\n<h1><span id=\"have-fun-_\">Have fun ^_^</span></h1>\n<hr>\n<!-- Place this tag in your head or just before your close body tag. -->\n<script async defer src=\"https://buttons.github.io/buttons.js\"></script>\n<!-- Place this tag where you want the button to render. -->\n<p>Please <a class=\"github-button\" href=\"https://github.com/YenYuHsuan/hexo-theme-beantech\" data-icon=\"octicon-star\" aria-label=\"Star YenYuHsuan/hexo-theme-beantech on GitHub\" target=\"_blank\" rel=\"noopener\">Star</a> this Project if you like it! <a class=\"github-button\" href=\"https://github.com/YenYuHsuan\" aria-label=\"Follow @YenYuHsuan on GitHub\" target=\"_blank\" rel=\"noopener\">Follow</a> would also be appreciated!<br>\nPeace!</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>Ported Theme of <a href=\"https://github.com/Huxpro/huxpro.github.io\" target=\"_blank\" rel=\"noopener\">Hux Blog</a>, Thank <a href=\"https://github.com/Huxpro\" target=\"_blank\" rel=\"noopener\">Huxpro</a> for designing such a flawless theme.</p>\n<p>This BeanTech theme created by <a href=\"http://beantech.org\" target=\"_blank\" rel=\"noopener\">YuHsuan</a> modified from the original Porter <a href=\"http://kaijun.rocks/hexo-theme-huxblog/\" target=\"_blank\" rel=\"noopener\">Kaijun</a></p>\n</blockquote>\n<h1><a href=\"http://beantech.org\" target=\"_blank\" rel=\"noopener\">Live Demo</a></h1>\n<hr>\n<p><img src=\"http://beantech.org/img/beantech-desktop.png\" alt=\"BeanTech Desktop\"></p>\n<h1>Usage</h1>\n<hr>\n<p>I publish the whole project for your convenience, so you can just follow the instruction down below, then you can easily customiz your own blog!</p>\n<p>Let’s begin!!!</p>\n<h2>Init</h2>\n<hr>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/YenYuHsuan/hexo-theme-beantech.git ./hexo-beantech</span><br><span class=\"line\"><span class=\"built_in\">cd</span> hexo-beantech</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n<h2>Modify</h2>\n<hr>\n<p>Modify <code>_config.yml</code> file with your own info.<br>\nEspecially the section:</p>\n<h3>Deployment</h3>\n<p>Replace to your own repo!</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">git</span></span><br><span class=\"line\">  <span class=\"attr\">repo:</span> <span class=\"string\">https://github.com/&lt;yourAccount&gt;/&lt;repo&gt;</span></span><br><span class=\"line\">  <span class=\"attr\">branch:</span> <span class=\"string\">&lt;your-branch&gt;</span></span><br></pre></td></tr></table></figure>\n<h3>Sidebar settings</h3>\n<p>Copy your avatar image to <code>&lt;root&gt;/img/</code> and modify the <code>_config.yml</code>:</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">sidebar:</span> <span class=\"literal\">true</span>    <span class=\"comment\"># whether or not using Sidebar.</span></span><br><span class=\"line\"><span class=\"attr\">sidebar-about-description:</span> <span class=\"string\">\"&lt;your description&gt;\"</span></span><br><span class=\"line\"><span class=\"attr\">sidebar-avatar:</span> <span class=\"string\">img/&lt;your</span> <span class=\"string\">avatar</span> <span class=\"string\">path&gt;</span></span><br></pre></td></tr></table></figure>\n<p>and activate your personal widget you like</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">widgets:</span>         <span class=\"comment\"># here are widget you can use, you can comment out</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">featured-tags</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">short-about</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">recent-posts</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">friends-blog</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">archive</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">category</span></span><br></pre></td></tr></table></figure>\n<p>if you want to add sidebar widget, please add at <code>layout/_widget</code>.</p>\n<h3>Signature Setup</h3>\n<p>Copy your signature image to <code>&lt;root&gt;/img/signature</code> and modify the <code>_config.yml</code>:</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">signature:</span> <span class=\"literal\">true</span>   <span class=\"comment\"># show signature</span></span><br><span class=\"line\"><span class=\"attr\">signature-img:</span> <span class=\"string\">img/signature/&lt;your-signature-ID&gt;</span></span><br></pre></td></tr></table></figure>\n<h3>Go to top icon Setup</h3>\n<p>My icon is using iron man, you can change to your own icon at <code>css/image</code>.</p>\n<h3>Post tag</h3>\n<p>You can decide to show post tags or not.</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">home_posts_tag:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"home_posts_tag-true.png\" alt=\"home_posts_tag-true\"></p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">home_posts_tag:</span> <span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"home_posts_tag-false.png\" alt=\"home_posts_tag-false\"></p>\n<h3>Markdown render</h3>\n<p>My markdown render engine plugin is <a href=\"https://github.com/celsomiranda/hexo-renderer-markdown-it\" target=\"_blank\" rel=\"noopener\">hexo-renderer-markdown-it</a>.</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Markdown-it config</span></span><br><span class=\"line\"><span class=\"comment\">## Docs: https://github.com/celsomiranda/hexo-renderer-markdown-it/wiki</span></span><br><span class=\"line\"><span class=\"attr\">markdown:</span></span><br><span class=\"line\">  <span class=\"attr\">render:</span></span><br><span class=\"line\">    <span class=\"attr\">html:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"attr\">xhtmlOut:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">    <span class=\"attr\">breaks:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"attr\">linkify:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"attr\">typographer:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"attr\">quotes:</span> <span class=\"string\">'“”‘’'</span></span><br></pre></td></tr></table></figure>\n<p>and if you want to change the header anchor ‘ℬ’, you can go to <code>layout/post.ejs</code> to change it.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span>(<span class=\"string\">\"https://cdn.bootcss.com/anchor-js/1.1.1/anchor.min.js\"</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        anchors.options = &#123;</span><br><span class=\"line\">          visible: <span class=\"string\">'hover'</span>,</span><br><span class=\"line\">          placement: <span class=\"string\">'left'</span>,</span><br><span class=\"line\">          icon: ℬ <span class=\"comment\">// this is the header anchor \"unicode\" icon</span></span><br><span class=\"line\">        &#125;;</span><br></pre></td></tr></table></figure>\n<h2>Hexo Basics</h2>\n<hr>\n<p>Some hexo command:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new post <span class=\"string\">\"&lt;post name&gt;\"</span> <span class=\"comment\"># you can change post to another layout if you want</span></span><br><span class=\"line\">hexo clean &amp;&amp; hexo generate <span class=\"comment\"># generate the static file</span></span><br><span class=\"line\">hexo server <span class=\"comment\"># run hexo in local environment</span></span><br><span class=\"line\">hexo deploy <span class=\"comment\"># hexo will push the static files automatically into the specific branch(gh-pages) of your repo!</span></span><br></pre></td></tr></table></figure>\n<h1>Have fun ^_^</h1>\n<hr>\n<!-- Place this tag in your head or just before your close body tag. -->\n<script async defer src=\"https://buttons.github.io/buttons.js\"></script>\n<!-- Place this tag where you want the button to render. -->\n<p>Please <a class=\"github-button\" href=\"https://github.com/YenYuHsuan/hexo-theme-beantech\" data-icon=\"octicon-star\" aria-label=\"Star YenYuHsuan/hexo-theme-beantech on GitHub\" target=\"_blank\" rel=\"noopener\">Star</a> this Project if you like it! <a class=\"github-button\" href=\"https://github.com/YenYuHsuan\" aria-label=\"Follow @YenYuHsuan on GitHub\" target=\"_blank\" rel=\"noopener\">Follow</a> would also be appreciated!<br>\nPeace!</p>\n"},{"title":"WPF 引動過程的目標傳回例外狀況","catalog":true,"comments":1,"abbrlink":35839,"date":"2020-08-21T04:01:55.000Z","_content":"## 引動過程的目標傳回例外狀況\n### 發生原因\n在XAML中把元件的屬性 Binding在ViewModel中的屬性上，如果ViewModel在執行的過程中發生例外就會跳出來這個例外\n\n---\n### StaticResource\n我們常常為了不要讓CodeBehind有程式碼，會把ViewModel的宣告拿到Xaml的Resource裡面<br>\n\n如果在Resource產生ViewModel實例(instance)的時候發生例外，在visual studio、rider都會只跳出來一個例外訊息，不會移動到例外發生ViewModel程式碼的位置，在Resource中有很多ViewModel時就很難查問題<br>\n\n---\n### 解決方法\n可以把ViewModel建立單元測試，或是把Resource中宣告ViewModel程式先註解掉排除問題發生的地方，或是在ViewModel中寫log，透過log知道問題發生的位置\n```xml\n<Windows>\n    <Windows.Resources>\n        <viewmodel:AAAViewModel x:Key=\"MainViewModel\"/>\n    </Windows.Resources>\n\n    <Grid DataContext=\"{Binding Source={StaticResource MainViewModel}\">\n    </Grid>\n</Windows>\n```","source":"_posts/WPF-引動過程的目標傳回例外狀況.md","raw":"---\ntitle: WPF 引動過程的目標傳回例外狀況\ncatalog: true\ncomments: true\ntags:\n  - WPF\n  - 引動過程的目標傳回例外狀況\n  - DataBinding\nabbrlink: 35839\ncategories: uncategorized\ndate: 2020-08-21 12:01:55\n---\n## 引動過程的目標傳回例外狀況\n### 發生原因\n在XAML中把元件的屬性 Binding在ViewModel中的屬性上，如果ViewModel在執行的過程中發生例外就會跳出來這個例外\n\n---\n### StaticResource\n我們常常為了不要讓CodeBehind有程式碼，會把ViewModel的宣告拿到Xaml的Resource裡面<br>\n\n如果在Resource產生ViewModel實例(instance)的時候發生例外，在visual studio、rider都會只跳出來一個例外訊息，不會移動到例外發生ViewModel程式碼的位置，在Resource中有很多ViewModel時就很難查問題<br>\n\n---\n### 解決方法\n可以把ViewModel建立單元測試，或是把Resource中宣告ViewModel程式先註解掉排除問題發生的地方，或是在ViewModel中寫log，透過log知道問題發生的位置\n```xml\n<Windows>\n    <Windows.Resources>\n        <viewmodel:AAAViewModel x:Key=\"MainViewModel\"/>\n    </Windows.Resources>\n\n    <Grid DataContext=\"{Binding Source={StaticResource MainViewModel}\">\n    </Grid>\n</Windows>\n```","slug":"WPF-引動過程的目標傳回例外狀況","published":1,"updated":"2024-11-21T02:20:00.214Z","layout":"post","photos":[],"link":"","_id":"cm3xvfy8w003yewi93vwncekh","content":"<h2><span id=\"引動過程的目標傳回例外狀況\">引動過程的目標傳回例外狀況</span></h2>\n<h3><span id=\"發生原因\">發生原因</span></h3>\n<p>在XAML中把元件的屬性 Binding在ViewModel中的屬性上，如果ViewModel在執行的過程中發生例外就會跳出來這個例外</p>\n<hr>\n<h3><span id=\"staticresource\">StaticResource</span></h3>\n<p>我們常常為了不要讓CodeBehind有程式碼，會把ViewModel的宣告拿到Xaml的Resource裡面<br></p>\n<p>如果在Resource產生ViewModel實例(instance)的時候發生例外，在visual studio、rider都會只跳出來一個例外訊息，不會移動到例外發生ViewModel程式碼的位置，在Resource中有很多ViewModel時就很難查問題<br></p>\n<hr>\n<h3><span id=\"解決方法\">解決方法</span></h3>\n<p>可以把ViewModel建立單元測試，或是把Resource中宣告ViewModel程式先註解掉排除問題發生的地方，或是在ViewModel中寫log，透過log知道問題發生的位置</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Windows</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Windows.Resources</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">viewmodel:AAAViewModel</span> <span class=\"attr\">x:Key</span>=<span class=\"string\">\"MainViewModel\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">Windows.Resources</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Grid</span> <span class=\"attr\">DataContext</span>=<span class=\"string\">\"&#123;Binding Source=&#123;StaticResource MainViewModel&#125;\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">Grid</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Windows</span>&gt;</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h2>引動過程的目標傳回例外狀況</h2>\n<h3>發生原因</h3>\n<p>在XAML中把元件的屬性 Binding在ViewModel中的屬性上，如果ViewModel在執行的過程中發生例外就會跳出來這個例外</p>\n<hr>\n<h3>StaticResource</h3>\n<p>我們常常為了不要讓CodeBehind有程式碼，會把ViewModel的宣告拿到Xaml的Resource裡面<br></p>\n<p>如果在Resource產生ViewModel實例(instance)的時候發生例外，在visual studio、rider都會只跳出來一個例外訊息，不會移動到例外發生ViewModel程式碼的位置，在Resource中有很多ViewModel時就很難查問題<br></p>\n<hr>\n<h3>解決方法</h3>\n<p>可以把ViewModel建立單元測試，或是把Resource中宣告ViewModel程式先註解掉排除問題發生的地方，或是在ViewModel中寫log，透過log知道問題發生的位置</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Windows</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Windows.Resources</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">viewmodel:AAAViewModel</span> <span class=\"attr\">x:Key</span>=<span class=\"string\">\"MainViewModel\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">Windows.Resources</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Grid</span> <span class=\"attr\">DataContext</span>=<span class=\"string\">\"&#123;Binding Source=&#123;StaticResource MainViewModel&#125;\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">Grid</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Windows</span>&gt;</span></span><br></pre></td></tr></table></figure>"},{"title":"jenkins自動部屬WPF","catalog":true,"comments":1,"abbrlink":36138,"date":"2021-02-01T07:38:11.000Z","_content":"\n# 用Jenkins自動部屬WPF(FreeStyle軟體專案)\n## 環境\n安裝就不寫了，google jenkins然後下載下一步下一步就裝完了\n\n安裝完之後在網址列輸入localhost:8080應該會看到jenkin的歡迎畫面，如果沒有看到的話\n\n![localhost](localhost.PNG)\n\n可以在windows command 輸入\n```batch\nservices.msc\n```\n檢查服務有沒有執行了，如果沒有執行的話按右鍵啟動Jenkins服務\n\n![CheckServices](chkService.PNG)\n\n登入之後會看到主畫面，如果已經有設定過的話會看到目前有的設定有哪些程式目前的狀態怎麼樣\n![main](main.PNG)\n\n## 新增作業\njenkin大部分時間在用的功能就是一直執行自己定義好的作業，像我是設定了編譯、執行測試、發布到指定位置\n\n選主畫面的新增作業按紐，輸入這個作業的名稱之後，選建置Free-Style 軟體專案\n![new-1](new1.PNG)\n\n之後可以照著jenkins的項目去設定自己要執行的動作\n\n我的流程是: \n### 1.git pull 最新的程式\n![step1](Step1.PNG)\n\n在設定這個功能之前要先去\n  首頁 > 管理Jenkins > Global Tool Configuration 設定電腦上git的路徑\n  ![GlobalTool](globalTool.PNG)\n  ![SetGit](setGit.PNG)\n  \n### 2.刪除目前的工作區\n  ![step2](Step2.PNG)\n\n### 3.還原nuget套件\n在建置中執行 '執行Windwows批次指令'\nnuget restore ProjectName.sln\n\n### 4.編譯專案\n\n要執行這一個工作項目會需要裝一個jenkins的plugin\n  \n按左上角Jenkins logo回到主畫面後，選 管理jenkins > 管理外掛程式\n![manage](managePlugin.PNG)\n\n應該是選可用的tab然後搜尋 MSBUID就會找到了，但因為我已經安裝完了，所以在可用的裡面找不到，而是在已安裝裡\n![install](install.PNG)\n\n安裝完plugin之後要去Global Tool Configuration 設定MSBuild路徑\n![Set MSBuild](setMSBuild.PNG)\n\n都設定完之後再去設定新的作業中執行編譯專案的工作項目\n![step3](Step3.PNG)\n這裡常常會有一個問題是輸出訊息顯示:msbuild找不到專案檔，這個問題我後來是把jenkins裝在C磁碟機以外的地方就解決了，推測應該是權限問題造成的\n\n### 5.執行源碼檢測\n我們用的是SonarQube Community版本，在編譯專案的動作後面新增一個建置步驟 : 執行windows批次指令\n\n把SonarQube的Scanner放到指定路徑後設定環境變數\n\n```\nSonarScanner.MSBuild.exe begin /k:\"ProjectNameOnSonarQube\" /d:sonar.host.url=\"http://xx.xx.x.xx:9000\" /d:sonar.login=\"xxxxx818475a7953ce2d75c37edab09d383e9917\"\nmsbuild /t:Rebuild ProjectName.sln\nSonarScanner.MSBuild.exe end /d:sonar.login=\"xxxxx818475a7953ce2d75c37edab09d383e9917\"\n```\n\n\n### 6.執行測試\n執行這一步因為我是在編譯完之後透過執行Windows batch的方式去執行測試所以不用裝什麼奇怪的plugin\n\n但是要下載對應的單元測試執行程式，像我這裡是用NUnit3，所以要下載NUNIT3，透過圖片中的方式執行測試\nhttps://nunit.org/download/\n\n ![step4](Step4.PNG)\n\n### 7.輸出測試結果\n要在jenkins上看到執行測試的結果要裝一個jekins NUnit的plugin，做法就像上面安裝MSBUID一樣，不過不用設定NUnit的路徑，主要目的是要在新增作業時有Publish NUnit test result report的項目可以選擇\n ![step5](Step5.PNG)\n\n### 8.部屬到指定位置\n正常來說應該是要選圖片中的工作項目，讓jenkins執行完測試自動部屬檔案到指定位置，但是我的jenkins每次在設定這個動作需要的參數時一直crash，所以我是透過執行單元測試的方式，透過windows batch執行複製編譯完的檔案到指定目錄中\n![step5](Step5.PNG)\n\n![Publish](publish.PNG)\n\n因為之前有透過githook部屬程式，所以備份目前版本、停用服務、部屬、通知使用者...我幾乎都用windows batch完成了\n\n# 用Jenkins自動部屬WPF(PIPLINE)\n## 直接上Script\n```\nnode {\n    stage('Clean up the workspace environment.') \n    {\n        bat \"\"\"\n        dir\n        rmdir /q /s ProjectName\n        echo \"done\"\n        \"\"\"\n    }\n    stage('Clone Project') \n    {\n        bat \"\"\"\n        git clone http://ProjectName.git\n        cd ProjectName\n        git checkout uat\n        \"\"\"\n    }\n    stage('Publish RDLC file') \n    {\n        bat \"\"\"\n        xcopy \"D:\\\\JenkinsWorkSpace\\\\workspace\\\\CompanyName.ProjectName immediately\\\\ProjectName\\\\WebApplication\\\\CompanyName.ProjectName.Report\\\\*.rdlc\" \"D:\\\\ProjectName.Report.RDLC\" /H /C /I /Y /S\n        \"\"\"\n    }\n     stage('Nuget restore') \n    {\n        bat \"\"\"\n        cd ProjectName\n        cd ConsoleApplication\n\t\tdir\n        nuget restore CompanyName.ProjectName.R6DBSync.sln\n\t\tcd ..\n\t\tcd WebApplication\n\t\tdir\n\t\tnuget restore CompanyName.ProjectName.MVC.sln\n\t\tnuget restore CompanyName.ProjectName.Report.Web.sln\n\t\tcd ..\n        \"\"\"\n    }\n    stage('Build Solution') \n    {\n        bat \"\"\"\n        cd ProjectName\n        cd ConsoleApplication\n        dir\n        msbuild CompanyName.ProjectName.R6DBSync.sln\n\t\tcd ..\n\t\tcd WebApplication\n\t\tdir\n\t\tmsbuild CompanyName.ProjectName.MVC.sln\n\t\tmsbuild CompanyName.ProjectName.Report.Web.sln\n\t\tcd ..\n        \"\"\"\n    }\n    stage('Publish') \n    {\n        bat \"\"\"\n        cd ProjectName\n        cd ConsoleApplication\n        msbuild CompanyName.ProjectName.R6DBSync.sln  /p:outdir=\"D:\\\\PublishTemp\\\\_PublishedConsoles\\\\CompanyName.Console.ProjectName.R6DBSync pipeline\" /p:Configuration=Release /p:Platform=\"Any CPU\"\n        xcopy \"D:\\\\PublishTemp\\\\_PublishedConsoles\\\\CompanyName.Console.ProjectName.R6DBSync pipeline\" \"D:\\\\Console\\\\CompanyName.Console.ProjectName.R6DBSync\\\\bin\\\\Debug\" /E /H /C /I /Y /exclude:D:\\\\CICDTools\\\\Exclude.txt\n        del D:\\\\Console\\\\CompanyName.Console.ProjectName.R6DBSync\\\\bin\\\\Debug\\\\CompanyName.AA.dll\n        cd ..\n        cd WebApplication\n        msbuild /t:Rebuild CompanyName.ProjectName.MVC.sln  /p:outdir=\"D:\\\\PublishTemp\" /p:Configuration=Release /p:Platform=\"Any CPU\"\n\t\txcopy \"D:\\\\PublishTemp\\\\_PublishedWebsites\\\\CompanyName.ProjectName.MVC\" \"D:\\\\WebSites\\\\CompanyName.ProjectName.MVC\" /E /H /C /I /Y /exclude:D:\\\\CICDTools\\\\Exclude.txt\n\t\t\n\t\tmsbuild /t:Rebuild CompanyName.ProjectName.Report.Web.sln  /p:outdir=\"D:\\\\WebSites\\\\CompanyName.ProjectName.Report.Web\\\\bin\" /p:Configuration=Release /p:Platform=\"Any CPU\"\n\t\t\n\t\t\n\t\t\n        \"\"\"\n    }\n    stage('Restart Service') \n    {\n        bat \"\"\"\n        C:\\\\Windows\\\\System32\\\\inetsrv\\\\appcmd.exe stop site \"CompanyName.ProjectName.MVC\"\n\t\tC:\\\\Windows\\\\System32\\\\inetsrv\\\\appcmd.exe start site \"CompanyName.ProjectName.MVC\"\n\t\tC:\\\\Windows\\\\System32\\\\inetsrv\\\\appcmd.exe stop site \"CompanyName.ProjectName.Report.Web\"\n\t\tC:\\\\Windows\\\\System32\\\\inetsrv\\\\appcmd.exe start site \"CompanyName.ProjectName.Report.Web\"\n        \"\"\"\n    }\n    \n}\n```","source":"_posts/jenkins自動部屬WPF.md","raw":"---\ntitle: jenkins自動部屬WPF\ncatalog: true\ncomments: true\ntags:\n  - CICD\n  - WPF\n  - Jenkins\nabbrlink: 36138\ncategories: uncategorized\ndate: 2021-02-01 15:38:11\n---\n\n# 用Jenkins自動部屬WPF(FreeStyle軟體專案)\n## 環境\n安裝就不寫了，google jenkins然後下載下一步下一步就裝完了\n\n安裝完之後在網址列輸入localhost:8080應該會看到jenkin的歡迎畫面，如果沒有看到的話\n\n![localhost](localhost.PNG)\n\n可以在windows command 輸入\n```batch\nservices.msc\n```\n檢查服務有沒有執行了，如果沒有執行的話按右鍵啟動Jenkins服務\n\n![CheckServices](chkService.PNG)\n\n登入之後會看到主畫面，如果已經有設定過的話會看到目前有的設定有哪些程式目前的狀態怎麼樣\n![main](main.PNG)\n\n## 新增作業\njenkin大部分時間在用的功能就是一直執行自己定義好的作業，像我是設定了編譯、執行測試、發布到指定位置\n\n選主畫面的新增作業按紐，輸入這個作業的名稱之後，選建置Free-Style 軟體專案\n![new-1](new1.PNG)\n\n之後可以照著jenkins的項目去設定自己要執行的動作\n\n我的流程是: \n### 1.git pull 最新的程式\n![step1](Step1.PNG)\n\n在設定這個功能之前要先去\n  首頁 > 管理Jenkins > Global Tool Configuration 設定電腦上git的路徑\n  ![GlobalTool](globalTool.PNG)\n  ![SetGit](setGit.PNG)\n  \n### 2.刪除目前的工作區\n  ![step2](Step2.PNG)\n\n### 3.還原nuget套件\n在建置中執行 '執行Windwows批次指令'\nnuget restore ProjectName.sln\n\n### 4.編譯專案\n\n要執行這一個工作項目會需要裝一個jenkins的plugin\n  \n按左上角Jenkins logo回到主畫面後，選 管理jenkins > 管理外掛程式\n![manage](managePlugin.PNG)\n\n應該是選可用的tab然後搜尋 MSBUID就會找到了，但因為我已經安裝完了，所以在可用的裡面找不到，而是在已安裝裡\n![install](install.PNG)\n\n安裝完plugin之後要去Global Tool Configuration 設定MSBuild路徑\n![Set MSBuild](setMSBuild.PNG)\n\n都設定完之後再去設定新的作業中執行編譯專案的工作項目\n![step3](Step3.PNG)\n這裡常常會有一個問題是輸出訊息顯示:msbuild找不到專案檔，這個問題我後來是把jenkins裝在C磁碟機以外的地方就解決了，推測應該是權限問題造成的\n\n### 5.執行源碼檢測\n我們用的是SonarQube Community版本，在編譯專案的動作後面新增一個建置步驟 : 執行windows批次指令\n\n把SonarQube的Scanner放到指定路徑後設定環境變數\n\n```\nSonarScanner.MSBuild.exe begin /k:\"ProjectNameOnSonarQube\" /d:sonar.host.url=\"http://xx.xx.x.xx:9000\" /d:sonar.login=\"xxxxx818475a7953ce2d75c37edab09d383e9917\"\nmsbuild /t:Rebuild ProjectName.sln\nSonarScanner.MSBuild.exe end /d:sonar.login=\"xxxxx818475a7953ce2d75c37edab09d383e9917\"\n```\n\n\n### 6.執行測試\n執行這一步因為我是在編譯完之後透過執行Windows batch的方式去執行測試所以不用裝什麼奇怪的plugin\n\n但是要下載對應的單元測試執行程式，像我這裡是用NUnit3，所以要下載NUNIT3，透過圖片中的方式執行測試\nhttps://nunit.org/download/\n\n ![step4](Step4.PNG)\n\n### 7.輸出測試結果\n要在jenkins上看到執行測試的結果要裝一個jekins NUnit的plugin，做法就像上面安裝MSBUID一樣，不過不用設定NUnit的路徑，主要目的是要在新增作業時有Publish NUnit test result report的項目可以選擇\n ![step5](Step5.PNG)\n\n### 8.部屬到指定位置\n正常來說應該是要選圖片中的工作項目，讓jenkins執行完測試自動部屬檔案到指定位置，但是我的jenkins每次在設定這個動作需要的參數時一直crash，所以我是透過執行單元測試的方式，透過windows batch執行複製編譯完的檔案到指定目錄中\n![step5](Step5.PNG)\n\n![Publish](publish.PNG)\n\n因為之前有透過githook部屬程式，所以備份目前版本、停用服務、部屬、通知使用者...我幾乎都用windows batch完成了\n\n# 用Jenkins自動部屬WPF(PIPLINE)\n## 直接上Script\n```\nnode {\n    stage('Clean up the workspace environment.') \n    {\n        bat \"\"\"\n        dir\n        rmdir /q /s ProjectName\n        echo \"done\"\n        \"\"\"\n    }\n    stage('Clone Project') \n    {\n        bat \"\"\"\n        git clone http://ProjectName.git\n        cd ProjectName\n        git checkout uat\n        \"\"\"\n    }\n    stage('Publish RDLC file') \n    {\n        bat \"\"\"\n        xcopy \"D:\\\\JenkinsWorkSpace\\\\workspace\\\\CompanyName.ProjectName immediately\\\\ProjectName\\\\WebApplication\\\\CompanyName.ProjectName.Report\\\\*.rdlc\" \"D:\\\\ProjectName.Report.RDLC\" /H /C /I /Y /S\n        \"\"\"\n    }\n     stage('Nuget restore') \n    {\n        bat \"\"\"\n        cd ProjectName\n        cd ConsoleApplication\n\t\tdir\n        nuget restore CompanyName.ProjectName.R6DBSync.sln\n\t\tcd ..\n\t\tcd WebApplication\n\t\tdir\n\t\tnuget restore CompanyName.ProjectName.MVC.sln\n\t\tnuget restore CompanyName.ProjectName.Report.Web.sln\n\t\tcd ..\n        \"\"\"\n    }\n    stage('Build Solution') \n    {\n        bat \"\"\"\n        cd ProjectName\n        cd ConsoleApplication\n        dir\n        msbuild CompanyName.ProjectName.R6DBSync.sln\n\t\tcd ..\n\t\tcd WebApplication\n\t\tdir\n\t\tmsbuild CompanyName.ProjectName.MVC.sln\n\t\tmsbuild CompanyName.ProjectName.Report.Web.sln\n\t\tcd ..\n        \"\"\"\n    }\n    stage('Publish') \n    {\n        bat \"\"\"\n        cd ProjectName\n        cd ConsoleApplication\n        msbuild CompanyName.ProjectName.R6DBSync.sln  /p:outdir=\"D:\\\\PublishTemp\\\\_PublishedConsoles\\\\CompanyName.Console.ProjectName.R6DBSync pipeline\" /p:Configuration=Release /p:Platform=\"Any CPU\"\n        xcopy \"D:\\\\PublishTemp\\\\_PublishedConsoles\\\\CompanyName.Console.ProjectName.R6DBSync pipeline\" \"D:\\\\Console\\\\CompanyName.Console.ProjectName.R6DBSync\\\\bin\\\\Debug\" /E /H /C /I /Y /exclude:D:\\\\CICDTools\\\\Exclude.txt\n        del D:\\\\Console\\\\CompanyName.Console.ProjectName.R6DBSync\\\\bin\\\\Debug\\\\CompanyName.AA.dll\n        cd ..\n        cd WebApplication\n        msbuild /t:Rebuild CompanyName.ProjectName.MVC.sln  /p:outdir=\"D:\\\\PublishTemp\" /p:Configuration=Release /p:Platform=\"Any CPU\"\n\t\txcopy \"D:\\\\PublishTemp\\\\_PublishedWebsites\\\\CompanyName.ProjectName.MVC\" \"D:\\\\WebSites\\\\CompanyName.ProjectName.MVC\" /E /H /C /I /Y /exclude:D:\\\\CICDTools\\\\Exclude.txt\n\t\t\n\t\tmsbuild /t:Rebuild CompanyName.ProjectName.Report.Web.sln  /p:outdir=\"D:\\\\WebSites\\\\CompanyName.ProjectName.Report.Web\\\\bin\" /p:Configuration=Release /p:Platform=\"Any CPU\"\n\t\t\n\t\t\n\t\t\n        \"\"\"\n    }\n    stage('Restart Service') \n    {\n        bat \"\"\"\n        C:\\\\Windows\\\\System32\\\\inetsrv\\\\appcmd.exe stop site \"CompanyName.ProjectName.MVC\"\n\t\tC:\\\\Windows\\\\System32\\\\inetsrv\\\\appcmd.exe start site \"CompanyName.ProjectName.MVC\"\n\t\tC:\\\\Windows\\\\System32\\\\inetsrv\\\\appcmd.exe stop site \"CompanyName.ProjectName.Report.Web\"\n\t\tC:\\\\Windows\\\\System32\\\\inetsrv\\\\appcmd.exe start site \"CompanyName.ProjectName.Report.Web\"\n        \"\"\"\n    }\n    \n}\n```","slug":"jenkins自動部屬WPF","published":1,"updated":"2024-11-21T02:20:00.228Z","layout":"post","photos":[],"link":"","_id":"cm3xvfy8x0041ewi9tqzbek71","content":"<h1><span id=\"用jenkins自動部屬wpffreestyle軟體專案\">用Jenkins自動部屬WPF(FreeStyle軟體專案)</span></h1>\n<h2><span id=\"環境\">環境</span></h2>\n<p>安裝就不寫了，google jenkins然後下載下一步下一步就裝完了</p>\n<p>安裝完之後在網址列輸入localhost:8080應該會看到jenkin的歡迎畫面，如果沒有看到的話</p>\n<p><img src=\"localhost.PNG\" alt=\"localhost\"></p>\n<p>可以在windows command 輸入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">services.msc</span><br></pre></td></tr></table></figure>\n<p>檢查服務有沒有執行了，如果沒有執行的話按右鍵啟動Jenkins服務</p>\n<p><img src=\"chkService.PNG\" alt=\"CheckServices\"></p>\n<p>登入之後會看到主畫面，如果已經有設定過的話會看到目前有的設定有哪些程式目前的狀態怎麼樣<br>\n<img src=\"main.PNG\" alt=\"main\"></p>\n<h2><span id=\"新增作業\">新增作業</span></h2>\n<p>jenkin大部分時間在用的功能就是一直執行自己定義好的作業，像我是設定了編譯、執行測試、發布到指定位置</p>\n<p>選主畫面的新增作業按紐，輸入這個作業的名稱之後，選建置Free-Style 軟體專案<br>\n<img src=\"new1.PNG\" alt=\"new-1\"></p>\n<p>之後可以照著jenkins的項目去設定自己要執行的動作</p>\n<p>我的流程是:</p>\n<h3><span id=\"1git-pull-最新的程式\">1.git pull 最新的程式</span></h3>\n<p><img src=\"Step1.PNG\" alt=\"step1\"></p>\n<p>在設定這個功能之前要先去<br>\n首頁 &gt; 管理Jenkins &gt; Global Tool Configuration 設定電腦上git的路徑<br>\n<img src=\"globalTool.PNG\" alt=\"GlobalTool\"><br>\n<img src=\"setGit.PNG\" alt=\"SetGit\"></p>\n<h3><span id=\"2刪除目前的工作區\">2.刪除目前的工作區</span></h3>\n<p><img src=\"Step2.PNG\" alt=\"step2\"></p>\n<h3><span id=\"3還原nuget套件\">3.還原nuget套件</span></h3>\n<p>在建置中執行 '執行Windwows批次指令’<br>\nnuget restore ProjectName.sln</p>\n<h3><span id=\"4編譯專案\">4.編譯專案</span></h3>\n<p>要執行這一個工作項目會需要裝一個jenkins的plugin</p>\n<p>按左上角Jenkins logo回到主畫面後，選 管理jenkins &gt; 管理外掛程式<br>\n<img src=\"managePlugin.PNG\" alt=\"manage\"></p>\n<p>應該是選可用的tab然後搜尋 MSBUID就會找到了，但因為我已經安裝完了，所以在可用的裡面找不到，而是在已安裝裡<br>\n<img src=\"install.PNG\" alt=\"install\"></p>\n<p>安裝完plugin之後要去Global Tool Configuration 設定MSBuild路徑<br>\n<img src=\"setMSBuild.PNG\" alt=\"Set MSBuild\"></p>\n<p>都設定完之後再去設定新的作業中執行編譯專案的工作項目<br>\n<img src=\"Step3.PNG\" alt=\"step3\"><br>\n這裡常常會有一個問題是輸出訊息顯示:msbuild找不到專案檔，這個問題我後來是把jenkins裝在C磁碟機以外的地方就解決了，推測應該是權限問題造成的</p>\n<h3><span id=\"5執行源碼檢測\">5.執行源碼檢測</span></h3>\n<p>我們用的是SonarQube Community版本，在編譯專案的動作後面新增一個建置步驟 : 執行windows批次指令</p>\n<p>把SonarQube的Scanner放到指定路徑後設定環境變數</p>\n<figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SonarScanner.MSBuild.exe begin <span class=\"string\">/k</span>:<span class=\"string\">\"ProjectNameOnSonarQube\"</span> <span class=\"string\">/d</span><span class=\"function\">:sonar.host.url</span>=<span class=\"string\">\"http://xx.xx.x.xx:9000\"</span> <span class=\"string\">/d</span><span class=\"function\">:sonar.login</span>=<span class=\"string\">\"xxxxx818475a7953ce2d75c37edab09d383e9917\"</span></span><br><span class=\"line\">msbuild <span class=\"string\">/t</span><span class=\"function\">:Rebuild</span> ProjectName.sln</span><br><span class=\"line\">SonarScanner.MSBuild.exe end <span class=\"string\">/d</span><span class=\"function\">:sonar.login</span>=<span class=\"string\">\"xxxxx818475a7953ce2d75c37edab09d383e9917\"</span></span><br></pre></td></tr></table></figure>\n<h3><span id=\"6執行測試\">6.執行測試</span></h3>\n<p>執行這一步因為我是在編譯完之後透過執行Windows batch的方式去執行測試所以不用裝什麼奇怪的plugin</p>\n<p>但是要下載對應的單元測試執行程式，像我這裡是用NUnit3，所以要下載NUNIT3，透過圖片中的方式執行測試<br>\n<a href=\"https://nunit.org/download/\" target=\"_blank\" rel=\"noopener\">https://nunit.org/download/</a></p>\n<p><img src=\"Step4.PNG\" alt=\"step4\"></p>\n<h3><span id=\"7輸出測試結果\">7.輸出測試結果</span></h3>\n<p>要在jenkins上看到執行測試的結果要裝一個jekins NUnit的plugin，做法就像上面安裝MSBUID一樣，不過不用設定NUnit的路徑，主要目的是要在新增作業時有Publish NUnit test result report的項目可以選擇<br>\n<img src=\"Step5.PNG\" alt=\"step5\"></p>\n<h3><span id=\"8部屬到指定位置\">8.部屬到指定位置</span></h3>\n<p>正常來說應該是要選圖片中的工作項目，讓jenkins執行完測試自動部屬檔案到指定位置，但是我的jenkins每次在設定這個動作需要的參數時一直crash，所以我是透過執行單元測試的方式，透過windows batch執行複製編譯完的檔案到指定目錄中<br>\n<img src=\"Step5.PNG\" alt=\"step5\"></p>\n<p><img src=\"publish.PNG\" alt=\"Publish\"></p>\n<p>因為之前有透過githook部屬程式，所以備份目前版本、停用服務、部屬、通知使用者…我幾乎都用windows batch完成了</p>\n<h1><span id=\"用jenkins自動部屬wpfpipline\">用Jenkins自動部屬WPF(PIPLINE)</span></h1>\n<h2><span id=\"直接上script\">直接上Script</span></h2>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node &#123;</span><br><span class=\"line\">    stage(<span class=\"string\">'Clean up the workspace environment.'</span>) </span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        bat <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">        dir</span></span><br><span class=\"line\"><span class=\"string\">        rmdir /q /s ProjectName</span></span><br><span class=\"line\"><span class=\"string\">        echo \"done\"</span></span><br><span class=\"line\"><span class=\"string\">        \"\"\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    stage(<span class=\"string\">'Clone Project'</span>) </span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        bat <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">        git clone http://ProjectName.git</span></span><br><span class=\"line\"><span class=\"string\">        cd ProjectName</span></span><br><span class=\"line\"><span class=\"string\">        git checkout uat</span></span><br><span class=\"line\"><span class=\"string\">        \"\"\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    stage(<span class=\"string\">'Publish RDLC file'</span>) </span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        bat <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">        xcopy \"D:\\\\JenkinsWorkSpace\\\\workspace\\\\CompanyName.ProjectName immediately\\\\ProjectName\\\\WebApplication\\\\CompanyName.ProjectName.Report\\\\*.rdlc\" \"D:\\\\ProjectName.Report.RDLC\" /H /C /I /Y /S</span></span><br><span class=\"line\"><span class=\"string\">        \"\"\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">     stage(<span class=\"string\">'Nuget restore'</span>) </span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        bat <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">        cd ProjectName</span></span><br><span class=\"line\"><span class=\"string\">        cd ConsoleApplication</span></span><br><span class=\"line\"><span class=\"string\">\t\tdir</span></span><br><span class=\"line\"><span class=\"string\">        nuget restore CompanyName.ProjectName.R6DBSync.sln</span></span><br><span class=\"line\"><span class=\"string\">\t\tcd ..</span></span><br><span class=\"line\"><span class=\"string\">\t\tcd WebApplication</span></span><br><span class=\"line\"><span class=\"string\">\t\tdir</span></span><br><span class=\"line\"><span class=\"string\">\t\tnuget restore CompanyName.ProjectName.MVC.sln</span></span><br><span class=\"line\"><span class=\"string\">\t\tnuget restore CompanyName.ProjectName.Report.Web.sln</span></span><br><span class=\"line\"><span class=\"string\">\t\tcd ..</span></span><br><span class=\"line\"><span class=\"string\">        \"\"\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    stage(<span class=\"string\">'Build Solution'</span>) </span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        bat <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">        cd ProjectName</span></span><br><span class=\"line\"><span class=\"string\">        cd ConsoleApplication</span></span><br><span class=\"line\"><span class=\"string\">        dir</span></span><br><span class=\"line\"><span class=\"string\">        msbuild CompanyName.ProjectName.R6DBSync.sln</span></span><br><span class=\"line\"><span class=\"string\">\t\tcd ..</span></span><br><span class=\"line\"><span class=\"string\">\t\tcd WebApplication</span></span><br><span class=\"line\"><span class=\"string\">\t\tdir</span></span><br><span class=\"line\"><span class=\"string\">\t\tmsbuild CompanyName.ProjectName.MVC.sln</span></span><br><span class=\"line\"><span class=\"string\">\t\tmsbuild CompanyName.ProjectName.Report.Web.sln</span></span><br><span class=\"line\"><span class=\"string\">\t\tcd ..</span></span><br><span class=\"line\"><span class=\"string\">        \"\"\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    stage(<span class=\"string\">'Publish'</span>) </span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        bat <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">        cd ProjectName</span></span><br><span class=\"line\"><span class=\"string\">        cd ConsoleApplication</span></span><br><span class=\"line\"><span class=\"string\">        msbuild CompanyName.ProjectName.R6DBSync.sln  /p:outdir=\"D:\\\\PublishTemp\\\\_PublishedConsoles\\\\CompanyName.Console.ProjectName.R6DBSync pipeline\" /p:Configuration=Release /p:Platform=\"Any CPU\"</span></span><br><span class=\"line\"><span class=\"string\">        xcopy \"D:\\\\PublishTemp\\\\_PublishedConsoles\\\\CompanyName.Console.ProjectName.R6DBSync pipeline\" \"D:\\\\Console\\\\CompanyName.Console.ProjectName.R6DBSync\\\\bin\\\\Debug\" /E /H /C /I /Y /exclude:D:\\\\CICDTools\\\\Exclude.txt</span></span><br><span class=\"line\"><span class=\"string\">        del D:\\\\Console\\\\CompanyName.Console.ProjectName.R6DBSync\\\\bin\\\\Debug\\\\CompanyName.AA.dll</span></span><br><span class=\"line\"><span class=\"string\">        cd ..</span></span><br><span class=\"line\"><span class=\"string\">        cd WebApplication</span></span><br><span class=\"line\"><span class=\"string\">        msbuild /t:Rebuild CompanyName.ProjectName.MVC.sln  /p:outdir=\"D:\\\\PublishTemp\" /p:Configuration=Release /p:Platform=\"Any CPU\"</span></span><br><span class=\"line\"><span class=\"string\">\t\txcopy \"D:\\\\PublishTemp\\\\_PublishedWebsites\\\\CompanyName.ProjectName.MVC\" \"D:\\\\WebSites\\\\CompanyName.ProjectName.MVC\" /E /H /C /I /Y /exclude:D:\\\\CICDTools\\\\Exclude.txt</span></span><br><span class=\"line\"><span class=\"string\">\t\t</span></span><br><span class=\"line\"><span class=\"string\">\t\tmsbuild /t:Rebuild CompanyName.ProjectName.Report.Web.sln  /p:outdir=\"D:\\\\WebSites\\\\CompanyName.ProjectName.Report.Web\\\\bin\" /p:Configuration=Release /p:Platform=\"Any CPU\"</span></span><br><span class=\"line\"><span class=\"string\">\t\t</span></span><br><span class=\"line\"><span class=\"string\">\t\t</span></span><br><span class=\"line\"><span class=\"string\">\t\t</span></span><br><span class=\"line\"><span class=\"string\">        \"\"\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    stage(<span class=\"string\">'Restart Service'</span>) </span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        bat <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">        C:\\\\Windows\\\\System32\\\\inetsrv\\\\appcmd.exe stop site \"CompanyName.ProjectName.MVC\"</span></span><br><span class=\"line\"><span class=\"string\">\t\tC:\\\\Windows\\\\System32\\\\inetsrv\\\\appcmd.exe start site \"CompanyName.ProjectName.MVC\"</span></span><br><span class=\"line\"><span class=\"string\">\t\tC:\\\\Windows\\\\System32\\\\inetsrv\\\\appcmd.exe stop site \"CompanyName.ProjectName.Report.Web\"</span></span><br><span class=\"line\"><span class=\"string\">\t\tC:\\\\Windows\\\\System32\\\\inetsrv\\\\appcmd.exe start site \"CompanyName.ProjectName.Report.Web\"</span></span><br><span class=\"line\"><span class=\"string\">        \"\"\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1>用Jenkins自動部屬WPF(FreeStyle軟體專案)</h1>\n<h2>環境</h2>\n<p>安裝就不寫了，google jenkins然後下載下一步下一步就裝完了</p>\n<p>安裝完之後在網址列輸入localhost:8080應該會看到jenkin的歡迎畫面，如果沒有看到的話</p>\n<p><img src=\"localhost.PNG\" alt=\"localhost\"></p>\n<p>可以在windows command 輸入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">services.msc</span><br></pre></td></tr></table></figure>\n<p>檢查服務有沒有執行了，如果沒有執行的話按右鍵啟動Jenkins服務</p>\n<p><img src=\"chkService.PNG\" alt=\"CheckServices\"></p>\n<p>登入之後會看到主畫面，如果已經有設定過的話會看到目前有的設定有哪些程式目前的狀態怎麼樣<br>\n<img src=\"main.PNG\" alt=\"main\"></p>\n<h2>新增作業</h2>\n<p>jenkin大部分時間在用的功能就是一直執行自己定義好的作業，像我是設定了編譯、執行測試、發布到指定位置</p>\n<p>選主畫面的新增作業按紐，輸入這個作業的名稱之後，選建置Free-Style 軟體專案<br>\n<img src=\"new1.PNG\" alt=\"new-1\"></p>\n<p>之後可以照著jenkins的項目去設定自己要執行的動作</p>\n<p>我的流程是:</p>\n<h3>1.git pull 最新的程式</h3>\n<p><img src=\"Step1.PNG\" alt=\"step1\"></p>\n<p>在設定這個功能之前要先去<br>\n首頁 &gt; 管理Jenkins &gt; Global Tool Configuration 設定電腦上git的路徑<br>\n<img src=\"globalTool.PNG\" alt=\"GlobalTool\"><br>\n<img src=\"setGit.PNG\" alt=\"SetGit\"></p>\n<h3>2.刪除目前的工作區</h3>\n<p><img src=\"Step2.PNG\" alt=\"step2\"></p>\n<h3>3.還原nuget套件</h3>\n<p>在建置中執行 '執行Windwows批次指令’<br>\nnuget restore ProjectName.sln</p>\n<h3>4.編譯專案</h3>\n<p>要執行這一個工作項目會需要裝一個jenkins的plugin</p>\n<p>按左上角Jenkins logo回到主畫面後，選 管理jenkins &gt; 管理外掛程式<br>\n<img src=\"managePlugin.PNG\" alt=\"manage\"></p>\n<p>應該是選可用的tab然後搜尋 MSBUID就會找到了，但因為我已經安裝完了，所以在可用的裡面找不到，而是在已安裝裡<br>\n<img src=\"install.PNG\" alt=\"install\"></p>\n<p>安裝完plugin之後要去Global Tool Configuration 設定MSBuild路徑<br>\n<img src=\"setMSBuild.PNG\" alt=\"Set MSBuild\"></p>\n<p>都設定完之後再去設定新的作業中執行編譯專案的工作項目<br>\n<img src=\"Step3.PNG\" alt=\"step3\"><br>\n這裡常常會有一個問題是輸出訊息顯示:msbuild找不到專案檔，這個問題我後來是把jenkins裝在C磁碟機以外的地方就解決了，推測應該是權限問題造成的</p>\n<h3>5.執行源碼檢測</h3>\n<p>我們用的是SonarQube Community版本，在編譯專案的動作後面新增一個建置步驟 : 執行windows批次指令</p>\n<p>把SonarQube的Scanner放到指定路徑後設定環境變數</p>\n<figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SonarScanner.MSBuild.exe begin <span class=\"string\">/k</span>:<span class=\"string\">\"ProjectNameOnSonarQube\"</span> <span class=\"string\">/d</span><span class=\"function\">:sonar.host.url</span>=<span class=\"string\">\"http://xx.xx.x.xx:9000\"</span> <span class=\"string\">/d</span><span class=\"function\">:sonar.login</span>=<span class=\"string\">\"xxxxx818475a7953ce2d75c37edab09d383e9917\"</span></span><br><span class=\"line\">msbuild <span class=\"string\">/t</span><span class=\"function\">:Rebuild</span> ProjectName.sln</span><br><span class=\"line\">SonarScanner.MSBuild.exe end <span class=\"string\">/d</span><span class=\"function\">:sonar.login</span>=<span class=\"string\">\"xxxxx818475a7953ce2d75c37edab09d383e9917\"</span></span><br></pre></td></tr></table></figure>\n<h3>6.執行測試</h3>\n<p>執行這一步因為我是在編譯完之後透過執行Windows batch的方式去執行測試所以不用裝什麼奇怪的plugin</p>\n<p>但是要下載對應的單元測試執行程式，像我這裡是用NUnit3，所以要下載NUNIT3，透過圖片中的方式執行測試<br>\n<a href=\"https://nunit.org/download/\" target=\"_blank\" rel=\"noopener\">https://nunit.org/download/</a></p>\n<p><img src=\"Step4.PNG\" alt=\"step4\"></p>\n<h3>7.輸出測試結果</h3>\n<p>要在jenkins上看到執行測試的結果要裝一個jekins NUnit的plugin，做法就像上面安裝MSBUID一樣，不過不用設定NUnit的路徑，主要目的是要在新增作業時有Publish NUnit test result report的項目可以選擇<br>\n<img src=\"Step5.PNG\" alt=\"step5\"></p>\n<h3>8.部屬到指定位置</h3>\n<p>正常來說應該是要選圖片中的工作項目，讓jenkins執行完測試自動部屬檔案到指定位置，但是我的jenkins每次在設定這個動作需要的參數時一直crash，所以我是透過執行單元測試的方式，透過windows batch執行複製編譯完的檔案到指定目錄中<br>\n<img src=\"Step5.PNG\" alt=\"step5\"></p>\n<p><img src=\"publish.PNG\" alt=\"Publish\"></p>\n<p>因為之前有透過githook部屬程式，所以備份目前版本、停用服務、部屬、通知使用者…我幾乎都用windows batch完成了</p>\n<h1>用Jenkins自動部屬WPF(PIPLINE)</h1>\n<h2>直接上Script</h2>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node &#123;</span><br><span class=\"line\">    stage(<span class=\"string\">'Clean up the workspace environment.'</span>) </span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        bat <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">        dir</span></span><br><span class=\"line\"><span class=\"string\">        rmdir /q /s ProjectName</span></span><br><span class=\"line\"><span class=\"string\">        echo \"done\"</span></span><br><span class=\"line\"><span class=\"string\">        \"\"\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    stage(<span class=\"string\">'Clone Project'</span>) </span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        bat <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">        git clone http://ProjectName.git</span></span><br><span class=\"line\"><span class=\"string\">        cd ProjectName</span></span><br><span class=\"line\"><span class=\"string\">        git checkout uat</span></span><br><span class=\"line\"><span class=\"string\">        \"\"\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    stage(<span class=\"string\">'Publish RDLC file'</span>) </span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        bat <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">        xcopy \"D:\\\\JenkinsWorkSpace\\\\workspace\\\\CompanyName.ProjectName immediately\\\\ProjectName\\\\WebApplication\\\\CompanyName.ProjectName.Report\\\\*.rdlc\" \"D:\\\\ProjectName.Report.RDLC\" /H /C /I /Y /S</span></span><br><span class=\"line\"><span class=\"string\">        \"\"\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">     stage(<span class=\"string\">'Nuget restore'</span>) </span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        bat <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">        cd ProjectName</span></span><br><span class=\"line\"><span class=\"string\">        cd ConsoleApplication</span></span><br><span class=\"line\"><span class=\"string\">\t\tdir</span></span><br><span class=\"line\"><span class=\"string\">        nuget restore CompanyName.ProjectName.R6DBSync.sln</span></span><br><span class=\"line\"><span class=\"string\">\t\tcd ..</span></span><br><span class=\"line\"><span class=\"string\">\t\tcd WebApplication</span></span><br><span class=\"line\"><span class=\"string\">\t\tdir</span></span><br><span class=\"line\"><span class=\"string\">\t\tnuget restore CompanyName.ProjectName.MVC.sln</span></span><br><span class=\"line\"><span class=\"string\">\t\tnuget restore CompanyName.ProjectName.Report.Web.sln</span></span><br><span class=\"line\"><span class=\"string\">\t\tcd ..</span></span><br><span class=\"line\"><span class=\"string\">        \"\"\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    stage(<span class=\"string\">'Build Solution'</span>) </span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        bat <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">        cd ProjectName</span></span><br><span class=\"line\"><span class=\"string\">        cd ConsoleApplication</span></span><br><span class=\"line\"><span class=\"string\">        dir</span></span><br><span class=\"line\"><span class=\"string\">        msbuild CompanyName.ProjectName.R6DBSync.sln</span></span><br><span class=\"line\"><span class=\"string\">\t\tcd ..</span></span><br><span class=\"line\"><span class=\"string\">\t\tcd WebApplication</span></span><br><span class=\"line\"><span class=\"string\">\t\tdir</span></span><br><span class=\"line\"><span class=\"string\">\t\tmsbuild CompanyName.ProjectName.MVC.sln</span></span><br><span class=\"line\"><span class=\"string\">\t\tmsbuild CompanyName.ProjectName.Report.Web.sln</span></span><br><span class=\"line\"><span class=\"string\">\t\tcd ..</span></span><br><span class=\"line\"><span class=\"string\">        \"\"\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    stage(<span class=\"string\">'Publish'</span>) </span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        bat <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">        cd ProjectName</span></span><br><span class=\"line\"><span class=\"string\">        cd ConsoleApplication</span></span><br><span class=\"line\"><span class=\"string\">        msbuild CompanyName.ProjectName.R6DBSync.sln  /p:outdir=\"D:\\\\PublishTemp\\\\_PublishedConsoles\\\\CompanyName.Console.ProjectName.R6DBSync pipeline\" /p:Configuration=Release /p:Platform=\"Any CPU\"</span></span><br><span class=\"line\"><span class=\"string\">        xcopy \"D:\\\\PublishTemp\\\\_PublishedConsoles\\\\CompanyName.Console.ProjectName.R6DBSync pipeline\" \"D:\\\\Console\\\\CompanyName.Console.ProjectName.R6DBSync\\\\bin\\\\Debug\" /E /H /C /I /Y /exclude:D:\\\\CICDTools\\\\Exclude.txt</span></span><br><span class=\"line\"><span class=\"string\">        del D:\\\\Console\\\\CompanyName.Console.ProjectName.R6DBSync\\\\bin\\\\Debug\\\\CompanyName.AA.dll</span></span><br><span class=\"line\"><span class=\"string\">        cd ..</span></span><br><span class=\"line\"><span class=\"string\">        cd WebApplication</span></span><br><span class=\"line\"><span class=\"string\">        msbuild /t:Rebuild CompanyName.ProjectName.MVC.sln  /p:outdir=\"D:\\\\PublishTemp\" /p:Configuration=Release /p:Platform=\"Any CPU\"</span></span><br><span class=\"line\"><span class=\"string\">\t\txcopy \"D:\\\\PublishTemp\\\\_PublishedWebsites\\\\CompanyName.ProjectName.MVC\" \"D:\\\\WebSites\\\\CompanyName.ProjectName.MVC\" /E /H /C /I /Y /exclude:D:\\\\CICDTools\\\\Exclude.txt</span></span><br><span class=\"line\"><span class=\"string\">\t\t</span></span><br><span class=\"line\"><span class=\"string\">\t\tmsbuild /t:Rebuild CompanyName.ProjectName.Report.Web.sln  /p:outdir=\"D:\\\\WebSites\\\\CompanyName.ProjectName.Report.Web\\\\bin\" /p:Configuration=Release /p:Platform=\"Any CPU\"</span></span><br><span class=\"line\"><span class=\"string\">\t\t</span></span><br><span class=\"line\"><span class=\"string\">\t\t</span></span><br><span class=\"line\"><span class=\"string\">\t\t</span></span><br><span class=\"line\"><span class=\"string\">        \"\"\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    stage(<span class=\"string\">'Restart Service'</span>) </span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        bat <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">        C:\\\\Windows\\\\System32\\\\inetsrv\\\\appcmd.exe stop site \"CompanyName.ProjectName.MVC\"</span></span><br><span class=\"line\"><span class=\"string\">\t\tC:\\\\Windows\\\\System32\\\\inetsrv\\\\appcmd.exe start site \"CompanyName.ProjectName.MVC\"</span></span><br><span class=\"line\"><span class=\"string\">\t\tC:\\\\Windows\\\\System32\\\\inetsrv\\\\appcmd.exe stop site \"CompanyName.ProjectName.Report.Web\"</span></span><br><span class=\"line\"><span class=\"string\">\t\tC:\\\\Windows\\\\System32\\\\inetsrv\\\\appcmd.exe start site \"CompanyName.ProjectName.Report.Web\"</span></span><br><span class=\"line\"><span class=\"string\">        \"\"\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":".net framework 注入依賴","catalog":true,"comments":1,"abbrlink":33124,"date":"2021-01-15T09:59:30.000Z","_content":"\n## 在 . Net framework 實現注入依賴\n\n### 函數庫\n在開發.net core專案的時候，如果要使用注入依賴的話可以透過nuget 安裝 Microsoft.Extensions.DependencyInjection\n但是.net framework卻沒有官方的注入依賴容器的函數庫可以用，我們可以用第三方的函數庫－ninject\n\n![Ninject](ninject.PNG)\n\n### DI Container\n#### 指定介面、方法\n透過DI容器取得注入依賴，在透過DI容器取得注入依賴的實例，實現依賴反轉原則\n```csharp\nusing Ninject;\nusing System;\n\nnamespace ConsoleApp2\n{\n   class Program\n    {\n        public static void Main(string[] args)\n        {\n            IKernel Container = new StandardKernel();\n            Container.Bind<IAnimal>().To<Bird>();\n            IAnimal instance = Container.Get<Bird>();\n            instance.Bark();\n            Console.ReadLine();\n        }\n\n        public interface IAnimal\n        {\n            string Name { get; set; }\n            void Bark();\n        }\n\n        public class Bird : IAnimal\n        {\n            public string Name { get; set; }\n            public void Bark()\n            {\n                Console.WriteLine($\"{Name} : joo\");\n            }\n        }\n    }\n}\n```\n\n#### 透過容器注入物件之間的依賴\n如果沒有透過容器注入依賴的話，就要在主程式裡面new 兩個物件的實例，還要把Dog物件的實例丟到Leo物件裡面當做建構子的參數，如果今天物件數量很多或是參數很多的時候，就會不好維護\n```csharp\nusing System;\n\nnamespace ConsoleApp2\n{\n    class Program\n    {\n        public static void Main(string[] args)\n        {\n            Leo me = new Leo(new Dog());\n            me.ShowMyPet();\n        }\n    }\n    public class Leo\n    {\n        Dog _dog;\n        public Leo(Dog dog)\n        {\n            _dog = dog;\n        }\n\n        public void ShowMyPet()\n        {\n            _dog.Bark();\n        }\n    }\n\n    public class Dog\n    {\n        public void Bark()\n        {\n            Console.WriteLine(\"woof\");\n        }\n    }\n}\n```\n\n如果透過容器注入依賴的話只要把需要的物件(Dog)注入到容器裡面，取得需要的物件(Leo)時，產生Leo物件實例的時候，Leo物件實例會去容器裡面找自己建構子需要的物件存不存在，存在的話自動把他取出來，但是如果不存在的話會發生例外\n```csharp\nusing Ninject;\nusing System;\n\nnamespace ConsoleApp2\n{\n   class Program\n    {\n        static void Main(string[] args)\n        {\n            IKernel container = new StandardKernel();\n            container.Bind<IAnimal>().To<Dog>();\n            container.Bind<IPeople>().To<Leo>();\n            //從DI容器中取出Leo物件實例，Leo物件實例自動在DI容器中找到需要的Dog物件\n            IPeople peopleInstance = container.Get<Leo>();\n            peopleInstance.ShowMyPet();\n            Console.ReadLine();\n        }\n    }\n    public interface IAnimal\n    {\n        void Bark();\n    }\n\n    public class Dog : IAnimal\n    {\n        public void Bark()\n        {\n            Console.WriteLine(\"woof\");\n        }\n    }\n\n    public interface IPeople\n    {\n        string Name { get; set; }\n        void ShowMyPet();\n    }\n\n    public class Leo : IPeople\n    {\n        IAnimal _pet;\n\n        public Leo(IAnimal pet)\n        {\n            _pet = pet;\n        }\n\n        public string Name { get; set; }\n\n        public void ShowMyPet()\n        {\n            _pet.Bark();\n        }\n    }\n}\n```\n\n#### Multi Injection\nLeo類別建構子參數是IAnimal陣列，只要把Leo類別需要的IAnimal跟對應的類別注入到DI容器中，在產生Leo類別實例的時候，就會自動把所有DI容器理符合條件的東西都產生出來\n```csharp\nusing Ninject;\nusing System;\n\nnamespace ConsoleApp2\n{\n   class Program\n    {\n        static void Main(string[] args)\n        {\n            IKernel container = new StandardKernel();\n            container.Bind<IAnimal>().To<Dog>();\n            container.Bind<IAnimal>().To<Cat>();\n            IPeople peopleInstance = container.Get<Leo>();\n            peopleInstance.ShowAllPet();\n            Console.ReadLine();\n        }\n    }\n\n    public interface IAnimal\n    {\n        void Barking();\n    }\n\n    public class Dog : IAnimal\n    {\n        public void Barking()\n        {\n            Console.WriteLine(\"Dog barking\");\n        }\n    }\n\n    public class Cat : IAnimal\n    {\n        public void Barking()\n        {\n            Console.WriteLine(\"Cat barking\");\n        }\n    }\n\n    public interface IPeople\n    {\n        void ShowAllPet();\n    }\n\n    public class Leo: IPeople\n    {\n        IAnimal[] _allAnimal;\n        public Leo(IAnimal[] allAnimal)\n        {\n            _allAnimal = allAnimal;\n        }\n\n        public void ShowAllPet()\n        {\n            foreach (var item in _allAnimal)\n                item.Barking();\n        }\n    }\n}\n```\n\n\n### 注入容器時設定屬性值\n偶爾在產生物件實例的時候會希望可以先設定好某些屬性值，這時候可以使用 WithPropertyValue()方法\n\n這邊要注意一定要Bind物件 to self才能正常產生物件實例不然從容器Get物件實例的時候會發生例外\n```csharp\nclass Program\n{\n    static void Main(string[] args)\n    {\n        IKernel container = new StandardKernel();\n        container.Bind<Dog>().ToSelf()\n                 .WithPropertyValue(\"Name\", \"coffee\")\n                 .WithPropertyValue(\"Age\", 2)\n\n        Dog instance = container.Get<Dog>();\n        Console.ReadLine();\n    }\n}\n```\n有設定屬性值當然也有設定建構子參數，這時候可以使用 WithConstructorArgument()方法\n\n一樣要注意Bind物件to Self避免產生實力時發生例外\n```csharp\nclass Program\n{\n    static void Main(string[] args)\n    {\n        IKernel container = new StandardKernel();\n        container.Bind<Dog>().ToSelf()\n                 .WithConstructorArgument(\"Name\", \"coffee\")\n                 .WithConstructorArgument(\"Age\", 2);\n\n        Dog instance = container.Get<Dog>();\n        Console.ReadLine();\n    }\n}\n```\n\n### 幫注入容器中的物件命名\n在某些情況下會在DI容器中注入好幾個一模一樣的類別，可能只有某個屬性值不一樣而已，這時候可以使用DI容器的Named()方法\n\n```csharp\nclass Program\n{\n    static void Main(string[] args)\n    {\n        IKernel container = new StandardKernel();\n        container.Bind<Dog>().Named(\"coffee\")\n                 .WithConstructorArgument(\"Age\", 1);\n\n        container.Bind<Dog>().Named(\"lulu\")\n                 .WithConstructorArgument(\"Age\", 2);\n\n        Dog coffeeInstance = container.Get<Dog>(\"coffee\");\n        Dog luluInstance = container.Get<Dog>(\"lulu\");\n\n        Console.ReadLine();\n    }\n}\n```","source":"_posts/net-framework-注入依賴.md","raw":"---\ntitle: .net framework 注入依賴\ncatalog: true\ncomments: true\ntags:\n  - C#\n  - DI\n  - .net framework\nabbrlink: 33124\ncategories: uncategorized\ndate: 2021-01-15 17:59:30\n---\n\n## 在 . Net framework 實現注入依賴\n\n### 函數庫\n在開發.net core專案的時候，如果要使用注入依賴的話可以透過nuget 安裝 Microsoft.Extensions.DependencyInjection\n但是.net framework卻沒有官方的注入依賴容器的函數庫可以用，我們可以用第三方的函數庫－ninject\n\n![Ninject](ninject.PNG)\n\n### DI Container\n#### 指定介面、方法\n透過DI容器取得注入依賴，在透過DI容器取得注入依賴的實例，實現依賴反轉原則\n```csharp\nusing Ninject;\nusing System;\n\nnamespace ConsoleApp2\n{\n   class Program\n    {\n        public static void Main(string[] args)\n        {\n            IKernel Container = new StandardKernel();\n            Container.Bind<IAnimal>().To<Bird>();\n            IAnimal instance = Container.Get<Bird>();\n            instance.Bark();\n            Console.ReadLine();\n        }\n\n        public interface IAnimal\n        {\n            string Name { get; set; }\n            void Bark();\n        }\n\n        public class Bird : IAnimal\n        {\n            public string Name { get; set; }\n            public void Bark()\n            {\n                Console.WriteLine($\"{Name} : joo\");\n            }\n        }\n    }\n}\n```\n\n#### 透過容器注入物件之間的依賴\n如果沒有透過容器注入依賴的話，就要在主程式裡面new 兩個物件的實例，還要把Dog物件的實例丟到Leo物件裡面當做建構子的參數，如果今天物件數量很多或是參數很多的時候，就會不好維護\n```csharp\nusing System;\n\nnamespace ConsoleApp2\n{\n    class Program\n    {\n        public static void Main(string[] args)\n        {\n            Leo me = new Leo(new Dog());\n            me.ShowMyPet();\n        }\n    }\n    public class Leo\n    {\n        Dog _dog;\n        public Leo(Dog dog)\n        {\n            _dog = dog;\n        }\n\n        public void ShowMyPet()\n        {\n            _dog.Bark();\n        }\n    }\n\n    public class Dog\n    {\n        public void Bark()\n        {\n            Console.WriteLine(\"woof\");\n        }\n    }\n}\n```\n\n如果透過容器注入依賴的話只要把需要的物件(Dog)注入到容器裡面，取得需要的物件(Leo)時，產生Leo物件實例的時候，Leo物件實例會去容器裡面找自己建構子需要的物件存不存在，存在的話自動把他取出來，但是如果不存在的話會發生例外\n```csharp\nusing Ninject;\nusing System;\n\nnamespace ConsoleApp2\n{\n   class Program\n    {\n        static void Main(string[] args)\n        {\n            IKernel container = new StandardKernel();\n            container.Bind<IAnimal>().To<Dog>();\n            container.Bind<IPeople>().To<Leo>();\n            //從DI容器中取出Leo物件實例，Leo物件實例自動在DI容器中找到需要的Dog物件\n            IPeople peopleInstance = container.Get<Leo>();\n            peopleInstance.ShowMyPet();\n            Console.ReadLine();\n        }\n    }\n    public interface IAnimal\n    {\n        void Bark();\n    }\n\n    public class Dog : IAnimal\n    {\n        public void Bark()\n        {\n            Console.WriteLine(\"woof\");\n        }\n    }\n\n    public interface IPeople\n    {\n        string Name { get; set; }\n        void ShowMyPet();\n    }\n\n    public class Leo : IPeople\n    {\n        IAnimal _pet;\n\n        public Leo(IAnimal pet)\n        {\n            _pet = pet;\n        }\n\n        public string Name { get; set; }\n\n        public void ShowMyPet()\n        {\n            _pet.Bark();\n        }\n    }\n}\n```\n\n#### Multi Injection\nLeo類別建構子參數是IAnimal陣列，只要把Leo類別需要的IAnimal跟對應的類別注入到DI容器中，在產生Leo類別實例的時候，就會自動把所有DI容器理符合條件的東西都產生出來\n```csharp\nusing Ninject;\nusing System;\n\nnamespace ConsoleApp2\n{\n   class Program\n    {\n        static void Main(string[] args)\n        {\n            IKernel container = new StandardKernel();\n            container.Bind<IAnimal>().To<Dog>();\n            container.Bind<IAnimal>().To<Cat>();\n            IPeople peopleInstance = container.Get<Leo>();\n            peopleInstance.ShowAllPet();\n            Console.ReadLine();\n        }\n    }\n\n    public interface IAnimal\n    {\n        void Barking();\n    }\n\n    public class Dog : IAnimal\n    {\n        public void Barking()\n        {\n            Console.WriteLine(\"Dog barking\");\n        }\n    }\n\n    public class Cat : IAnimal\n    {\n        public void Barking()\n        {\n            Console.WriteLine(\"Cat barking\");\n        }\n    }\n\n    public interface IPeople\n    {\n        void ShowAllPet();\n    }\n\n    public class Leo: IPeople\n    {\n        IAnimal[] _allAnimal;\n        public Leo(IAnimal[] allAnimal)\n        {\n            _allAnimal = allAnimal;\n        }\n\n        public void ShowAllPet()\n        {\n            foreach (var item in _allAnimal)\n                item.Barking();\n        }\n    }\n}\n```\n\n\n### 注入容器時設定屬性值\n偶爾在產生物件實例的時候會希望可以先設定好某些屬性值，這時候可以使用 WithPropertyValue()方法\n\n這邊要注意一定要Bind物件 to self才能正常產生物件實例不然從容器Get物件實例的時候會發生例外\n```csharp\nclass Program\n{\n    static void Main(string[] args)\n    {\n        IKernel container = new StandardKernel();\n        container.Bind<Dog>().ToSelf()\n                 .WithPropertyValue(\"Name\", \"coffee\")\n                 .WithPropertyValue(\"Age\", 2)\n\n        Dog instance = container.Get<Dog>();\n        Console.ReadLine();\n    }\n}\n```\n有設定屬性值當然也有設定建構子參數，這時候可以使用 WithConstructorArgument()方法\n\n一樣要注意Bind物件to Self避免產生實力時發生例外\n```csharp\nclass Program\n{\n    static void Main(string[] args)\n    {\n        IKernel container = new StandardKernel();\n        container.Bind<Dog>().ToSelf()\n                 .WithConstructorArgument(\"Name\", \"coffee\")\n                 .WithConstructorArgument(\"Age\", 2);\n\n        Dog instance = container.Get<Dog>();\n        Console.ReadLine();\n    }\n}\n```\n\n### 幫注入容器中的物件命名\n在某些情況下會在DI容器中注入好幾個一模一樣的類別，可能只有某個屬性值不一樣而已，這時候可以使用DI容器的Named()方法\n\n```csharp\nclass Program\n{\n    static void Main(string[] args)\n    {\n        IKernel container = new StandardKernel();\n        container.Bind<Dog>().Named(\"coffee\")\n                 .WithConstructorArgument(\"Age\", 1);\n\n        container.Bind<Dog>().Named(\"lulu\")\n                 .WithConstructorArgument(\"Age\", 2);\n\n        Dog coffeeInstance = container.Get<Dog>(\"coffee\");\n        Dog luluInstance = container.Get<Dog>(\"lulu\");\n\n        Console.ReadLine();\n    }\n}\n```","slug":"net-framework-注入依賴","published":1,"updated":"2024-11-21T02:20:00.242Z","layout":"post","photos":[],"link":"","_id":"cm3xvfy8z0044ewi9a7ms7jnq","content":"<h2><span id=\"在-net-framework-實現注入依賴\">在 . Net framework 實現注入依賴</span></h2>\n<h3><span id=\"函數庫\">函數庫</span></h3>\n<p><a href=\"http://xn--3dsy24erjv.net\" target=\"_blank\" rel=\"noopener\">在開發.net</a> core專案的時候，如果要使用注入依賴的話可以透過nuget 安裝 Microsoft.Extensions.DependencyInjection<br>\n<a href=\"http://xn--gqq717c.net\" target=\"_blank\" rel=\"noopener\">但是.net</a> framework卻沒有官方的注入依賴容器的函數庫可以用，我們可以用第三方的函數庫－ninject</p>\n<p><img src=\"ninject.PNG\" alt=\"Ninject\"></p>\n<h3><span id=\"di-container\">DI Container</span></h3>\n<h4><span id=\"指定介面-方法\">指定介面、方法</span></h4>\n<p>透過DI容器取得注入依賴，在透過DI容器取得注入依賴的實例，實現依賴反轉原則</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> Ninject;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">ConsoleApp2</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">   <span class=\"keyword\">class</span> <span class=\"title\">Program</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            IKernel Container = <span class=\"keyword\">new</span> StandardKernel();</span><br><span class=\"line\">            Container.Bind&lt;IAnimal&gt;().To&lt;Bird&gt;();</span><br><span class=\"line\">            IAnimal instance = Container.Get&lt;Bird&gt;();</span><br><span class=\"line\">            instance.Bark();</span><br><span class=\"line\">            Console.ReadLine();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title\">IAnimal</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">string</span> Name &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Bark</span>(<span class=\"params\"></span>)</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Bird</span> : <span class=\"title\">IAnimal</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> Name &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Bark</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>            &#123;</span><br><span class=\"line\">                Console.WriteLine(<span class=\"string\">$\"<span class=\"subst\">&#123;Name&#125;</span> : joo\"</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4><span id=\"透過容器注入物件之間的依賴\">透過容器注入物件之間的依賴</span></h4>\n<p>如果沒有透過容器注入依賴的話，就要在主程式裡面new 兩個物件的實例，還要把Dog物件的實例丟到Leo物件裡面當做建構子的參數，如果今天物件數量很多或是參數很多的時候，就會不好維護</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">ConsoleApp2</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">class</span> <span class=\"title\">Program</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            Leo me = <span class=\"keyword\">new</span> Leo(<span class=\"keyword\">new</span> Dog());</span><br><span class=\"line\">            me.ShowMyPet();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Leo</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Dog _dog;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Leo</span>(<span class=\"params\">Dog dog</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            _dog = dog;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">ShowMyPet</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            _dog.Bark();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Dog</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Bark</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            Console.WriteLine(<span class=\"string\">\"woof\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>如果透過容器注入依賴的話只要把需要的物件(Dog)注入到容器裡面，取得需要的物件(Leo)時，產生Leo物件實例的時候，Leo物件實例會去容器裡面找自己建構子需要的物件存不存在，存在的話自動把他取出來，但是如果不存在的話會發生例外</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> Ninject;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">ConsoleApp2</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">   <span class=\"keyword\">class</span> <span class=\"title\">Program</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            IKernel container = <span class=\"keyword\">new</span> StandardKernel();</span><br><span class=\"line\">            container.Bind&lt;IAnimal&gt;().To&lt;Dog&gt;();</span><br><span class=\"line\">            container.Bind&lt;IPeople&gt;().To&lt;Leo&gt;();</span><br><span class=\"line\">            <span class=\"comment\">//從DI容器中取出Leo物件實例，Leo物件實例自動在DI容器中找到需要的Dog物件</span></span><br><span class=\"line\">            IPeople peopleInstance = container.Get&lt;Leo&gt;();</span><br><span class=\"line\">            peopleInstance.ShowMyPet();</span><br><span class=\"line\">            Console.ReadLine();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title\">IAnimal</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Bark</span>(<span class=\"params\"></span>)</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Dog</span> : <span class=\"title\">IAnimal</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Bark</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            Console.WriteLine(<span class=\"string\">\"woof\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title\">IPeople</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">string</span> Name &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">ShowMyPet</span>(<span class=\"params\"></span>)</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Leo</span> : <span class=\"title\">IPeople</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        IAnimal _pet;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Leo</span>(<span class=\"params\">IAnimal pet</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            _pet = pet;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> Name &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">ShowMyPet</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            _pet.Bark();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4><span id=\"multi-injection\">Multi Injection</span></h4>\n<p>Leo類別建構子參數是IAnimal陣列，只要把Leo類別需要的IAnimal跟對應的類別注入到DI容器中，在產生Leo類別實例的時候，就會自動把所有DI容器理符合條件的東西都產生出來</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> Ninject;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">ConsoleApp2</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">   <span class=\"keyword\">class</span> <span class=\"title\">Program</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            IKernel container = <span class=\"keyword\">new</span> StandardKernel();</span><br><span class=\"line\">            container.Bind&lt;IAnimal&gt;().To&lt;Dog&gt;();</span><br><span class=\"line\">            container.Bind&lt;IAnimal&gt;().To&lt;Cat&gt;();</span><br><span class=\"line\">            IPeople peopleInstance = container.Get&lt;Leo&gt;();</span><br><span class=\"line\">            peopleInstance.ShowAllPet();</span><br><span class=\"line\">            Console.ReadLine();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title\">IAnimal</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Barking</span>(<span class=\"params\"></span>)</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Dog</span> : <span class=\"title\">IAnimal</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Barking</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            Console.WriteLine(<span class=\"string\">\"Dog barking\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Cat</span> : <span class=\"title\">IAnimal</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Barking</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            Console.WriteLine(<span class=\"string\">\"Cat barking\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title\">IPeople</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">ShowAllPet</span>(<span class=\"params\"></span>)</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Leo</span>: <span class=\"title\">IPeople</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        IAnimal[] _allAnimal;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Leo</span>(<span class=\"params\">IAnimal[] allAnimal</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            _allAnimal = allAnimal;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">ShowAllPet</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">foreach</span> (<span class=\"keyword\">var</span> item <span class=\"keyword\">in</span> _allAnimal)</span><br><span class=\"line\">                item.Barking();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3><span id=\"注入容器時設定屬性值\">注入容器時設定屬性值</span></h3>\n<p>偶爾在產生物件實例的時候會希望可以先設定好某些屬性值，這時候可以使用 WithPropertyValue()方法</p>\n<p>這邊要注意一定要Bind物件 to self才能正常產生物件實例不然從容器Get物件實例的時候會發生例外</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">Program</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        IKernel container = <span class=\"keyword\">new</span> StandardKernel();</span><br><span class=\"line\">        container.Bind&lt;Dog&gt;().ToSelf()</span><br><span class=\"line\">                 .WithPropertyValue(<span class=\"string\">\"Name\"</span>, <span class=\"string\">\"coffee\"</span>)</span><br><span class=\"line\">                 .WithPropertyValue(<span class=\"string\">\"Age\"</span>, <span class=\"number\">2</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        Dog instance = container.Get&lt;Dog&gt;();</span><br><span class=\"line\">        Console.ReadLine();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>有設定屬性值當然也有設定建構子參數，這時候可以使用 WithConstructorArgument()方法</p>\n<p>一樣要注意Bind物件to Self避免產生實力時發生例外</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">Program</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        IKernel container = <span class=\"keyword\">new</span> StandardKernel();</span><br><span class=\"line\">        container.Bind&lt;Dog&gt;().ToSelf()</span><br><span class=\"line\">                 .WithConstructorArgument(<span class=\"string\">\"Name\"</span>, <span class=\"string\">\"coffee\"</span>)</span><br><span class=\"line\">                 .WithConstructorArgument(<span class=\"string\">\"Age\"</span>, <span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        Dog instance = container.Get&lt;Dog&gt;();</span><br><span class=\"line\">        Console.ReadLine();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3><span id=\"幫注入容器中的物件命名\">幫注入容器中的物件命名</span></h3>\n<p>在某些情況下會在DI容器中注入好幾個一模一樣的類別，可能只有某個屬性值不一樣而已，這時候可以使用DI容器的Named()方法</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">Program</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        IKernel container = <span class=\"keyword\">new</span> StandardKernel();</span><br><span class=\"line\">        container.Bind&lt;Dog&gt;().Named(<span class=\"string\">\"coffee\"</span>)</span><br><span class=\"line\">                 .WithConstructorArgument(<span class=\"string\">\"Age\"</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        container.Bind&lt;Dog&gt;().Named(<span class=\"string\">\"lulu\"</span>)</span><br><span class=\"line\">                 .WithConstructorArgument(<span class=\"string\">\"Age\"</span>, <span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        Dog coffeeInstance = container.Get&lt;Dog&gt;(<span class=\"string\">\"coffee\"</span>);</span><br><span class=\"line\">        Dog luluInstance = container.Get&lt;Dog&gt;(<span class=\"string\">\"lulu\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        Console.ReadLine();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h2>在 . Net framework 實現注入依賴</h2>\n<h3>函數庫</h3>\n<p><a href=\"http://xn--3dsy24erjv.net\" target=\"_blank\" rel=\"noopener\">在開發.net</a> core專案的時候，如果要使用注入依賴的話可以透過nuget 安裝 Microsoft.Extensions.DependencyInjection<br>\n<a href=\"http://xn--gqq717c.net\" target=\"_blank\" rel=\"noopener\">但是.net</a> framework卻沒有官方的注入依賴容器的函數庫可以用，我們可以用第三方的函數庫－ninject</p>\n<p><img src=\"ninject.PNG\" alt=\"Ninject\"></p>\n<h3>DI Container</h3>\n<h4>指定介面、方法</h4>\n<p>透過DI容器取得注入依賴，在透過DI容器取得注入依賴的實例，實現依賴反轉原則</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> Ninject;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">ConsoleApp2</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">   <span class=\"keyword\">class</span> <span class=\"title\">Program</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            IKernel Container = <span class=\"keyword\">new</span> StandardKernel();</span><br><span class=\"line\">            Container.Bind&lt;IAnimal&gt;().To&lt;Bird&gt;();</span><br><span class=\"line\">            IAnimal instance = Container.Get&lt;Bird&gt;();</span><br><span class=\"line\">            instance.Bark();</span><br><span class=\"line\">            Console.ReadLine();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title\">IAnimal</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">string</span> Name &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Bark</span>(<span class=\"params\"></span>)</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Bird</span> : <span class=\"title\">IAnimal</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> Name &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Bark</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>            &#123;</span><br><span class=\"line\">                Console.WriteLine(<span class=\"string\">$\"<span class=\"subst\">&#123;Name&#125;</span> : joo\"</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4>透過容器注入物件之間的依賴</h4>\n<p>如果沒有透過容器注入依賴的話，就要在主程式裡面new 兩個物件的實例，還要把Dog物件的實例丟到Leo物件裡面當做建構子的參數，如果今天物件數量很多或是參數很多的時候，就會不好維護</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">ConsoleApp2</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">class</span> <span class=\"title\">Program</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            Leo me = <span class=\"keyword\">new</span> Leo(<span class=\"keyword\">new</span> Dog());</span><br><span class=\"line\">            me.ShowMyPet();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Leo</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Dog _dog;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Leo</span>(<span class=\"params\">Dog dog</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            _dog = dog;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">ShowMyPet</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            _dog.Bark();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Dog</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Bark</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            Console.WriteLine(<span class=\"string\">\"woof\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>如果透過容器注入依賴的話只要把需要的物件(Dog)注入到容器裡面，取得需要的物件(Leo)時，產生Leo物件實例的時候，Leo物件實例會去容器裡面找自己建構子需要的物件存不存在，存在的話自動把他取出來，但是如果不存在的話會發生例外</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> Ninject;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">ConsoleApp2</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">   <span class=\"keyword\">class</span> <span class=\"title\">Program</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            IKernel container = <span class=\"keyword\">new</span> StandardKernel();</span><br><span class=\"line\">            container.Bind&lt;IAnimal&gt;().To&lt;Dog&gt;();</span><br><span class=\"line\">            container.Bind&lt;IPeople&gt;().To&lt;Leo&gt;();</span><br><span class=\"line\">            <span class=\"comment\">//從DI容器中取出Leo物件實例，Leo物件實例自動在DI容器中找到需要的Dog物件</span></span><br><span class=\"line\">            IPeople peopleInstance = container.Get&lt;Leo&gt;();</span><br><span class=\"line\">            peopleInstance.ShowMyPet();</span><br><span class=\"line\">            Console.ReadLine();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title\">IAnimal</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Bark</span>(<span class=\"params\"></span>)</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Dog</span> : <span class=\"title\">IAnimal</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Bark</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            Console.WriteLine(<span class=\"string\">\"woof\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title\">IPeople</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">string</span> Name &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">ShowMyPet</span>(<span class=\"params\"></span>)</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Leo</span> : <span class=\"title\">IPeople</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        IAnimal _pet;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Leo</span>(<span class=\"params\">IAnimal pet</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            _pet = pet;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> Name &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">ShowMyPet</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            _pet.Bark();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4>Multi Injection</h4>\n<p>Leo類別建構子參數是IAnimal陣列，只要把Leo類別需要的IAnimal跟對應的類別注入到DI容器中，在產生Leo類別實例的時候，就會自動把所有DI容器理符合條件的東西都產生出來</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> Ninject;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">ConsoleApp2</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">   <span class=\"keyword\">class</span> <span class=\"title\">Program</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            IKernel container = <span class=\"keyword\">new</span> StandardKernel();</span><br><span class=\"line\">            container.Bind&lt;IAnimal&gt;().To&lt;Dog&gt;();</span><br><span class=\"line\">            container.Bind&lt;IAnimal&gt;().To&lt;Cat&gt;();</span><br><span class=\"line\">            IPeople peopleInstance = container.Get&lt;Leo&gt;();</span><br><span class=\"line\">            peopleInstance.ShowAllPet();</span><br><span class=\"line\">            Console.ReadLine();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title\">IAnimal</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Barking</span>(<span class=\"params\"></span>)</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Dog</span> : <span class=\"title\">IAnimal</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Barking</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            Console.WriteLine(<span class=\"string\">\"Dog barking\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Cat</span> : <span class=\"title\">IAnimal</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Barking</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            Console.WriteLine(<span class=\"string\">\"Cat barking\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title\">IPeople</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">ShowAllPet</span>(<span class=\"params\"></span>)</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Leo</span>: <span class=\"title\">IPeople</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        IAnimal[] _allAnimal;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Leo</span>(<span class=\"params\">IAnimal[] allAnimal</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            _allAnimal = allAnimal;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">ShowAllPet</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">foreach</span> (<span class=\"keyword\">var</span> item <span class=\"keyword\">in</span> _allAnimal)</span><br><span class=\"line\">                item.Barking();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3>注入容器時設定屬性值</h3>\n<p>偶爾在產生物件實例的時候會希望可以先設定好某些屬性值，這時候可以使用 WithPropertyValue()方法</p>\n<p>這邊要注意一定要Bind物件 to self才能正常產生物件實例不然從容器Get物件實例的時候會發生例外</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">Program</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        IKernel container = <span class=\"keyword\">new</span> StandardKernel();</span><br><span class=\"line\">        container.Bind&lt;Dog&gt;().ToSelf()</span><br><span class=\"line\">                 .WithPropertyValue(<span class=\"string\">\"Name\"</span>, <span class=\"string\">\"coffee\"</span>)</span><br><span class=\"line\">                 .WithPropertyValue(<span class=\"string\">\"Age\"</span>, <span class=\"number\">2</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        Dog instance = container.Get&lt;Dog&gt;();</span><br><span class=\"line\">        Console.ReadLine();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>有設定屬性值當然也有設定建構子參數，這時候可以使用 WithConstructorArgument()方法</p>\n<p>一樣要注意Bind物件to Self避免產生實力時發生例外</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">Program</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        IKernel container = <span class=\"keyword\">new</span> StandardKernel();</span><br><span class=\"line\">        container.Bind&lt;Dog&gt;().ToSelf()</span><br><span class=\"line\">                 .WithConstructorArgument(<span class=\"string\">\"Name\"</span>, <span class=\"string\">\"coffee\"</span>)</span><br><span class=\"line\">                 .WithConstructorArgument(<span class=\"string\">\"Age\"</span>, <span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        Dog instance = container.Get&lt;Dog&gt;();</span><br><span class=\"line\">        Console.ReadLine();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3>幫注入容器中的物件命名</h3>\n<p>在某些情況下會在DI容器中注入好幾個一模一樣的類別，可能只有某個屬性值不一樣而已，這時候可以使用DI容器的Named()方法</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">Program</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"keyword\">string</span>[] args</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>    &#123;</span><br><span class=\"line\">        IKernel container = <span class=\"keyword\">new</span> StandardKernel();</span><br><span class=\"line\">        container.Bind&lt;Dog&gt;().Named(<span class=\"string\">\"coffee\"</span>)</span><br><span class=\"line\">                 .WithConstructorArgument(<span class=\"string\">\"Age\"</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        container.Bind&lt;Dog&gt;().Named(<span class=\"string\">\"lulu\"</span>)</span><br><span class=\"line\">                 .WithConstructorArgument(<span class=\"string\">\"Age\"</span>, <span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        Dog coffeeInstance = container.Get&lt;Dog&gt;(<span class=\"string\">\"coffee\"</span>);</span><br><span class=\"line\">        Dog luluInstance = container.Get&lt;Dog&gt;(<span class=\"string\">\"lulu\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        Console.ReadLine();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"npm windows安裝套件、執行","catalog":true,"comments":1,"abbrlink":743,"date":"2024-11-26T02:15:36.000Z","_content":"\n# npm windows安裝套件、執行\n\n\n以yarn為範例 : \n``` cmd\nyarn install\n\n'yarn' 不是內部或外部命令、可執行的程式或批次檔。\n```\n\n移除套件\n```\nnpm uninstall -g yarn\n```\n\n安裝\n```\nnpm install --global yarn\n```\n\n安裝完還是找不到 : 沒有設定環境變數\n```\nyarn install\n\n'yarn' 不是內部或外部命令、可執行的程式或批次檔。\n```\n\n\n找出yarn安裝在windows上的路徑\n```\nnpm list -g yarn\nC:\\Users\\YangLe\\AppData\\Roaming\\npm\n```\n\n用找到的路徑直yarn安裝依賴\n```\nC:\\Users\\YangLe\\AppData\\Roaming\\npm\\yarn install\n```\n","source":"_posts/npm-windows安裝套件、執行.md","raw":"---\ntitle: npm windows安裝套件、執行\ncatalog: true\ncomments: true\ntags:\n  - npm\n  - yarn\n  - hexo\nabbrlink: 743\ncategories: uncategorized\ndate: 2024-11-26 10:15:36\n---\n\n# npm windows安裝套件、執行\n\n\n以yarn為範例 : \n``` cmd\nyarn install\n\n'yarn' 不是內部或外部命令、可執行的程式或批次檔。\n```\n\n移除套件\n```\nnpm uninstall -g yarn\n```\n\n安裝\n```\nnpm install --global yarn\n```\n\n安裝完還是找不到 : 沒有設定環境變數\n```\nyarn install\n\n'yarn' 不是內部或外部命令、可執行的程式或批次檔。\n```\n\n\n找出yarn安裝在windows上的路徑\n```\nnpm list -g yarn\nC:\\Users\\YangLe\\AppData\\Roaming\\npm\n```\n\n用找到的路徑直yarn安裝依賴\n```\nC:\\Users\\YangLe\\AppData\\Roaming\\npm\\yarn install\n```\n","slug":"npm-windows安裝套件、執行","published":1,"updated":"2024-11-26T02:24:57.387Z","layout":"post","photos":[],"link":"","_id":"cm3xvfy900047ewi91e4c7fvj","content":"<h1><span id=\"npm-windows安裝套件-執行\">npm windows安裝套件、執行</span></h1>\n<p>以yarn為範例 :</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yarn install</span><br><span class=\"line\"></span><br><span class=\"line\">'yarn' 不是內部或外部命令、可執行的程式或批次檔。</span><br></pre></td></tr></table></figure>\n<p>移除套件</p>\n<figure class=\"highlight coffeescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">npm</span> uninstall -g yarn</span><br></pre></td></tr></table></figure>\n<p>安裝</p>\n<figure class=\"highlight coffeescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">npm</span> install --<span class=\"built_in\">global</span> yarn</span><br></pre></td></tr></table></figure>\n<p>安裝完還是找不到 : 沒有設定環境變數</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">yarn</span> install</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'yarn'</span> 不是內部或外部命令、可執行的程式或批次檔。</span><br></pre></td></tr></table></figure>\n<p>找出yarn安裝在windows上的路徑</p>\n<figure class=\"highlight taggerscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm list -g yarn</span><br><span class=\"line\">C:<span class=\"symbol\">\\U</span>sers<span class=\"symbol\">\\Y</span>angLe<span class=\"symbol\">\\A</span>ppData<span class=\"symbol\">\\R</span>oaming<span class=\"symbol\">\\n</span>pm</span><br></pre></td></tr></table></figure>\n<p>用找到的路徑直yarn安裝依賴</p>\n<figure class=\"highlight taggerscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">C:<span class=\"symbol\">\\U</span>sers<span class=\"symbol\">\\Y</span>angLe<span class=\"symbol\">\\A</span>ppData<span class=\"symbol\">\\R</span>oaming<span class=\"symbol\">\\n</span>pm<span class=\"symbol\">\\y</span>arn install</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1>npm windows安裝套件、執行</h1>\n<p>以yarn為範例 :</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yarn install</span><br><span class=\"line\"></span><br><span class=\"line\">'yarn' 不是內部或外部命令、可執行的程式或批次檔。</span><br></pre></td></tr></table></figure>\n<p>移除套件</p>\n<figure class=\"highlight coffeescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">npm</span> uninstall -g yarn</span><br></pre></td></tr></table></figure>\n<p>安裝</p>\n<figure class=\"highlight coffeescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">npm</span> install --<span class=\"built_in\">global</span> yarn</span><br></pre></td></tr></table></figure>\n<p>安裝完還是找不到 : 沒有設定環境變數</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">yarn</span> install</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'yarn'</span> 不是內部或外部命令、可執行的程式或批次檔。</span><br></pre></td></tr></table></figure>\n<p>找出yarn安裝在windows上的路徑</p>\n<figure class=\"highlight taggerscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm list -g yarn</span><br><span class=\"line\">C:<span class=\"symbol\">\\U</span>sers<span class=\"symbol\">\\Y</span>angLe<span class=\"symbol\">\\A</span>ppData<span class=\"symbol\">\\R</span>oaming<span class=\"symbol\">\\n</span>pm</span><br></pre></td></tr></table></figure>\n<p>用找到的路徑直yarn安裝依賴</p>\n<figure class=\"highlight taggerscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">C:<span class=\"symbol\">\\U</span>sers<span class=\"symbol\">\\Y</span>angLe<span class=\"symbol\">\\A</span>ppData<span class=\"symbol\">\\R</span>oaming<span class=\"symbol\">\\n</span>pm<span class=\"symbol\">\\y</span>arn install</span><br></pre></td></tr></table></figure>\n"},{"title":"yolo","catalog":true,"comments":1,"abbrlink":65067,"date":"2020-08-11T09:47:50.000Z","_content":"## 參考來源\n我是參考這篇文章 [[機器學習 ML NOTE]YOLO!!!如何簡單使用YOLO訓練出自己的物件偵測!!! (Windows+Anaconda)](https://medium.com/%E9%9B%9E%E9%9B%9E%E8%88%87%E5%85%94%E5%85%94%E7%9A%84%E5%B7%A5%E7%A8%8B%E4%B8%96%E7%95%8C/%E6%A9%9F%E5%99%A8%E5%AD%B8%E7%BF%92-ml-note-yolo-%E5%88%A9%E7%94%A8%E5%BD%B1%E5%83%8F%E8%BE%A8%E8%AD%98%E5%81%9A%E7%89%A9%E4%BB%B6%E5%81%B5%E6%B8%AC-object-detection-%E7%9A%84%E6%8A%80%E8%A1%93-3ad34a4cac70)\n\n\n## 遇到問題\n### Tensorflow\ntensorflow目前只支援到python3.7，python3.7還只能裝版本2.0.0以下的tensorflow，因為tensorflow 2.0.0 開始移除了一個 tensorflow.contrib 函數庫\n#### 檢查目前使用版本\n```python\npip --version\n# pip 20.1.1 from c:\\users\\UserName\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\pip (python 3.7)\n# 如果不是3.7可以把環境變數的python、pip改成3.7的路徑\n```\n\n因為要用python3.7所以\n#### 檢查是不是已經裝了tensorflow\n```python\npip list \n# Package        Version\n# -------------------------\n# gast           0.3.3\n# pip            20.1.1\n# tensorflow     1.14.0\n# ..........\n```\n#### 如果不小心裝了比較高版本的tensorflow，要先移除掉再重裝比較舊的版本\n```python\npip uninstall tensorflow\npip install tensorflow==1.14.0\n```\n\n---\n## 執行\n如果.\\darkflow\\sample_img\\下有一個out的資料夾，裡面有標記圖片中的物件的話就是成功了\n### 用訓練好的模型辨識圖片\n```python\nC:\\Users\\UserName\\AppData\\Local\\Programs\\Python\\Python37\\python.exe flow --model cfg/yolo.cfg --load bin/yolov2.weights --imgdir sample_img/\n```\n### 用訓練好的模型辨識攝影機\n```python\nC:\\Users\\UserName\\AppData\\Local\\Programs\\Python\\Python37\\python.exe  flow --model cfg/yolo.cfg --load bin/yolov2.weights --demo camera --saveVideo\n```\n\n---\n## 標記資料\n### 準備環境(labelimg)\n```python\ngit clone https://github.com/tzutalin/labelImg\ncd lableimg\n\npip install resources\npip install requests\npip install staty\npip install lxml\n\npython lableimg.py\n```\n### 可能會遇到的問題 : No module named 'libs.resources'\n```python \n# 執行下面指令，再把產生出來的resources.py複製到專案的.\\labelImg\\libs下\npyrcc5 -o resources.py resources.qrc\n```\n\n### 可能會遇到的問題 : pyrcc5 not found\n```python\n# 執行'pyrcc5 -o ...'時可能會發生這個例外，原因是因為沒有把pyrcc5加到環境變數裡面\n# 可以把對應目錄下的程式家到環境變數'pyrcc5'裡面\nC:\\Users\\UserName\\AppData\\Local\\Programs\\Python\\Python37\\Scripts\\pyrcc5.exe\n\n# 或是就直接用pyrcc5.exe執行\nC:\\Users\\UserName\\AppData\\Local\\Programs\\Python\\Python37\\Scripts\\pyrcc5.exe -o resources.py resources.qrc\n```\n環境都準備好就可以開始用labelimg標記資料\n```python\nC:\\Users\\UserName\\AppData\\Local\\Programs\\Python\\Python37\\python.exe D:\\Backup\\UserName\\Desktop\\Workspace\\labelImg\\labelImg.py\n```\n\n---\n## 修改訓練相關設定\n### config\nconfig我是跟作者一樣用tiny-yolo.cfg : .\\darkflow\\cfg\\tiny-yolo.cfg，裡面有幾個地方要照自己標記的資料去修改\n#### convolutional\ntiny-yolo.cfg裡應該只會有一行########這樣的東西，把####下的第二個[convolutional]中的filters改成 : 5*(5 + 標記資料時的label數量)<br>\nex : 我標記3個label，所以filter要改成 : 40 ( 5 * (5 + 3))\n#### classes\n把####下的[region]中的classes改成標記資料時的label數量\n\n### label.txt\n把內容改成標記資料時的label\n\n### coco.names\n把內容改成標記資料時的label\n\n---\n## 開始訓練\n```python \n# python flow --model [modelPath] --train --dataset [Labeling Image Path] --annotation [LabelImageResultPath]\n\nC:\\Users\\UserName\\AppData\\Local\\Programs\\Python\\Python37\\python flow --model cfg/tiny-yolo.cfg --train --dataset D:\\Backup\\UserName\\Desktop\\image\\traindata --annotation D:\\Backup\\UserName\\Desktop\\Workspace\\labelImg\\leodata\n```\n### 從某個階段繼續訓練\n```python\n# python flow --model [model.cfg] --load -1 --train --dataset [image path] --annotation [annotation path]\n# -1是default的最後一個check point\nC:\\Users\\UserName\\AppData\\Local\\Programs\\Python\\Python37\\python flow --model cfg/tiny-yolo.cfg --load -1 --train --dataset D:\\Backup\\UserName\\Desktop\\image\\traindata --annotation D:\\Backup\\UserName\\Desktop\\Workspace\\labelImg\\leodata\n```\n\n---\n## 一些參數(待確認)\n### Batch (.\\darkflow\\darkflow\\defaults.py)\nself.define('batch', 16, 'batch size')\nbatch_size越大，訓練速度越快但是可能會用很多記憶體(單次epoch=(全部訓練樣本/batchsize)/iteration=1)\nbatch_size太小可能會underfitting\n\n### epoch (.\\darkflow\\darkflow\\defaults.py)\nself.define('epoch', 1000, 'number of epoch')\nepoch：1個epoch等於使用訓練集中的全部樣本訓練一次，一個完整資料集通過神經網路一次並返回稱為一次epoch","source":"_posts/yolo.md","raw":"---\ntitle: yolo\ncatalog: true\ncomments: true\ntags:\n  - python\n  - yolo\nabbrlink: 65067\ncategories: uncategorized\ndate: 2020-08-11 17:47:50\n---\n## 參考來源\n我是參考這篇文章 [[機器學習 ML NOTE]YOLO!!!如何簡單使用YOLO訓練出自己的物件偵測!!! (Windows+Anaconda)](https://medium.com/%E9%9B%9E%E9%9B%9E%E8%88%87%E5%85%94%E5%85%94%E7%9A%84%E5%B7%A5%E7%A8%8B%E4%B8%96%E7%95%8C/%E6%A9%9F%E5%99%A8%E5%AD%B8%E7%BF%92-ml-note-yolo-%E5%88%A9%E7%94%A8%E5%BD%B1%E5%83%8F%E8%BE%A8%E8%AD%98%E5%81%9A%E7%89%A9%E4%BB%B6%E5%81%B5%E6%B8%AC-object-detection-%E7%9A%84%E6%8A%80%E8%A1%93-3ad34a4cac70)\n\n\n## 遇到問題\n### Tensorflow\ntensorflow目前只支援到python3.7，python3.7還只能裝版本2.0.0以下的tensorflow，因為tensorflow 2.0.0 開始移除了一個 tensorflow.contrib 函數庫\n#### 檢查目前使用版本\n```python\npip --version\n# pip 20.1.1 from c:\\users\\UserName\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\pip (python 3.7)\n# 如果不是3.7可以把環境變數的python、pip改成3.7的路徑\n```\n\n因為要用python3.7所以\n#### 檢查是不是已經裝了tensorflow\n```python\npip list \n# Package        Version\n# -------------------------\n# gast           0.3.3\n# pip            20.1.1\n# tensorflow     1.14.0\n# ..........\n```\n#### 如果不小心裝了比較高版本的tensorflow，要先移除掉再重裝比較舊的版本\n```python\npip uninstall tensorflow\npip install tensorflow==1.14.0\n```\n\n---\n## 執行\n如果.\\darkflow\\sample_img\\下有一個out的資料夾，裡面有標記圖片中的物件的話就是成功了\n### 用訓練好的模型辨識圖片\n```python\nC:\\Users\\UserName\\AppData\\Local\\Programs\\Python\\Python37\\python.exe flow --model cfg/yolo.cfg --load bin/yolov2.weights --imgdir sample_img/\n```\n### 用訓練好的模型辨識攝影機\n```python\nC:\\Users\\UserName\\AppData\\Local\\Programs\\Python\\Python37\\python.exe  flow --model cfg/yolo.cfg --load bin/yolov2.weights --demo camera --saveVideo\n```\n\n---\n## 標記資料\n### 準備環境(labelimg)\n```python\ngit clone https://github.com/tzutalin/labelImg\ncd lableimg\n\npip install resources\npip install requests\npip install staty\npip install lxml\n\npython lableimg.py\n```\n### 可能會遇到的問題 : No module named 'libs.resources'\n```python \n# 執行下面指令，再把產生出來的resources.py複製到專案的.\\labelImg\\libs下\npyrcc5 -o resources.py resources.qrc\n```\n\n### 可能會遇到的問題 : pyrcc5 not found\n```python\n# 執行'pyrcc5 -o ...'時可能會發生這個例外，原因是因為沒有把pyrcc5加到環境變數裡面\n# 可以把對應目錄下的程式家到環境變數'pyrcc5'裡面\nC:\\Users\\UserName\\AppData\\Local\\Programs\\Python\\Python37\\Scripts\\pyrcc5.exe\n\n# 或是就直接用pyrcc5.exe執行\nC:\\Users\\UserName\\AppData\\Local\\Programs\\Python\\Python37\\Scripts\\pyrcc5.exe -o resources.py resources.qrc\n```\n環境都準備好就可以開始用labelimg標記資料\n```python\nC:\\Users\\UserName\\AppData\\Local\\Programs\\Python\\Python37\\python.exe D:\\Backup\\UserName\\Desktop\\Workspace\\labelImg\\labelImg.py\n```\n\n---\n## 修改訓練相關設定\n### config\nconfig我是跟作者一樣用tiny-yolo.cfg : .\\darkflow\\cfg\\tiny-yolo.cfg，裡面有幾個地方要照自己標記的資料去修改\n#### convolutional\ntiny-yolo.cfg裡應該只會有一行########這樣的東西，把####下的第二個[convolutional]中的filters改成 : 5*(5 + 標記資料時的label數量)<br>\nex : 我標記3個label，所以filter要改成 : 40 ( 5 * (5 + 3))\n#### classes\n把####下的[region]中的classes改成標記資料時的label數量\n\n### label.txt\n把內容改成標記資料時的label\n\n### coco.names\n把內容改成標記資料時的label\n\n---\n## 開始訓練\n```python \n# python flow --model [modelPath] --train --dataset [Labeling Image Path] --annotation [LabelImageResultPath]\n\nC:\\Users\\UserName\\AppData\\Local\\Programs\\Python\\Python37\\python flow --model cfg/tiny-yolo.cfg --train --dataset D:\\Backup\\UserName\\Desktop\\image\\traindata --annotation D:\\Backup\\UserName\\Desktop\\Workspace\\labelImg\\leodata\n```\n### 從某個階段繼續訓練\n```python\n# python flow --model [model.cfg] --load -1 --train --dataset [image path] --annotation [annotation path]\n# -1是default的最後一個check point\nC:\\Users\\UserName\\AppData\\Local\\Programs\\Python\\Python37\\python flow --model cfg/tiny-yolo.cfg --load -1 --train --dataset D:\\Backup\\UserName\\Desktop\\image\\traindata --annotation D:\\Backup\\UserName\\Desktop\\Workspace\\labelImg\\leodata\n```\n\n---\n## 一些參數(待確認)\n### Batch (.\\darkflow\\darkflow\\defaults.py)\nself.define('batch', 16, 'batch size')\nbatch_size越大，訓練速度越快但是可能會用很多記憶體(單次epoch=(全部訓練樣本/batchsize)/iteration=1)\nbatch_size太小可能會underfitting\n\n### epoch (.\\darkflow\\darkflow\\defaults.py)\nself.define('epoch', 1000, 'number of epoch')\nepoch：1個epoch等於使用訓練集中的全部樣本訓練一次，一個完整資料集通過神經網路一次並返回稱為一次epoch","slug":"yolo","published":1,"updated":"2024-11-21T02:20:00.250Z","layout":"post","photos":[],"link":"","_id":"cm3xvfy91004bewi9wyloc58f","content":"<h2><span id=\"參考來源\">參考來源</span></h2>\n<p>我是參考這篇文章 <a href=\"https://medium.com/%E9%9B%9E%E9%9B%9E%E8%88%87%E5%85%94%E5%85%94%E7%9A%84%E5%B7%A5%E7%A8%8B%E4%B8%96%E7%95%8C/%E6%A9%9F%E5%99%A8%E5%AD%B8%E7%BF%92-ml-note-yolo-%E5%88%A9%E7%94%A8%E5%BD%B1%E5%83%8F%E8%BE%A8%E8%AD%98%E5%81%9A%E7%89%A9%E4%BB%B6%E5%81%B5%E6%B8%AC-object-detection-%E7%9A%84%E6%8A%80%E8%A1%93-3ad34a4cac70\" target=\"_blank\" rel=\"noopener\">[機器學習 ML NOTE]YOLO!!!如何簡單使用YOLO訓練出自己的物件偵測!!! (Windows+Anaconda)</a></p>\n<h2><span id=\"遇到問題\">遇到問題</span></h2>\n<h3><span id=\"tensorflow\">Tensorflow</span></h3>\n<p>tensorflow目前只支援到python3.7，python3.7還只能裝版本2.0.0以下的tensorflow，因為tensorflow 2.0.0 開始移除了一個 tensorflow.contrib 函數庫</p>\n<h4><span id=\"檢查目前使用版本\">檢查目前使用版本</span></h4>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip --version</span><br><span class=\"line\"><span class=\"comment\"># pip 20.1.1 from c:\\users\\UserName\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\pip (python 3.7)</span></span><br><span class=\"line\"><span class=\"comment\"># 如果不是3.7可以把環境變數的python、pip改成3.7的路徑</span></span><br></pre></td></tr></table></figure>\n<p>因為要用python3.7所以</p>\n<h4><span id=\"檢查是不是已經裝了tensorflow\">檢查是不是已經裝了tensorflow</span></h4>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip list </span><br><span class=\"line\"><span class=\"comment\"># Package        Version</span></span><br><span class=\"line\"><span class=\"comment\"># -------------------------</span></span><br><span class=\"line\"><span class=\"comment\"># gast           0.3.3</span></span><br><span class=\"line\"><span class=\"comment\"># pip            20.1.1</span></span><br><span class=\"line\"><span class=\"comment\"># tensorflow     1.14.0</span></span><br><span class=\"line\"><span class=\"comment\"># ..........</span></span><br></pre></td></tr></table></figure>\n<h4><span id=\"如果不小心裝了比較高版本的tensorflow要先移除掉再重裝比較舊的版本\">如果不小心裝了比較高版本的tensorflow，要先移除掉再重裝比較舊的版本</span></h4>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip uninstall tensorflow</span><br><span class=\"line\">pip install tensorflow==<span class=\"number\">1.14</span><span class=\"number\">.0</span></span><br></pre></td></tr></table></figure>\n<hr>\n<h2><span id=\"執行\">執行</span></h2>\n<p>如果.\\darkflow\\sample_img\\下有一個out的資料夾，裡面有標記圖片中的物件的話就是成功了</p>\n<h3><span id=\"用訓練好的模型辨識圖片\">用訓練好的模型辨識圖片</span></h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">C:\\Users\\UserName\\AppData\\Local\\Programs\\Python\\Python37\\python.exe flow --model cfg/yolo.cfg --load bin/yolov2.weights --imgdir sample_img/</span><br></pre></td></tr></table></figure>\n<h3><span id=\"用訓練好的模型辨識攝影機\">用訓練好的模型辨識攝影機</span></h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">C:\\Users\\UserName\\AppData\\Local\\Programs\\Python\\Python37\\python.exe  flow --model cfg/yolo.cfg --load bin/yolov2.weights --demo camera --saveVideo</span><br></pre></td></tr></table></figure>\n<hr>\n<h2><span id=\"標記資料\">標記資料</span></h2>\n<h3><span id=\"準備環境labelimg\">準備環境(labelimg)</span></h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://github.com/tzutalin/labelImg</span><br><span class=\"line\">cd lableimg</span><br><span class=\"line\"></span><br><span class=\"line\">pip install resources</span><br><span class=\"line\">pip install requests</span><br><span class=\"line\">pip install staty</span><br><span class=\"line\">pip install lxml</span><br><span class=\"line\"></span><br><span class=\"line\">python lableimg.py</span><br></pre></td></tr></table></figure>\n<h3><span id=\"可能會遇到的問題-no-module-named-libsresources\">可能會遇到的問題 : No module named ‘libs.resources’</span></h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 執行下面指令，再把產生出來的resources.py複製到專案的.\\labelImg\\libs下</span></span><br><span class=\"line\">pyrcc5 -o resources.py resources.qrc</span><br></pre></td></tr></table></figure>\n<h3><span id=\"可能會遇到的問題-pyrcc5-not-found\">可能會遇到的問題 : pyrcc5 not found</span></h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 執行'pyrcc5 -o ...'時可能會發生這個例外，原因是因為沒有把pyrcc5加到環境變數裡面</span></span><br><span class=\"line\"><span class=\"comment\"># 可以把對應目錄下的程式家到環境變數'pyrcc5'裡面</span></span><br><span class=\"line\">C:\\Users\\UserName\\AppData\\Local\\Programs\\Python\\Python37\\Scripts\\pyrcc5.exe</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 或是就直接用pyrcc5.exe執行</span></span><br><span class=\"line\">C:\\Users\\UserName\\AppData\\Local\\Programs\\Python\\Python37\\Scripts\\pyrcc5.exe -o resources.py resources.qrc</span><br></pre></td></tr></table></figure>\n<p>環境都準備好就可以開始用labelimg標記資料</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">C:\\Users\\UserName\\AppData\\Local\\Programs\\Python\\Python37\\python.exe D:\\Backup\\UserName\\Desktop\\Workspace\\labelImg\\labelImg.py</span><br></pre></td></tr></table></figure>\n<hr>\n<h2><span id=\"修改訓練相關設定\">修改訓練相關設定</span></h2>\n<h3><span id=\"config\">config</span></h3>\n<p>config我是跟作者一樣用tiny-yolo.cfg : .\\darkflow\\cfg\\tiny-yolo.cfg，裡面有幾個地方要照自己標記的資料去修改</p>\n<h4><span id=\"convolutional\">convolutional</span></h4>\n<p>tiny-yolo.cfg裡應該只會有一行########這樣的東西，把####下的第二個[convolutional]中的filters改成 : 5*(5 + 標記資料時的label數量)<br><br>\nex : 我標記3個label，所以filter要改成 : 40 ( 5 * (5 + 3))</p>\n<h4><span id=\"classes\">classes</span></h4>\n<p>把####下的[region]中的classes改成標記資料時的label數量</p>\n<h3><span id=\"labeltxt\">label.txt</span></h3>\n<p>把內容改成標記資料時的label</p>\n<h3><span id=\"coconames\">coco.names</span></h3>\n<p>把內容改成標記資料時的label</p>\n<hr>\n<h2><span id=\"開始訓練\">開始訓練</span></h2>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># python flow --model [modelPath] --train --dataset [Labeling Image Path] --annotation [LabelImageResultPath]</span></span><br><span class=\"line\"></span><br><span class=\"line\">C:\\Users\\UserName\\AppData\\Local\\Programs\\Python\\Python37\\python flow --model cfg/tiny-yolo.cfg --train --dataset D:\\Backup\\UserName\\Desktop\\image\\traindata --annotation D:\\Backup\\UserName\\Desktop\\Workspace\\labelImg\\leodata</span><br></pre></td></tr></table></figure>\n<h3><span id=\"從某個階段繼續訓練\">從某個階段繼續訓練</span></h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># python flow --model [model.cfg] --load -1 --train --dataset [image path] --annotation [annotation path]</span></span><br><span class=\"line\"><span class=\"comment\"># -1是default的最後一個check point</span></span><br><span class=\"line\">C:\\Users\\UserName\\AppData\\Local\\Programs\\Python\\Python37\\python flow --model cfg/tiny-yolo.cfg --load <span class=\"number\">-1</span> --train --dataset D:\\Backup\\UserName\\Desktop\\image\\traindata --annotation D:\\Backup\\UserName\\Desktop\\Workspace\\labelImg\\leodata</span><br></pre></td></tr></table></figure>\n<hr>\n<h2><span id=\"一些參數待確認\">一些參數(待確認)</span></h2>\n<h3><span id=\"batch-darkflowdarkflowdefaultspy\">Batch (.\\darkflow\\darkflow\\)</span></h3>\n<p>self.define(‘batch’, 16, ‘batch size’)<br>\nbatch_size越大，訓練速度越快但是可能會用很多記憶體(單次epoch=(全部訓練樣本/batchsize)/iteration=1)<br>\nbatch_size太小可能會underfitting</p>\n<h3><span id=\"epoch-darkflowdarkflowdefaultspy\">epoch (.\\darkflow\\darkflow\\)</span></h3>\n<p>self.define(‘epoch’, 1000, ‘number of epoch’)<br>\nepoch：1個epoch等於使用訓練集中的全部樣本訓練一次，一個完整資料集通過神經網路一次並返回稱為一次epoch</p>\n","site":{"data":{}},"excerpt":"","more":"<h2>參考來源</h2>\n<p>我是參考這篇文章 <a href=\"https://medium.com/%E9%9B%9E%E9%9B%9E%E8%88%87%E5%85%94%E5%85%94%E7%9A%84%E5%B7%A5%E7%A8%8B%E4%B8%96%E7%95%8C/%E6%A9%9F%E5%99%A8%E5%AD%B8%E7%BF%92-ml-note-yolo-%E5%88%A9%E7%94%A8%E5%BD%B1%E5%83%8F%E8%BE%A8%E8%AD%98%E5%81%9A%E7%89%A9%E4%BB%B6%E5%81%B5%E6%B8%AC-object-detection-%E7%9A%84%E6%8A%80%E8%A1%93-3ad34a4cac70\" target=\"_blank\" rel=\"noopener\">[機器學習 ML NOTE]YOLO!!!如何簡單使用YOLO訓練出自己的物件偵測!!! (Windows+Anaconda)</a></p>\n<h2>遇到問題</h2>\n<h3>Tensorflow</h3>\n<p>tensorflow目前只支援到python3.7，python3.7還只能裝版本2.0.0以下的tensorflow，因為tensorflow 2.0.0 開始移除了一個 tensorflow.contrib 函數庫</p>\n<h4>檢查目前使用版本</h4>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip --version</span><br><span class=\"line\"><span class=\"comment\"># pip 20.1.1 from c:\\users\\UserName\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\pip (python 3.7)</span></span><br><span class=\"line\"><span class=\"comment\"># 如果不是3.7可以把環境變數的python、pip改成3.7的路徑</span></span><br></pre></td></tr></table></figure>\n<p>因為要用python3.7所以</p>\n<h4>檢查是不是已經裝了tensorflow</h4>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip list </span><br><span class=\"line\"><span class=\"comment\"># Package        Version</span></span><br><span class=\"line\"><span class=\"comment\"># -------------------------</span></span><br><span class=\"line\"><span class=\"comment\"># gast           0.3.3</span></span><br><span class=\"line\"><span class=\"comment\"># pip            20.1.1</span></span><br><span class=\"line\"><span class=\"comment\"># tensorflow     1.14.0</span></span><br><span class=\"line\"><span class=\"comment\"># ..........</span></span><br></pre></td></tr></table></figure>\n<h4>如果不小心裝了比較高版本的tensorflow，要先移除掉再重裝比較舊的版本</h4>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip uninstall tensorflow</span><br><span class=\"line\">pip install tensorflow==<span class=\"number\">1.14</span><span class=\"number\">.0</span></span><br></pre></td></tr></table></figure>\n<hr>\n<h2>執行</h2>\n<p>如果.\\darkflow\\sample_img\\下有一個out的資料夾，裡面有標記圖片中的物件的話就是成功了</p>\n<h3>用訓練好的模型辨識圖片</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">C:\\Users\\UserName\\AppData\\Local\\Programs\\Python\\Python37\\python.exe flow --model cfg/yolo.cfg --load bin/yolov2.weights --imgdir sample_img/</span><br></pre></td></tr></table></figure>\n<h3>用訓練好的模型辨識攝影機</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">C:\\Users\\UserName\\AppData\\Local\\Programs\\Python\\Python37\\python.exe  flow --model cfg/yolo.cfg --load bin/yolov2.weights --demo camera --saveVideo</span><br></pre></td></tr></table></figure>\n<hr>\n<h2>標記資料</h2>\n<h3>準備環境(labelimg)</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://github.com/tzutalin/labelImg</span><br><span class=\"line\">cd lableimg</span><br><span class=\"line\"></span><br><span class=\"line\">pip install resources</span><br><span class=\"line\">pip install requests</span><br><span class=\"line\">pip install staty</span><br><span class=\"line\">pip install lxml</span><br><span class=\"line\"></span><br><span class=\"line\">python lableimg.py</span><br></pre></td></tr></table></figure>\n<h3>可能會遇到的問題 : No module named ‘libs.resources’</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 執行下面指令，再把產生出來的resources.py複製到專案的.\\labelImg\\libs下</span></span><br><span class=\"line\">pyrcc5 -o resources.py resources.qrc</span><br></pre></td></tr></table></figure>\n<h3>可能會遇到的問題 : pyrcc5 not found</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 執行'pyrcc5 -o ...'時可能會發生這個例外，原因是因為沒有把pyrcc5加到環境變數裡面</span></span><br><span class=\"line\"><span class=\"comment\"># 可以把對應目錄下的程式家到環境變數'pyrcc5'裡面</span></span><br><span class=\"line\">C:\\Users\\UserName\\AppData\\Local\\Programs\\Python\\Python37\\Scripts\\pyrcc5.exe</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 或是就直接用pyrcc5.exe執行</span></span><br><span class=\"line\">C:\\Users\\UserName\\AppData\\Local\\Programs\\Python\\Python37\\Scripts\\pyrcc5.exe -o resources.py resources.qrc</span><br></pre></td></tr></table></figure>\n<p>環境都準備好就可以開始用labelimg標記資料</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">C:\\Users\\UserName\\AppData\\Local\\Programs\\Python\\Python37\\python.exe D:\\Backup\\UserName\\Desktop\\Workspace\\labelImg\\labelImg.py</span><br></pre></td></tr></table></figure>\n<hr>\n<h2>修改訓練相關設定</h2>\n<h3>config</h3>\n<p>config我是跟作者一樣用tiny-yolo.cfg : .\\darkflow\\cfg\\tiny-yolo.cfg，裡面有幾個地方要照自己標記的資料去修改</p>\n<h4>convolutional</h4>\n<p>tiny-yolo.cfg裡應該只會有一行########這樣的東西，把####下的第二個[convolutional]中的filters改成 : 5*(5 + 標記資料時的label數量)<br><br>\nex : 我標記3個label，所以filter要改成 : 40 ( 5 * (5 + 3))</p>\n<h4>classes</h4>\n<p>把####下的[region]中的classes改成標記資料時的label數量</p>\n<h3>label.txt</h3>\n<p>把內容改成標記資料時的label</p>\n<h3>coco.names</h3>\n<p>把內容改成標記資料時的label</p>\n<hr>\n<h2>開始訓練</h2>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># python flow --model [modelPath] --train --dataset [Labeling Image Path] --annotation [LabelImageResultPath]</span></span><br><span class=\"line\"></span><br><span class=\"line\">C:\\Users\\UserName\\AppData\\Local\\Programs\\Python\\Python37\\python flow --model cfg/tiny-yolo.cfg --train --dataset D:\\Backup\\UserName\\Desktop\\image\\traindata --annotation D:\\Backup\\UserName\\Desktop\\Workspace\\labelImg\\leodata</span><br></pre></td></tr></table></figure>\n<h3>從某個階段繼續訓練</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># python flow --model [model.cfg] --load -1 --train --dataset [image path] --annotation [annotation path]</span></span><br><span class=\"line\"><span class=\"comment\"># -1是default的最後一個check point</span></span><br><span class=\"line\">C:\\Users\\UserName\\AppData\\Local\\Programs\\Python\\Python37\\python flow --model cfg/tiny-yolo.cfg --load <span class=\"number\">-1</span> --train --dataset D:\\Backup\\UserName\\Desktop\\image\\traindata --annotation D:\\Backup\\UserName\\Desktop\\Workspace\\labelImg\\leodata</span><br></pre></td></tr></table></figure>\n<hr>\n<h2>一些參數(待確認)</h2>\n<h3>Batch (.\\darkflow\\darkflow\\<a href=\"http://defaults.py\" target=\"_blank\" rel=\"noopener\">defaults.py</a>)</h3>\n<p>self.define(‘batch’, 16, ‘batch size’)<br>\nbatch_size越大，訓練速度越快但是可能會用很多記憶體(單次epoch=(全部訓練樣本/batchsize)/iteration=1)<br>\nbatch_size太小可能會underfitting</p>\n<h3>epoch (.\\darkflow\\darkflow\\<a href=\"http://defaults.py\" target=\"_blank\" rel=\"noopener\">defaults.py</a>)</h3>\n<p>self.define(‘epoch’, 1000, ‘number of epoch’)<br>\nepoch：1個epoch等於使用訓練集中的全部樣本訓練一次，一個完整資料集通過神經網路一次並返回稱為一次epoch</p>\n"},{"title":"使用HierarchicalDataTemplate讓TreeView自動長整棵樹","catalog":true,"abbrlink":"55be9099","date":"2020-07-02T08:40:52.000Z","subtitle":null,"header-img":null,"_content":"### 使用HierarchicalDataTemplate讓TreeView自動長整棵樹\n#### xaml\n1. ViewModel會在Resource裡面產生實例(instance)\n\n2. TreeView DataContext透過static resource，透過key值mainViewModel找到xaml中ViewModel的實例(instance)，然後把ItemSource binding到ViewModel中的DataSource屬性上\n\t因為DataSource是ObservableCollection所以在資料發生異動的時候，他會通知有訂閱的UI去更新畫面\n\t\n3. HierarchicalDataTemplate 的itemsource屬性binding在DataSource.Children屬性上，Children的資料型態是 ObservableCollection，\n\tHierarchicalDataTemplate會自己找出子層然後生出UI\n```xml\n<local:DataExplorer.Resources>\n\t<viewmodel:VmUcPrincipalExplorer x:Key=\"mainViewModel\"/>\n</local:DataExplorer.Resources>\n\n<TreeView DataContext=\"{Binding Source={StaticResource mainViewModel}}\" ItemsSource=\"{Binding DataSource}\">\n\t<TreeView.ItemTemplate>\n\t\t<HierarchicalDataTemplate ItemsSource=\"{Binding Children}\">\n\t\t\t<StackPanel Orientation=\"Horizontal\">\n\t\t\t\t<TreeViewItem IsEnabled=\"{Binding Active}\" Header=\"{Binding Name}\" Tag=\"{Binding Tag}\"/>\n\t\t\t</StackPanel>\n\t\t</HierarchicalDataTemplate>\n\t</TreeView.ItemTemplate>\n\t<TreeView.ItemContainerStyle>\n\t\t<Style TargetType=\"{x:Type TreeViewItem}\">\n\t\t\t<Setter Property=\"IsExpanded\" Value=\"True\"/>\n\t\t</Style>\n\t</TreeView.ItemContainerStyle>\n</TreeView>\n```\n#### ViewModel\n##### ViewModel建構子(VmUcPrincipalExplorer)\n```csharp\npublic VmUcPrincipalExplorer()\n{\n\t\n\tvar dt = CallAPIGetData();\n\tforeach (var item in dt)\n\t{\n\t\tif (DataSource.Any(x => x.RowNo == item.Parent))\n\t\t{\n\t\t\tvar parentNode = DataSource.Where(x => x.RowNo == item.Parent).FirstOrDefault();\n\t\t\tparentNode.Children.Add(new Node()\n\t\t\t{\n\t\t\t\tName = item.Name,\n\t\t\t\tParent = item.Parent,\n\t\t\t\tRowNo = item.RowNo\n\t\t\t});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tDataSource.Add(new Node()\n\t\t\t{\n\t\t\t\tName = item.Name,\n\t\t\t\tParent = item.Parent,\n\t\t\t\tRowNo = item.RowNo\n\t\t\t});\n\t\t}\n\t\t\n\t}\n\n}\n```\n##### DataSource Property\n``` csharp\nprivate ObservableCollection _DataSource = new ObservableCollection();\npublic ObservableCollection DataSource\n{\n    get\n    {\n        return _DataSource;\n    }\n    private set\n    {\n        _DataSource = value;\n    }\n}\n```\n##### DataModel\n```csharp\npublic class Node: Jepun.Services.Common.Contract.AppPrincipals\n{\n\n    private int _RowNo;\n    private int _Parent;\n    private string _Name;\n    \n    public int RowNo\n    {\n        get{...};set{...};\n    }\n    \n    public int Parent\n    {\n        get{...};set{...};\n    }\n    \n    public string Name\n    {\n        get{...};set{...};\n    }\n    \n\n    private ObservableCollection _Children = new ObservableCollection();\n    public ObservableCollection Children\n    {\n        get\n        {\n            return _Children;\n        }\n        set\n        {\n            _Children = value;\n        }\n    }\n}\n```\n##### 結果\n![Result](Result.PNG)","source":"_posts/使用HierarchicalDataTemplate讓TreeView自動長整棵樹.md","raw":"---\ntitle: 使用HierarchicalDataTemplate讓TreeView自動長整棵樹\ncatalog: true\ntags:\n  - C#\n  - WPF\n  - HierarchicalDataTemplate\n  - TreeView\nabbrlink: 55be9099\ncategories: uncategorized\ndate: 2020-07-02 16:40:52\nsubtitle:\nheader-img:\n---\n### 使用HierarchicalDataTemplate讓TreeView自動長整棵樹\n#### xaml\n1. ViewModel會在Resource裡面產生實例(instance)\n\n2. TreeView DataContext透過static resource，透過key值mainViewModel找到xaml中ViewModel的實例(instance)，然後把ItemSource binding到ViewModel中的DataSource屬性上\n\t因為DataSource是ObservableCollection所以在資料發生異動的時候，他會通知有訂閱的UI去更新畫面\n\t\n3. HierarchicalDataTemplate 的itemsource屬性binding在DataSource.Children屬性上，Children的資料型態是 ObservableCollection，\n\tHierarchicalDataTemplate會自己找出子層然後生出UI\n```xml\n<local:DataExplorer.Resources>\n\t<viewmodel:VmUcPrincipalExplorer x:Key=\"mainViewModel\"/>\n</local:DataExplorer.Resources>\n\n<TreeView DataContext=\"{Binding Source={StaticResource mainViewModel}}\" ItemsSource=\"{Binding DataSource}\">\n\t<TreeView.ItemTemplate>\n\t\t<HierarchicalDataTemplate ItemsSource=\"{Binding Children}\">\n\t\t\t<StackPanel Orientation=\"Horizontal\">\n\t\t\t\t<TreeViewItem IsEnabled=\"{Binding Active}\" Header=\"{Binding Name}\" Tag=\"{Binding Tag}\"/>\n\t\t\t</StackPanel>\n\t\t</HierarchicalDataTemplate>\n\t</TreeView.ItemTemplate>\n\t<TreeView.ItemContainerStyle>\n\t\t<Style TargetType=\"{x:Type TreeViewItem}\">\n\t\t\t<Setter Property=\"IsExpanded\" Value=\"True\"/>\n\t\t</Style>\n\t</TreeView.ItemContainerStyle>\n</TreeView>\n```\n#### ViewModel\n##### ViewModel建構子(VmUcPrincipalExplorer)\n```csharp\npublic VmUcPrincipalExplorer()\n{\n\t\n\tvar dt = CallAPIGetData();\n\tforeach (var item in dt)\n\t{\n\t\tif (DataSource.Any(x => x.RowNo == item.Parent))\n\t\t{\n\t\t\tvar parentNode = DataSource.Where(x => x.RowNo == item.Parent).FirstOrDefault();\n\t\t\tparentNode.Children.Add(new Node()\n\t\t\t{\n\t\t\t\tName = item.Name,\n\t\t\t\tParent = item.Parent,\n\t\t\t\tRowNo = item.RowNo\n\t\t\t});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tDataSource.Add(new Node()\n\t\t\t{\n\t\t\t\tName = item.Name,\n\t\t\t\tParent = item.Parent,\n\t\t\t\tRowNo = item.RowNo\n\t\t\t});\n\t\t}\n\t\t\n\t}\n\n}\n```\n##### DataSource Property\n``` csharp\nprivate ObservableCollection _DataSource = new ObservableCollection();\npublic ObservableCollection DataSource\n{\n    get\n    {\n        return _DataSource;\n    }\n    private set\n    {\n        _DataSource = value;\n    }\n}\n```\n##### DataModel\n```csharp\npublic class Node: Jepun.Services.Common.Contract.AppPrincipals\n{\n\n    private int _RowNo;\n    private int _Parent;\n    private string _Name;\n    \n    public int RowNo\n    {\n        get{...};set{...};\n    }\n    \n    public int Parent\n    {\n        get{...};set{...};\n    }\n    \n    public string Name\n    {\n        get{...};set{...};\n    }\n    \n\n    private ObservableCollection _Children = new ObservableCollection();\n    public ObservableCollection Children\n    {\n        get\n        {\n            return _Children;\n        }\n        set\n        {\n            _Children = value;\n        }\n    }\n}\n```\n##### 結果\n![Result](Result.PNG)","slug":"使用HierarchicalDataTemplate讓TreeView自動長整棵樹","published":1,"updated":"2024-11-21T02:20:00.250Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cm3xvfy92004eewi9a2zmod5m","content":"<h3><span id=\"使用hierarchicaldatatemplate讓treeview自動長整棵樹\">使用HierarchicalDataTemplate讓TreeView自動長整棵樹</span></h3>\n<h4><span id=\"xaml\">xaml</span></h4>\n<ol>\n<li>\n<p>ViewModel會在Resource裡面產生實例(instance)</p>\n</li>\n<li>\n<p>TreeView DataContext透過static resource，透過key值mainViewModel找到xaml中ViewModel的實例(instance)，然後把ItemSource binding到ViewModel中的DataSource屬性上<br>\n因為DataSource是ObservableCollection所以在資料發生異動的時候，他會通知有訂閱的UI去更新畫面</p>\n</li>\n<li>\n<p>HierarchicalDataTemplate 的itemsource屬性binding在DataSource.Children屬性上，Children的資料型態是 ObservableCollection，<br>\nHierarchicalDataTemplate會自己找出子層然後生出UI</p>\n</li>\n</ol>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">local:DataExplorer.Resources</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">viewmodel:VmUcPrincipalExplorer</span> <span class=\"attr\">x:Key</span>=<span class=\"string\">\"mainViewModel\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">local:DataExplorer.Resources</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">TreeView</span> <span class=\"attr\">DataContext</span>=<span class=\"string\">\"&#123;Binding Source=&#123;StaticResource mainViewModel&#125;&#125;\"</span> <span class=\"attr\">ItemsSource</span>=<span class=\"string\">\"&#123;Binding DataSource&#125;\"</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">TreeView.ItemTemplate</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">HierarchicalDataTemplate</span> <span class=\"attr\">ItemsSource</span>=<span class=\"string\">\"&#123;Binding Children&#125;\"</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">StackPanel</span> <span class=\"attr\">Orientation</span>=<span class=\"string\">\"Horizontal\"</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">TreeViewItem</span> <span class=\"attr\">IsEnabled</span>=<span class=\"string\">\"&#123;Binding Active&#125;\"</span> <span class=\"attr\">Header</span>=<span class=\"string\">\"&#123;Binding Name&#125;\"</span> <span class=\"attr\">Tag</span>=<span class=\"string\">\"&#123;Binding Tag&#125;\"</span>/&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">StackPanel</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">HierarchicalDataTemplate</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">TreeView.ItemTemplate</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">TreeView.ItemContainerStyle</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">Style</span> <span class=\"attr\">TargetType</span>=<span class=\"string\">\"&#123;x:Type TreeViewItem&#125;\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"IsExpanded\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"True\"</span>/&gt;</span></span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">Style</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">TreeView.ItemContainerStyle</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">TreeView</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4><span id=\"viewmodel\">ViewModel</span></h4>\n<h5><span id=\"viewmodel建構子vmucprincipalexplorer\">ViewModel建構子(VmUcPrincipalExplorer)</span></h5>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">VmUcPrincipalExplorer</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> dt = CallAPIGetData();</span><br><span class=\"line\">\t<span class=\"keyword\">foreach</span> (<span class=\"keyword\">var</span> item <span class=\"keyword\">in</span> dt)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (DataSource.Any(x =&gt; x.RowNo == item.Parent))</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">var</span> parentNode = DataSource.Where(x =&gt; x.RowNo == item.Parent).FirstOrDefault();</span><br><span class=\"line\">\t\t\tparentNode.Children.Add(<span class=\"keyword\">new</span> Node()</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tName = item.Name,</span><br><span class=\"line\">\t\t\t\tParent = item.Parent,</span><br><span class=\"line\">\t\t\t\tRowNo = item.RowNo</span><br><span class=\"line\">\t\t\t&#125;);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tDataSource.Add(<span class=\"keyword\">new</span> Node()</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tName = item.Name,</span><br><span class=\"line\">\t\t\t\tParent = item.Parent,</span><br><span class=\"line\">\t\t\t\tRowNo = item.RowNo</span><br><span class=\"line\">\t\t\t&#125;);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5><span id=\"datasource-property\">DataSource Property</span></h5>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> ObservableCollection _DataSource = <span class=\"keyword\">new</span> ObservableCollection();</span><br><span class=\"line\"><span class=\"keyword\">public</span> ObservableCollection DataSource</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">get</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> _DataSource;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">set</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        _DataSource = <span class=\"keyword\">value</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5><span id=\"datamodel\">DataModel</span></h5>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class Node: Jepun.Services.Common.Contract.AppPrincipals</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> _RowNo;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> _Parent;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> _Name;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">int</span> RowNo</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">get</span>&#123;...&#125;;<span class=\"keyword\">set</span>&#123;...&#125;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">int</span> Parent</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">get</span>&#123;...&#125;;<span class=\"keyword\">set</span>&#123;...&#125;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> Name</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">get</span>&#123;...&#125;;<span class=\"keyword\">set</span>&#123;...&#125;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> ObservableCollection _Children = <span class=\"keyword\">new</span> ObservableCollection();</span><br><span class=\"line\">    <span class=\"keyword\">public</span> ObservableCollection Children</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">get</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> _Children;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">set</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            _Children = <span class=\"keyword\">value</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5><span id=\"結果\">結果</span></h5>\n<p><img src=\"Result.PNG\" alt=\"Result\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h3>使用HierarchicalDataTemplate讓TreeView自動長整棵樹</h3>\n<h4>xaml</h4>\n<ol>\n<li>\n<p>ViewModel會在Resource裡面產生實例(instance)</p>\n</li>\n<li>\n<p>TreeView DataContext透過static resource，透過key值mainViewModel找到xaml中ViewModel的實例(instance)，然後把ItemSource binding到ViewModel中的DataSource屬性上<br>\n因為DataSource是ObservableCollection所以在資料發生異動的時候，他會通知有訂閱的UI去更新畫面</p>\n</li>\n<li>\n<p>HierarchicalDataTemplate 的itemsource屬性binding在DataSource.Children屬性上，Children的資料型態是 ObservableCollection，<br>\nHierarchicalDataTemplate會自己找出子層然後生出UI</p>\n</li>\n</ol>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">local:DataExplorer.Resources</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">viewmodel:VmUcPrincipalExplorer</span> <span class=\"attr\">x:Key</span>=<span class=\"string\">\"mainViewModel\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">local:DataExplorer.Resources</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">TreeView</span> <span class=\"attr\">DataContext</span>=<span class=\"string\">\"&#123;Binding Source=&#123;StaticResource mainViewModel&#125;&#125;\"</span> <span class=\"attr\">ItemsSource</span>=<span class=\"string\">\"&#123;Binding DataSource&#125;\"</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">TreeView.ItemTemplate</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">HierarchicalDataTemplate</span> <span class=\"attr\">ItemsSource</span>=<span class=\"string\">\"&#123;Binding Children&#125;\"</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">StackPanel</span> <span class=\"attr\">Orientation</span>=<span class=\"string\">\"Horizontal\"</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">TreeViewItem</span> <span class=\"attr\">IsEnabled</span>=<span class=\"string\">\"&#123;Binding Active&#125;\"</span> <span class=\"attr\">Header</span>=<span class=\"string\">\"&#123;Binding Name&#125;\"</span> <span class=\"attr\">Tag</span>=<span class=\"string\">\"&#123;Binding Tag&#125;\"</span>/&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">StackPanel</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">HierarchicalDataTemplate</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">TreeView.ItemTemplate</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">TreeView.ItemContainerStyle</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">Style</span> <span class=\"attr\">TargetType</span>=<span class=\"string\">\"&#123;x:Type TreeViewItem&#125;\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"xml\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">Setter</span> <span class=\"attr\">Property</span>=<span class=\"string\">\"IsExpanded\"</span> <span class=\"attr\">Value</span>=<span class=\"string\">\"True\"</span>/&gt;</span></span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">Style</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">TreeView.ItemContainerStyle</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">TreeView</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4>ViewModel</h4>\n<h5>ViewModel建構子(VmUcPrincipalExplorer)</h5>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">VmUcPrincipalExplorer</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> dt = CallAPIGetData();</span><br><span class=\"line\">\t<span class=\"keyword\">foreach</span> (<span class=\"keyword\">var</span> item <span class=\"keyword\">in</span> dt)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (DataSource.Any(x =&gt; x.RowNo == item.Parent))</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">var</span> parentNode = DataSource.Where(x =&gt; x.RowNo == item.Parent).FirstOrDefault();</span><br><span class=\"line\">\t\t\tparentNode.Children.Add(<span class=\"keyword\">new</span> Node()</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tName = item.Name,</span><br><span class=\"line\">\t\t\t\tParent = item.Parent,</span><br><span class=\"line\">\t\t\t\tRowNo = item.RowNo</span><br><span class=\"line\">\t\t\t&#125;);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tDataSource.Add(<span class=\"keyword\">new</span> Node()</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t\tName = item.Name,</span><br><span class=\"line\">\t\t\t\tParent = item.Parent,</span><br><span class=\"line\">\t\t\t\tRowNo = item.RowNo</span><br><span class=\"line\">\t\t\t&#125;);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5>DataSource Property</h5>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> ObservableCollection _DataSource = <span class=\"keyword\">new</span> ObservableCollection();</span><br><span class=\"line\"><span class=\"keyword\">public</span> ObservableCollection DataSource</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">get</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> _DataSource;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">set</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        _DataSource = <span class=\"keyword\">value</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5>DataModel</h5>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class Node: Jepun.Services.Common.Contract.AppPrincipals</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> _RowNo;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> _Parent;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">string</span> _Name;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">int</span> RowNo</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">get</span>&#123;...&#125;;<span class=\"keyword\">set</span>&#123;...&#125;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">int</span> Parent</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">get</span>&#123;...&#125;;<span class=\"keyword\">set</span>&#123;...&#125;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">string</span> Name</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">get</span>&#123;...&#125;;<span class=\"keyword\">set</span>&#123;...&#125;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> ObservableCollection _Children = <span class=\"keyword\">new</span> ObservableCollection();</span><br><span class=\"line\">    <span class=\"keyword\">public</span> ObservableCollection Children</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">get</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> _Children;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">set</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            _Children = <span class=\"keyword\">value</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5>結果</h5>\n<p><img src=\"Result.PNG\" alt=\"Result\"></p>\n"},{"title":"visual studio 2019 測試涵蓋率工具 - Fine Code Coverage","catalog":true,"comments":1,"abbrlink":45773,"date":"2021-02-26T07:01:39.000Z","_content":"\n## Visual Studio 2019 測試涵蓋率工具 - Fine Code Coverage\n\n之前有寫過可以用AxoCover看NUnit的測試涵蓋率，最近換到visual studio 2019發現2019已經沒有這個延伸模組可以下載了，所以就上網找了2019可以用的工具\n\n\n\n### 安裝\n一樣在visual studio 2019/延伸模組/管理延伸模組下載、安裝fine code coverage\n![extension](EXTENSION.PNG)\n\n### 使用\n使用上真的很簡單，裝好之後直接開Test Explorer執行NUnit單元測試\n![run test](RUNTEST.PNG)\n\n執行完之後會跳出來測試專案執行的總覽，可以在這裡看到目前測試涵蓋率分布的結果大概怎麼樣，AXOCover有的Risk Hotspots分析Fine code coverage也有提供\n![result](RESULT.PNG)\n\n切換到對應的code上面會發現，fine code coverage已經自動幫你把執行過的地方畫上綠線了\n![source](SOURCECODE.PNG)\n","source":"_posts/visual-studio-2019-測試涵蓋率工具-Fine-Code-Coverage.md","raw":"---\ntitle: visual studio 2019 測試涵蓋率工具 - Fine Code Coverage\ncatalog: true\ncomments: true\ntags:\n  - UnitTest\n  - Tool\nabbrlink: 45773\ncategories: uncategorized\ndate: 2021-02-26 15:01:39\n---\n\n## Visual Studio 2019 測試涵蓋率工具 - Fine Code Coverage\n\n之前有寫過可以用AxoCover看NUnit的測試涵蓋率，最近換到visual studio 2019發現2019已經沒有這個延伸模組可以下載了，所以就上網找了2019可以用的工具\n\n\n\n### 安裝\n一樣在visual studio 2019/延伸模組/管理延伸模組下載、安裝fine code coverage\n![extension](EXTENSION.PNG)\n\n### 使用\n使用上真的很簡單，裝好之後直接開Test Explorer執行NUnit單元測試\n![run test](RUNTEST.PNG)\n\n執行完之後會跳出來測試專案執行的總覽，可以在這裡看到目前測試涵蓋率分布的結果大概怎麼樣，AXOCover有的Risk Hotspots分析Fine code coverage也有提供\n![result](RESULT.PNG)\n\n切換到對應的code上面會發現，fine code coverage已經自動幫你把執行過的地方畫上綠線了\n![source](SOURCECODE.PNG)\n","slug":"visual-studio-2019-測試涵蓋率工具-Fine-Code-Coverage","published":1,"updated":"2024-11-21T02:20:00.244Z","layout":"post","photos":[],"link":"","_id":"cm3xvfy94004iewi9u8bxudmg","content":"<h2><span id=\"visual-studio-2019-測試涵蓋率工具-fine-code-coverage\">Visual Studio 2019 測試涵蓋率工具 - Fine Code Coverage</span></h2>\n<p>之前有寫過可以用AxoCover看NUnit的測試涵蓋率，最近換到visual studio 2019發現2019已經沒有這個延伸模組可以下載了，所以就上網找了2019可以用的工具</p>\n<h3><span id=\"安裝\">安裝</span></h3>\n<p>一樣在visual studio 2019/延伸模組/管理延伸模組下載、安裝fine code coverage<br>\n<img src=\"EXTENSION.PNG\" alt=\"extension\"></p>\n<h3><span id=\"使用\">使用</span></h3>\n<p>使用上真的很簡單，裝好之後直接開Test Explorer執行NUnit單元測試<br>\n<img src=\"RUNTEST.PNG\" alt=\"run test\"></p>\n<p>執行完之後會跳出來測試專案執行的總覽，可以在這裡看到目前測試涵蓋率分布的結果大概怎麼樣，AXOCover有的Risk Hotspots分析Fine code coverage也有提供<br>\n<img src=\"RESULT.PNG\" alt=\"result\"></p>\n<p>切換到對應的code上面會發現，fine code coverage已經自動幫你把執行過的地方畫上綠線了<br>\n<img src=\"SOURCECODE.PNG\" alt=\"source\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h2>Visual Studio 2019 測試涵蓋率工具 - Fine Code Coverage</h2>\n<p>之前有寫過可以用AxoCover看NUnit的測試涵蓋率，最近換到visual studio 2019發現2019已經沒有這個延伸模組可以下載了，所以就上網找了2019可以用的工具</p>\n<h3>安裝</h3>\n<p>一樣在visual studio 2019/延伸模組/管理延伸模組下載、安裝fine code coverage<br>\n<img src=\"EXTENSION.PNG\" alt=\"extension\"></p>\n<h3>使用</h3>\n<p>使用上真的很簡單，裝好之後直接開Test Explorer執行NUnit單元測試<br>\n<img src=\"RUNTEST.PNG\" alt=\"run test\"></p>\n<p>執行完之後會跳出來測試專案執行的總覽，可以在這裡看到目前測試涵蓋率分布的結果大概怎麼樣，AXOCover有的Risk Hotspots分析Fine code coverage也有提供<br>\n<img src=\"RESULT.PNG\" alt=\"result\"></p>\n<p>切換到對應的code上面會發現，fine code coverage已經自動幫你把執行過的地方畫上綠線了<br>\n<img src=\"SOURCECODE.PNG\" alt=\"source\"></p>\n"},{"title":"常用Git","catalog":true,"abbrlink":"b1bb7951","date":"2020-07-02T09:01:15.000Z","subtitle":null,"header-img":null,"_content":"# 基本指令\n### init － 建立版本庫\n```git\ngit init\n```\n***\n### add － 加入目前資料夾所有檔案到git\n```git\ngit add .\n```\n***\n### commit － 提交\n```git\ngit commit -m \"commit message\"\n```\n***\n### remote － 設定git remote位置(git server)\n\n設定\n```git\ngit remote add origin https://github.com/e23882/test.git\n```\n\n查詢\n```git\ngit remote -v\n```\n\n刪除\n```git\ngit remote remove RemoteName\n```\n同一個RemoteName可以設定多個GitRemote位置(一次push三個位置)\n```git\ngit remote set-url RemoteName --push --add \\\\123.1.1.1\\GitLocation1\ngit remote set-url RemoteName --push --add \\\\123.1.1.1\\GitLocation2\ngit remote set-url RemoteName --push --add \\\\123.1.1.1\\GitLocation3\n```\n***\n### Pull\n\n指令 : git pull GitRemoteURL BranchName\n```git\ngit pull original master\n```\n***\n### Push － 推送\n\n指令 : git push -u <RemoteName> <BranchName>\n```git\ngit push -u original master\n```\ngit amend後以最新的版本蓋掉舊的commit\n```git\ngit push -f \n```\n***\n\n### stash\n將目前異動的檔案存入暫存\n\n### Log － 查看紀錄\n\n看所有本地git紀錄\n```git\ngit log \n```\n\n看指定數量本地git紀錄\n指令 : git log -n <數量>\n```git\ngit log -n 2\n```\n\n輸出log\n指令 : git log -n 1 > [AbsolutePath]\n\n```git\ngit log -n 1 > \"D:\\NeverRemove.txt\"\n```\n\n一行顯示commit log \n```git\ngit log --oneline\n```\n***\n### checkout － 切換branch\n\n切換分支(Branch)\n指令: git checkout [BranchName]\n```git\ngit checkout LeoDerBranch\n```\n\n建立並切換分支 : git checkout -b [BranchName]\n```git\ngit checkout -b LeoDerBranch    \n```\n***\n### branch － 建立分支\n指令 : \ngit branch <BranchName>\n\n```git\ngit branch LeoDerBranch\n```\n***\n### rm － 移除版控上檔案\n```git\ngit rm -r -n --cached ./folder\ngit rm -r --cached ./folder\n```\n***\n### reset － 復原\n#### - hard\n會把目前專案目錄都復原到某個版本\n本地git回復到最新版本(目前本地最新的)\n```git\ngit reset --hard HEAD\n```\n本地git復原到git remote最新版本\n```git\ngit pull GitRemoteURL\n```\n\n本地git回復到上一個版本(原本的那個版本就不見了)\n```git\ngit reset --hard HEAD~\n```\n回復到前n個版本(n之後的版本都不見了)\n```git\ngit reset --hard HEAD~n\n```\n\n#### - soft\n跟hard一樣，但是本地專案的檔案不會跟著復原，只有版控有變更而已\n***\n***\n\n# 常用組合用法\n### 顯示出某日區間所有異動檔案清單(會重複)\n```git\ngit log --no-merges --pretty=format:\\\"%an_%ae|%s|%ad\\\" --name-only --since='2020/3/1' --until '2020/3/30' -- *.cs *.sql *.xaml > logs.txt\n```\n# git flow\n![alt text](git.png)\n\n### 建立專案第一次初始化git、commit、push\n```git\n初始化\ngit add . \n看那些檔案加入commit\ngit status\n復原加入commit的檔案\ngit reset HEAD FileName\ngit reset HEAD FolderName\n提交\ngit commit -m \"commit message\"\n設定GitRemote位置\ngit remote add original gitServerLocation\nPush\ngit push -u original master\n```\n\n### 狀況:修改程式後commit > pull，pull時發現git remote已經發生異動\n```git\ngit add .\ngit commit -m \"update content\"\ngit pull\n發生 : \n    CONFLICT (content): Merge conflict in xxx.xx\n    Automatic merge failed; fix conflicts and then commit the result.\n\n解決方法:\n取消git自動merge的動作, 這時候檔案會變成異動完,但是還沒merge,所以不會有衝突,要先解決衝突\ngit reset --merge\n\n解決衝突(把有衝突的檔案移動到上一層,避免新改的code被復原成舊的版本)\nmove file.txt ..\ngit reset --hard HEAD~\ngit pull\n這時候就沒有衝突了,可以在把移動到上一層的檔案人工合併到目前版控中的檔案\n然後再push\ngit add .\ngit commit -m \"commit content\"\ngit push origin master\n\n```\n","source":"_posts/常用Git.md","raw":"---\ntitle: 常用Git\ncatalog: true\ntags:\n  - git\nabbrlink: b1bb7951\ncategories: uncategorized\ndate: 2020-07-02 17:01:15\nsubtitle:\nheader-img:\n---\n# 基本指令\n### init － 建立版本庫\n```git\ngit init\n```\n***\n### add － 加入目前資料夾所有檔案到git\n```git\ngit add .\n```\n***\n### commit － 提交\n```git\ngit commit -m \"commit message\"\n```\n***\n### remote － 設定git remote位置(git server)\n\n設定\n```git\ngit remote add origin https://github.com/e23882/test.git\n```\n\n查詢\n```git\ngit remote -v\n```\n\n刪除\n```git\ngit remote remove RemoteName\n```\n同一個RemoteName可以設定多個GitRemote位置(一次push三個位置)\n```git\ngit remote set-url RemoteName --push --add \\\\123.1.1.1\\GitLocation1\ngit remote set-url RemoteName --push --add \\\\123.1.1.1\\GitLocation2\ngit remote set-url RemoteName --push --add \\\\123.1.1.1\\GitLocation3\n```\n***\n### Pull\n\n指令 : git pull GitRemoteURL BranchName\n```git\ngit pull original master\n```\n***\n### Push － 推送\n\n指令 : git push -u <RemoteName> <BranchName>\n```git\ngit push -u original master\n```\ngit amend後以最新的版本蓋掉舊的commit\n```git\ngit push -f \n```\n***\n\n### stash\n將目前異動的檔案存入暫存\n\n### Log － 查看紀錄\n\n看所有本地git紀錄\n```git\ngit log \n```\n\n看指定數量本地git紀錄\n指令 : git log -n <數量>\n```git\ngit log -n 2\n```\n\n輸出log\n指令 : git log -n 1 > [AbsolutePath]\n\n```git\ngit log -n 1 > \"D:\\NeverRemove.txt\"\n```\n\n一行顯示commit log \n```git\ngit log --oneline\n```\n***\n### checkout － 切換branch\n\n切換分支(Branch)\n指令: git checkout [BranchName]\n```git\ngit checkout LeoDerBranch\n```\n\n建立並切換分支 : git checkout -b [BranchName]\n```git\ngit checkout -b LeoDerBranch    \n```\n***\n### branch － 建立分支\n指令 : \ngit branch <BranchName>\n\n```git\ngit branch LeoDerBranch\n```\n***\n### rm － 移除版控上檔案\n```git\ngit rm -r -n --cached ./folder\ngit rm -r --cached ./folder\n```\n***\n### reset － 復原\n#### - hard\n會把目前專案目錄都復原到某個版本\n本地git回復到最新版本(目前本地最新的)\n```git\ngit reset --hard HEAD\n```\n本地git復原到git remote最新版本\n```git\ngit pull GitRemoteURL\n```\n\n本地git回復到上一個版本(原本的那個版本就不見了)\n```git\ngit reset --hard HEAD~\n```\n回復到前n個版本(n之後的版本都不見了)\n```git\ngit reset --hard HEAD~n\n```\n\n#### - soft\n跟hard一樣，但是本地專案的檔案不會跟著復原，只有版控有變更而已\n***\n***\n\n# 常用組合用法\n### 顯示出某日區間所有異動檔案清單(會重複)\n```git\ngit log --no-merges --pretty=format:\\\"%an_%ae|%s|%ad\\\" --name-only --since='2020/3/1' --until '2020/3/30' -- *.cs *.sql *.xaml > logs.txt\n```\n# git flow\n![alt text](git.png)\n\n### 建立專案第一次初始化git、commit、push\n```git\n初始化\ngit add . \n看那些檔案加入commit\ngit status\n復原加入commit的檔案\ngit reset HEAD FileName\ngit reset HEAD FolderName\n提交\ngit commit -m \"commit message\"\n設定GitRemote位置\ngit remote add original gitServerLocation\nPush\ngit push -u original master\n```\n\n### 狀況:修改程式後commit > pull，pull時發現git remote已經發生異動\n```git\ngit add .\ngit commit -m \"update content\"\ngit pull\n發生 : \n    CONFLICT (content): Merge conflict in xxx.xx\n    Automatic merge failed; fix conflicts and then commit the result.\n\n解決方法:\n取消git自動merge的動作, 這時候檔案會變成異動完,但是還沒merge,所以不會有衝突,要先解決衝突\ngit reset --merge\n\n解決衝突(把有衝突的檔案移動到上一層,避免新改的code被復原成舊的版本)\nmove file.txt ..\ngit reset --hard HEAD~\ngit pull\n這時候就沒有衝突了,可以在把移動到上一層的檔案人工合併到目前版控中的檔案\n然後再push\ngit add .\ngit commit -m \"commit content\"\ngit push origin master\n\n```\n","slug":"常用Git","published":1,"updated":"2024-11-26T02:49:40.660Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cm3xvfy94004kewi9ug1np98c","content":"<h1><span id=\"基本指令\">基本指令</span></h1>\n<h3><span id=\"init-建立版本庫\">init － 建立版本庫</span></h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init</span><br></pre></td></tr></table></figure>\n<hr>\n<h3><span id=\"add-加入目前資料夾所有檔案到git\">add － 加入目前資料夾所有檔案到git</span></h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add .</span><br></pre></td></tr></table></figure>\n<hr>\n<h3><span id=\"commit-提交\">commit － 提交</span></h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit -m &quot;commit message&quot;</span><br></pre></td></tr></table></figure>\n<hr>\n<h3><span id=\"remote-設定git-remote位置git-server\">remote － 設定git remote位置(git server)</span></h3>\n<p>設定</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote add origin https://github.com/e23882/test.git</span><br></pre></td></tr></table></figure>\n<p>查詢</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote -v</span><br></pre></td></tr></table></figure>\n<p>刪除</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote remove RemoteName</span><br></pre></td></tr></table></figure>\n<p>同一個RemoteName可以設定多個GitRemote位置(一次push三個位置)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote set-url RemoteName --push --add \\\\123.1.1.1\\GitLocation1</span><br><span class=\"line\">git remote set-url RemoteName --push --add \\\\123.1.1.1\\GitLocation2</span><br><span class=\"line\">git remote set-url RemoteName --push --add \\\\123.1.1.1\\GitLocation3</span><br></pre></td></tr></table></figure>\n<hr>\n<h3><span id=\"pull\">Pull</span></h3>\n<p>指令 : git pull GitRemoteURL BranchName</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git pull original master</span><br></pre></td></tr></table></figure>\n<hr>\n<h3><span id=\"push-推送\">Push － 推送</span></h3>\n<p>指令 : git push -u <remotename> <branchname></branchname></remotename></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push -u original master</span><br></pre></td></tr></table></figure>\n<p>git amend後以最新的版本蓋掉舊的commit</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push -f</span><br></pre></td></tr></table></figure>\n<hr>\n<h3><span id=\"stash\">stash</span></h3>\n<p>將目前異動的檔案存入暫存</p>\n<h3><span id=\"log-查看紀錄\">Log － 查看紀錄</span></h3>\n<p>看所有本地git紀錄</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git log</span><br></pre></td></tr></table></figure>\n<p>看指定數量本地git紀錄<br>\n指令 : git log -n &lt;數量&gt;</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git log -n 2</span><br></pre></td></tr></table></figure>\n<p>輸出log<br>\n指令 : git log -n 1 &gt; [AbsolutePath]</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git log -n 1 &gt; &quot;D:\\NeverRemove.txt&quot;</span><br></pre></td></tr></table></figure>\n<p>一行顯示commit log</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git log --oneline</span><br></pre></td></tr></table></figure>\n<hr>\n<h3><span id=\"checkout-切換branch\">checkout － 切換branch</span></h3>\n<p>切換分支(Branch)<br>\n指令: git checkout [BranchName]</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout LeoDerBranch</span><br></pre></td></tr></table></figure>\n<p>建立並切換分支 : git checkout -b [BranchName]</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout -b LeoDerBranch</span><br></pre></td></tr></table></figure>\n<hr>\n<h3><span id=\"branch-建立分支\">branch － 建立分支</span></h3>\n<p>指令 :<br>\ngit branch <branchname></branchname></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch LeoDerBranch</span><br></pre></td></tr></table></figure>\n<hr>\n<h3><span id=\"rm-移除版控上檔案\">rm － 移除版控上檔案</span></h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git rm -r -n --cached ./folder</span><br><span class=\"line\">git rm -r --cached ./folder</span><br></pre></td></tr></table></figure>\n<hr>\n<h3><span id=\"reset-復原\">reset － 復原</span></h3>\n<h4><span id=\"-hard\">- hard</span></h4>\n<p>會把目前專案目錄都復原到某個版本<br>\n本地git回復到最新版本(目前本地最新的)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reset --hard HEAD</span><br></pre></td></tr></table></figure>\n<p>本地git復原到git remote最新版本</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git pull GitRemoteURL</span><br></pre></td></tr></table></figure>\n<p>本地git回復到上一個版本(原本的那個版本就不見了)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reset --hard HEAD~</span><br></pre></td></tr></table></figure>\n<p>回復到前n個版本(n之後的版本都不見了)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reset --hard HEAD~n</span><br></pre></td></tr></table></figure>\n<h4><span id=\"-soft\">- soft</span></h4>\n<p>跟hard一樣，但是本地專案的檔案不會跟著復原，只有版控有變更而已</p>\n<hr>\n<hr>\n<h1><span id=\"常用組合用法\">常用組合用法</span></h1>\n<h3><span id=\"顯示出某日區間所有異動檔案清單會重複\">顯示出某日區間所有異動檔案清單(會重複)</span></h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git log --no-merges --pretty=format:\\&quot;%an_%ae|%s|%ad\\&quot; --name-only --since=&apos;2020/3/1&apos; --until &apos;2020/3/30&apos; -- *.cs *.sql *.xaml &gt; logs.txt</span><br></pre></td></tr></table></figure>\n<h1><span id=\"git-flow\">git flow</span></h1>\n<p><img src=\"git.png\" alt=\"alt text\"></p>\n<h3><span id=\"建立專案第一次初始化git-commit-push\">建立專案第一次初始化git、commit、push</span></h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">初始化</span><br><span class=\"line\">git add . </span><br><span class=\"line\">看那些檔案加入commit</span><br><span class=\"line\">git status</span><br><span class=\"line\">復原加入commit的檔案</span><br><span class=\"line\">git reset HEAD FileName</span><br><span class=\"line\">git reset HEAD FolderName</span><br><span class=\"line\">提交</span><br><span class=\"line\">git commit -m &quot;commit message&quot;</span><br><span class=\"line\">設定GitRemote位置</span><br><span class=\"line\">git remote add original gitServerLocation</span><br><span class=\"line\">Push</span><br><span class=\"line\">git push -u original master</span><br></pre></td></tr></table></figure>\n<h3><span id=\"狀況修改程式後commit-gt-pullpull時發現git-remote已經發生異動\">狀況:修改程式後commit &gt; pull，pull時發現git remote已經發生異動</span></h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add .</span><br><span class=\"line\">git commit -m &quot;update content&quot;</span><br><span class=\"line\">git pull</span><br><span class=\"line\">發生 : </span><br><span class=\"line\">    CONFLICT (content): Merge conflict in xxx.xx</span><br><span class=\"line\">    Automatic merge failed; fix conflicts and then commit the result.</span><br><span class=\"line\"></span><br><span class=\"line\">解決方法:</span><br><span class=\"line\">取消git自動merge的動作, 這時候檔案會變成異動完,但是還沒merge,所以不會有衝突,要先解決衝突</span><br><span class=\"line\">git reset --merge</span><br><span class=\"line\"></span><br><span class=\"line\">解決衝突(把有衝突的檔案移動到上一層,避免新改的code被復原成舊的版本)</span><br><span class=\"line\">move file.txt ..</span><br><span class=\"line\">git reset --hard HEAD~</span><br><span class=\"line\">git pull</span><br><span class=\"line\">這時候就沒有衝突了,可以在把移動到上一層的檔案人工合併到目前版控中的檔案</span><br><span class=\"line\">然後再push</span><br><span class=\"line\">git add .</span><br><span class=\"line\">git commit -m &quot;commit content&quot;</span><br><span class=\"line\">git push origin master</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1>基本指令</h1>\n<h3>init － 建立版本庫</h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init</span><br></pre></td></tr></table></figure>\n<hr>\n<h3>add － 加入目前資料夾所有檔案到git</h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add .</span><br></pre></td></tr></table></figure>\n<hr>\n<h3>commit － 提交</h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit -m &quot;commit message&quot;</span><br></pre></td></tr></table></figure>\n<hr>\n<h3>remote － 設定git remote位置(git server)</h3>\n<p>設定</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote add origin https://github.com/e23882/test.git</span><br></pre></td></tr></table></figure>\n<p>查詢</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote -v</span><br></pre></td></tr></table></figure>\n<p>刪除</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote remove RemoteName</span><br></pre></td></tr></table></figure>\n<p>同一個RemoteName可以設定多個GitRemote位置(一次push三個位置)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote set-url RemoteName --push --add \\\\123.1.1.1\\GitLocation1</span><br><span class=\"line\">git remote set-url RemoteName --push --add \\\\123.1.1.1\\GitLocation2</span><br><span class=\"line\">git remote set-url RemoteName --push --add \\\\123.1.1.1\\GitLocation3</span><br></pre></td></tr></table></figure>\n<hr>\n<h3>Pull</h3>\n<p>指令 : git pull GitRemoteURL BranchName</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git pull original master</span><br></pre></td></tr></table></figure>\n<hr>\n<h3>Push － 推送</h3>\n<p>指令 : git push -u <remotename> <branchname></branchname></remotename></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push -u original master</span><br></pre></td></tr></table></figure>\n<p>git amend後以最新的版本蓋掉舊的commit</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push -f</span><br></pre></td></tr></table></figure>\n<hr>\n<h3>stash</h3>\n<p>將目前異動的檔案存入暫存</p>\n<h3>Log － 查看紀錄</h3>\n<p>看所有本地git紀錄</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git log</span><br></pre></td></tr></table></figure>\n<p>看指定數量本地git紀錄<br>\n指令 : git log -n &lt;數量&gt;</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git log -n 2</span><br></pre></td></tr></table></figure>\n<p>輸出log<br>\n指令 : git log -n 1 &gt; [AbsolutePath]</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git log -n 1 &gt; &quot;D:\\NeverRemove.txt&quot;</span><br></pre></td></tr></table></figure>\n<p>一行顯示commit log</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git log --oneline</span><br></pre></td></tr></table></figure>\n<hr>\n<h3>checkout － 切換branch</h3>\n<p>切換分支(Branch)<br>\n指令: git checkout [BranchName]</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout LeoDerBranch</span><br></pre></td></tr></table></figure>\n<p>建立並切換分支 : git checkout -b [BranchName]</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout -b LeoDerBranch</span><br></pre></td></tr></table></figure>\n<hr>\n<h3>branch － 建立分支</h3>\n<p>指令 :<br>\ngit branch <branchname></branchname></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch LeoDerBranch</span><br></pre></td></tr></table></figure>\n<hr>\n<h3>rm － 移除版控上檔案</h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git rm -r -n --cached ./folder</span><br><span class=\"line\">git rm -r --cached ./folder</span><br></pre></td></tr></table></figure>\n<hr>\n<h3>reset － 復原</h3>\n<h4>- hard</h4>\n<p>會把目前專案目錄都復原到某個版本<br>\n本地git回復到最新版本(目前本地最新的)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reset --hard HEAD</span><br></pre></td></tr></table></figure>\n<p>本地git復原到git remote最新版本</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git pull GitRemoteURL</span><br></pre></td></tr></table></figure>\n<p>本地git回復到上一個版本(原本的那個版本就不見了)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reset --hard HEAD~</span><br></pre></td></tr></table></figure>\n<p>回復到前n個版本(n之後的版本都不見了)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reset --hard HEAD~n</span><br></pre></td></tr></table></figure>\n<h4>- soft</h4>\n<p>跟hard一樣，但是本地專案的檔案不會跟著復原，只有版控有變更而已</p>\n<hr>\n<hr>\n<h1>常用組合用法</h1>\n<h3>顯示出某日區間所有異動檔案清單(會重複)</h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git log --no-merges --pretty=format:\\&quot;%an_%ae|%s|%ad\\&quot; --name-only --since=&apos;2020/3/1&apos; --until &apos;2020/3/30&apos; -- *.cs *.sql *.xaml &gt; logs.txt</span><br></pre></td></tr></table></figure>\n<h1>git flow</h1>\n<p><img src=\"git.png\" alt=\"alt text\"></p>\n<h3>建立專案第一次初始化git、commit、push</h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">初始化</span><br><span class=\"line\">git add . </span><br><span class=\"line\">看那些檔案加入commit</span><br><span class=\"line\">git status</span><br><span class=\"line\">復原加入commit的檔案</span><br><span class=\"line\">git reset HEAD FileName</span><br><span class=\"line\">git reset HEAD FolderName</span><br><span class=\"line\">提交</span><br><span class=\"line\">git commit -m &quot;commit message&quot;</span><br><span class=\"line\">設定GitRemote位置</span><br><span class=\"line\">git remote add original gitServerLocation</span><br><span class=\"line\">Push</span><br><span class=\"line\">git push -u original master</span><br></pre></td></tr></table></figure>\n<h3>狀況:修改程式後commit &gt; pull，pull時發現git remote已經發生異動</h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add .</span><br><span class=\"line\">git commit -m &quot;update content&quot;</span><br><span class=\"line\">git pull</span><br><span class=\"line\">發生 : </span><br><span class=\"line\">    CONFLICT (content): Merge conflict in xxx.xx</span><br><span class=\"line\">    Automatic merge failed; fix conflicts and then commit the result.</span><br><span class=\"line\"></span><br><span class=\"line\">解決方法:</span><br><span class=\"line\">取消git自動merge的動作, 這時候檔案會變成異動完,但是還沒merge,所以不會有衝突,要先解決衝突</span><br><span class=\"line\">git reset --merge</span><br><span class=\"line\"></span><br><span class=\"line\">解決衝突(把有衝突的檔案移動到上一層,避免新改的code被復原成舊的版本)</span><br><span class=\"line\">move file.txt ..</span><br><span class=\"line\">git reset --hard HEAD~</span><br><span class=\"line\">git pull</span><br><span class=\"line\">這時候就沒有衝突了,可以在把移動到上一層的檔案人工合併到目前版控中的檔案</span><br><span class=\"line\">然後再push</span><br><span class=\"line\">git add .</span><br><span class=\"line\">git commit -m &quot;commit content&quot;</span><br><span class=\"line\">git push origin master</span><br></pre></td></tr></table></figure>\n"},{"title":"元件事件、委派、interactivity(Command)觸發順序","catalog":true,"abbrlink":"7580ca9d","date":"2020-07-02T12:33:41.000Z","subtitle":null,"header-img":null,"_content":"#### 情境\n主視窗某動作new了一個物件(ex : 視窗)的實例(instance)，在實例產生時把事件委派回主視窗\n但被產生的實例本身也有寫被委派的事件,在xaml還有用Interactivity 將事件binding 到特定Command上\n\n#### 被委派的事件(DelegatedMainWindowEvent)\n```csharp\nSubWindow sb = new SubWindow();\nsb.close += DelegatedMainWindowEvent;\n```\n\n#### 事件\n```csharp\npublic void Closed(object sender, EventArgs e)\n{\n\t\n}\n```\n\n#### Command\n```xml\nxmlns:i=\"clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity\"\nClosed=\"UcChooseData_OnClosed\">\n<i:Interactivity.Triggers>\n  <i:EventTrigger EventName=\"Closed\">\n\t<i:InvokeCommandAction Command=\"{Binding UcChooseDataOnClosed}\"/>\n  </i:EventTrigger>\n</i:Interactivity.Triggers>\n```\n\n#### 觸發順序\n1. 元件本身事件\n2. 元件委派事件\n3. Command","source":"_posts/元件事件、委派、interactivity-Command-觸發順序.md","raw":"---\ntitle: 元件事件、委派、interactivity(Command)觸發順序\ncatalog: true\ntags:\n  - C#\n  - WPF\nabbrlink: 7580ca9d\ncategories: uncategorized\ndate: 2020-07-02 20:33:41\nsubtitle:\nheader-img:\n---\n#### 情境\n主視窗某動作new了一個物件(ex : 視窗)的實例(instance)，在實例產生時把事件委派回主視窗\n但被產生的實例本身也有寫被委派的事件,在xaml還有用Interactivity 將事件binding 到特定Command上\n\n#### 被委派的事件(DelegatedMainWindowEvent)\n```csharp\nSubWindow sb = new SubWindow();\nsb.close += DelegatedMainWindowEvent;\n```\n\n#### 事件\n```csharp\npublic void Closed(object sender, EventArgs e)\n{\n\t\n}\n```\n\n#### Command\n```xml\nxmlns:i=\"clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity\"\nClosed=\"UcChooseData_OnClosed\">\n<i:Interactivity.Triggers>\n  <i:EventTrigger EventName=\"Closed\">\n\t<i:InvokeCommandAction Command=\"{Binding UcChooseDataOnClosed}\"/>\n  </i:EventTrigger>\n</i:Interactivity.Triggers>\n```\n\n#### 觸發順序\n1. 元件本身事件\n2. 元件委派事件\n3. Command","slug":"元件事件、委派、interactivity-Command-觸發順序","published":1,"updated":"2024-11-21T02:20:00.252Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cm3xvfy95004newi9vaszan53","content":"<h4><span id=\"情境\">情境</span></h4>\n<p>主視窗某動作new了一個物件(ex : 視窗)的實例(instance)，在實例產生時把事件委派回主視窗<br>\n但被產生的實例本身也有寫被委派的事件,在xaml還有用Interactivity 將事件binding 到特定Command上</p>\n<h4><span id=\"被委派的事件delegatedmainwindowevent\">被委派的事件(DelegatedMainWindowEvent)</span></h4>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SubWindow sb = <span class=\"keyword\">new</span> SubWindow();</span><br><span class=\"line\">sb.close += DelegatedMainWindowEvent;</span><br></pre></td></tr></table></figure>\n<h4><span id=\"事件\">事件</span></h4>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Closed</span>(<span class=\"params\"><span class=\"keyword\">object</span> sender, EventArgs e</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4><span id=\"command\">Command</span></h4>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xmlns:i=\"clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity\"</span><br><span class=\"line\">Closed=\"UcChooseData_OnClosed\"&gt;</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">i:Interactivity.Triggers</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">i:EventTrigger</span> <span class=\"attr\">EventName</span>=<span class=\"string\">\"Closed\"</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">i:InvokeCommandAction</span> <span class=\"attr\">Command</span>=<span class=\"string\">\"&#123;Binding UcChooseDataOnClosed&#125;\"</span>/&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">i:EventTrigger</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">i:Interactivity.Triggers</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4><span id=\"觸發順序\">觸發順序</span></h4>\n<ol>\n<li>元件本身事件</li>\n<li>元件委派事件</li>\n<li>Command</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h4>情境</h4>\n<p>主視窗某動作new了一個物件(ex : 視窗)的實例(instance)，在實例產生時把事件委派回主視窗<br>\n但被產生的實例本身也有寫被委派的事件,在xaml還有用Interactivity 將事件binding 到特定Command上</p>\n<h4>被委派的事件(DelegatedMainWindowEvent)</h4>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SubWindow sb = <span class=\"keyword\">new</span> SubWindow();</span><br><span class=\"line\">sb.close += DelegatedMainWindowEvent;</span><br></pre></td></tr></table></figure>\n<h4>事件</h4>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Closed</span>(<span class=\"params\"><span class=\"keyword\">object</span> sender, EventArgs e</span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4>Command</h4>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xmlns:i=\"clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity\"</span><br><span class=\"line\">Closed=\"UcChooseData_OnClosed\"&gt;</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">i:Interactivity.Triggers</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">i:EventTrigger</span> <span class=\"attr\">EventName</span>=<span class=\"string\">\"Closed\"</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">i:InvokeCommandAction</span> <span class=\"attr\">Command</span>=<span class=\"string\">\"&#123;Binding UcChooseDataOnClosed&#125;\"</span>/&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">i:EventTrigger</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">i:Interactivity.Triggers</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4>觸發順序</h4>\n<ol>\n<li>元件本身事件</li>\n<li>元件委派事件</li>\n<li>Command</li>\n</ol>\n"},{"title":"快速產生Python爬蟲程式碼","catalog":true,"abbrlink":"d1b1c247","date":"2020-07-02T08:12:09.000Z","subtitle":null,"header-img":null,"_content":"#### 透過Chrome Dev Tools執行結果轉換成Python程式碼\n##### Chrome Dev Tools\n準備好要爬的網頁跟表單相關資料後再開啟dev tools切換到NetWork tab再送出請求，避免訊息過多\n\n找到回應正確response的request，按右鍵Copy as curl(cmd)\n##### curl to Python Code\n把複製的code貼上去就能拿到python的程式碼了，不用自己在那邊找header、cookies找半天，再調整成自己要的東西，可以省一些時間不用打header跟參數打這麼久最後發現參數打錯字...\nhttps://curl.trillworks.com/\n","source":"_posts/快速產生Python爬蟲程式碼.md","raw":"---\ntitle: 快速產生Python爬蟲程式碼\ncatalog: true\ntags:\n  - Python\nabbrlink: d1b1c247\ncategories: uncategorized\ndate: 2020-07-02 16:12:09\nsubtitle:\nheader-img:\n---\n#### 透過Chrome Dev Tools執行結果轉換成Python程式碼\n##### Chrome Dev Tools\n準備好要爬的網頁跟表單相關資料後再開啟dev tools切換到NetWork tab再送出請求，避免訊息過多\n\n找到回應正確response的request，按右鍵Copy as curl(cmd)\n##### curl to Python Code\n把複製的code貼上去就能拿到python的程式碼了，不用自己在那邊找header、cookies找半天，再調整成自己要的東西，可以省一些時間不用打header跟參數打這麼久最後發現參數打錯字...\nhttps://curl.trillworks.com/\n","slug":"快速產生Python爬蟲程式碼","published":1,"updated":"2024-11-21T02:20:00.253Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cm3xvfy96004pewi9gblkc1r7","content":"<h4><span id=\"透過chrome-dev-tools執行結果轉換成python程式碼\">透過Chrome Dev Tools執行結果轉換成Python程式碼</span></h4>\n<h5><span id=\"chrome-dev-tools\">Chrome Dev Tools</span></h5>\n<p>準備好要爬的網頁跟表單相關資料後再開啟dev tools切換到NetWork tab再送出請求，避免訊息過多</p>\n<p>找到回應正確response的request，按右鍵Copy as curl(cmd)</p>\n<h5><span id=\"curl-to-python-code\">curl to Python Code</span></h5>\n<p>把複製的code貼上去就能拿到python的程式碼了，不用自己在那邊找header、cookies找半天，再調整成自己要的東西，可以省一些時間不用打header跟參數打這麼久最後發現參數打錯字…<br>\n<a href=\"https://curl.trillworks.com/\" target=\"_blank\" rel=\"noopener\">https://curl.trillworks.com/</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h4>透過Chrome Dev Tools執行結果轉換成Python程式碼</h4>\n<h5>Chrome Dev Tools</h5>\n<p>準備好要爬的網頁跟表單相關資料後再開啟dev tools切換到NetWork tab再送出請求，避免訊息過多</p>\n<p>找到回應正確response的request，按右鍵Copy as curl(cmd)</p>\n<h5>curl to Python Code</h5>\n<p>把複製的code貼上去就能拿到python的程式碼了，不用自己在那邊找header、cookies找半天，再調整成自己要的東西，可以省一些時間不用打header跟參數打這麼久最後發現參數打錯字…<br>\n<a href=\"https://curl.trillworks.com/\" target=\"_blank\" rel=\"noopener\">https://curl.trillworks.com/</a></p>\n"},{"title":"現金權益補償","catalog":true,"comments":1,"abbrlink":727,"date":"2022-09-12T06:04:12.000Z","_content":"### 現金權益補償業務運作原理\n![Result](work.png)\n","source":"_posts/現金權益補償.md","raw":"---\ntitle: 現金權益補償\ncatalog: true\ncomments: true\ntags:\n  - Know How\nabbrlink: 727\ncategories: uncategorized\ndate: 2022-09-12 14:04:12\n---\n### 現金權益補償業務運作原理\n![Result](work.png)\n","slug":"現金權益補償","published":1,"updated":"2024-11-21T02:20:00.254Z","layout":"post","photos":[],"link":"","_id":"cm3xvfy97004sewi9bb8d85xn","content":"<h3><span id=\"現金權益補償業務運作原理\">現金權益補償業務運作原理</span></h3>\n<p><img src=\"work.png\" alt=\"Result\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h3>現金權益補償業務運作原理</h3>\n<p><img src=\"work.png\" alt=\"Result\"></p>\n"},{"title":"用Sonarqube做靜態程式碼分析","catalog":true,"comments":1,"abbrlink":28616,"date":"2021-02-01T07:02:41.000Z","_content":"# 用Sonarqube做靜態程式碼分析\n## 環境\nSonarqube需要在有java的環境下才能執行，所以要先安裝java\njava18\n\n![environment](java18.PNG)\n\n安裝Sonarqube Community\n\n![sonar](sonar.PNG)\n\n## 啟動Sonarqube\nSonarqube Community 下載完解壓縮，在.sonarqube-8.4.2.36762\\bin\\windows-x86-64目錄下依序用管理員權限去註冊需要的服務(1.2)，然後用管理員權限啟用Sonarqube(3)\n\n![run](run.PNG)\n\n如果沒有看到例外訊息，看到這幾個關鍵字就代表服務已經啟用了，有例外的話先把作業系統中sonarqube相關的process殺掉再重啟試試看，基本上這樣就可以解決大部分的問題，如果相同的例外訊息一直出現就要上網找一下是發生什麼問題，然後加到這篇文章裡面\n\n![running](running.PNG)\n\n\n## 登入Sonarqube\n在瀏覽器打localhost:9000應該就會看到設定畫面，因為我已經設定完了，所以就會顯示登入畫面\n\n![login](login.PNG)\n\n登入之後會看到目前專案程式碼分析的結果，主要會分成幾個部分\n\n程式問題(Bug)、漏洞(Vulnerabilities)、安全問題(Hotspots Reviewed)、\n\n程式不良設計(Code Smells)、測試涵蓋率(Coverage)、重複代碼(Duplications)\n\n最後面那個2.9K、103K是指目前程式欠了多少技術債， 點專案名稱可以看到專案更詳細的程式碼分析\n![main](main.PNG)\n## 主要功能\n### issue\nissues 會記錄bug的種類、嚴重程度還有如何修正…e.t.c.\n![issue](issue.PNG)\n![issue1](issue1.PNG)\n\n### Security Hotspots\nSecurity Hotspots是指程式碼資安的漏洞，像我這裡程式碼用了一個正規表示法的檢查去篩選資料，就被判斷裡面可能會有邏輯上的漏洞\n![security](security.PNG)\n\n## 新增專案\n在主畫面右上角按這個+可以新增專案，他會給你一組token作為分析程式碼的key，這裡還要下載一個Sonarqube的掃描器(Scanner)\n![add](add.PNG)\nhttps://docs.sonarqube.org/latest/analysis/scan/sonarscanner-for-msbuild/\n\n![scanner](scanner.PNG)\n\n拿新增專案時的token當成參數去呼叫scanner，分析的結果就會顯示到sonarqube的主畫面上了，呼叫掃描器的代碼大概長這樣\n```batch\ncd /D D:\\LeoYang\\Desktop\\Publisher\nD:\\LeoYang\\Desktop\\Scanner\\MSBuild.SonarQube.Runner.exe begin /k:\"FirstProject\" /d:sonar.host.url=\"http://localhost:9000\" /d:sonar.login=\"48a60c2565d9929037d9e168a182deb484ec44e2\"\nD:\\vs2017\\MSBuild\\15.0\\Bin\\MSBuild.exe /t:Rebuild /consoleloggerparameters:ErrorsOnly\nD:\\LeoYang\\Desktop\\Scanner\\MSBuild.SonarQube.Runner.exe end /d:sonar.login=\"48a60c2565d9929037d9e168a182deb484ec44e2\"\n```\n\n可以寫成batch，透過githook在push之後去讓它自動分析程式碼，hen方便，在code review之前可以先跑一下，減少一些錯誤","source":"_posts/用Sonarqube做靜態程式碼分析.md","raw":"---\ntitle: 用Sonarqube做靜態程式碼分析\ncatalog: true\ncomments: true\nabbrlink: 28616\ncategories: uncategorized\ndate: 2021-02-01 15:02:41\ntags:\n---\n# 用Sonarqube做靜態程式碼分析\n## 環境\nSonarqube需要在有java的環境下才能執行，所以要先安裝java\njava18\n\n![environment](java18.PNG)\n\n安裝Sonarqube Community\n\n![sonar](sonar.PNG)\n\n## 啟動Sonarqube\nSonarqube Community 下載完解壓縮，在.sonarqube-8.4.2.36762\\bin\\windows-x86-64目錄下依序用管理員權限去註冊需要的服務(1.2)，然後用管理員權限啟用Sonarqube(3)\n\n![run](run.PNG)\n\n如果沒有看到例外訊息，看到這幾個關鍵字就代表服務已經啟用了，有例外的話先把作業系統中sonarqube相關的process殺掉再重啟試試看，基本上這樣就可以解決大部分的問題，如果相同的例外訊息一直出現就要上網找一下是發生什麼問題，然後加到這篇文章裡面\n\n![running](running.PNG)\n\n\n## 登入Sonarqube\n在瀏覽器打localhost:9000應該就會看到設定畫面，因為我已經設定完了，所以就會顯示登入畫面\n\n![login](login.PNG)\n\n登入之後會看到目前專案程式碼分析的結果，主要會分成幾個部分\n\n程式問題(Bug)、漏洞(Vulnerabilities)、安全問題(Hotspots Reviewed)、\n\n程式不良設計(Code Smells)、測試涵蓋率(Coverage)、重複代碼(Duplications)\n\n最後面那個2.9K、103K是指目前程式欠了多少技術債， 點專案名稱可以看到專案更詳細的程式碼分析\n![main](main.PNG)\n## 主要功能\n### issue\nissues 會記錄bug的種類、嚴重程度還有如何修正…e.t.c.\n![issue](issue.PNG)\n![issue1](issue1.PNG)\n\n### Security Hotspots\nSecurity Hotspots是指程式碼資安的漏洞，像我這裡程式碼用了一個正規表示法的檢查去篩選資料，就被判斷裡面可能會有邏輯上的漏洞\n![security](security.PNG)\n\n## 新增專案\n在主畫面右上角按這個+可以新增專案，他會給你一組token作為分析程式碼的key，這裡還要下載一個Sonarqube的掃描器(Scanner)\n![add](add.PNG)\nhttps://docs.sonarqube.org/latest/analysis/scan/sonarscanner-for-msbuild/\n\n![scanner](scanner.PNG)\n\n拿新增專案時的token當成參數去呼叫scanner，分析的結果就會顯示到sonarqube的主畫面上了，呼叫掃描器的代碼大概長這樣\n```batch\ncd /D D:\\LeoYang\\Desktop\\Publisher\nD:\\LeoYang\\Desktop\\Scanner\\MSBuild.SonarQube.Runner.exe begin /k:\"FirstProject\" /d:sonar.host.url=\"http://localhost:9000\" /d:sonar.login=\"48a60c2565d9929037d9e168a182deb484ec44e2\"\nD:\\vs2017\\MSBuild\\15.0\\Bin\\MSBuild.exe /t:Rebuild /consoleloggerparameters:ErrorsOnly\nD:\\LeoYang\\Desktop\\Scanner\\MSBuild.SonarQube.Runner.exe end /d:sonar.login=\"48a60c2565d9929037d9e168a182deb484ec44e2\"\n```\n\n可以寫成batch，透過githook在push之後去讓它自動分析程式碼，hen方便，在code review之前可以先跑一下，減少一些錯誤","slug":"用Sonarqube做靜態程式碼分析","published":1,"updated":"2024-11-21T02:20:00.256Z","layout":"post","photos":[],"link":"","_id":"cm3xvfy99004wewi94x335a8k","content":"<h1><span id=\"用sonarqube做靜態程式碼分析\">用Sonarqube做靜態程式碼分析</span></h1>\n<h2><span id=\"環境\">環境</span></h2>\n<p>Sonarqube需要在有java的環境下才能執行，所以要先安裝java<br>\njava18</p>\n<p><img src=\"java18.PNG\" alt=\"environment\"></p>\n<p>安裝Sonarqube Community</p>\n<p><img src=\"sonar.PNG\" alt=\"sonar\"></p>\n<h2><span id=\"啟動sonarqube\">啟動Sonarqube</span></h2>\n<p>Sonarqube Community 下載完解壓縮，在.sonarqube-8.4.2.36762\\bin\\windows-x86-64目錄下依序用管理員權限去註冊需要的服務(1.2)，然後用管理員權限啟用Sonarqube(3)</p>\n<p><img src=\"run.PNG\" alt=\"run\"></p>\n<p>如果沒有看到例外訊息，看到這幾個關鍵字就代表服務已經啟用了，有例外的話先把作業系統中sonarqube相關的process殺掉再重啟試試看，基本上這樣就可以解決大部分的問題，如果相同的例外訊息一直出現就要上網找一下是發生什麼問題，然後加到這篇文章裡面</p>\n<p><img src=\"running.PNG\" alt=\"running\"></p>\n<h2><span id=\"登入sonarqube\">登入Sonarqube</span></h2>\n<p>在瀏覽器打localhost:9000應該就會看到設定畫面，因為我已經設定完了，所以就會顯示登入畫面</p>\n<p><img src=\"login.PNG\" alt=\"login\"></p>\n<p>登入之後會看到目前專案程式碼分析的結果，主要會分成幾個部分</p>\n<p>程式問題(Bug)、漏洞(Vulnerabilities)、安全問題(Hotspots Reviewed)、</p>\n<p>程式不良設計(Code Smells)、測試涵蓋率(Coverage)、重複代碼(Duplications)</p>\n<p>最後面那個2.9K、103K是指目前程式欠了多少技術債， 點專案名稱可以看到專案更詳細的程式碼分析<br>\n<img src=\"main.PNG\" alt=\"main\"></p>\n<h2><span id=\"主要功能\">主要功能</span></h2>\n<h3><span id=\"issue\">issue</span></h3>\n<p>issues 會記錄bug的種類、嚴重程度還有如何修正…e.t.c.<br>\n<img src=\"issue.PNG\" alt=\"issue\"><br>\n<img src=\"issue1.PNG\" alt=\"issue1\"></p>\n<h3><span id=\"security-hotspots\">Security Hotspots</span></h3>\n<p>Security Hotspots是指程式碼資安的漏洞，像我這裡程式碼用了一個正規表示法的檢查去篩選資料，就被判斷裡面可能會有邏輯上的漏洞<br>\n<img src=\"security.PNG\" alt=\"security\"></p>\n<h2><span id=\"新增專案\">新增專案</span></h2>\n<p>在主畫面右上角按這個+可以新增專案，他會給你一組token作為分析程式碼的key，這裡還要下載一個Sonarqube的掃描器(Scanner)<br>\n<img src=\"add.PNG\" alt=\"add\"><br>\n<a href=\"https://docs.sonarqube.org/latest/analysis/scan/sonarscanner-for-msbuild/\" target=\"_blank\" rel=\"noopener\">https://docs.sonarqube.org/latest/analysis/scan/sonarscanner-for-msbuild/</a></p>\n<p><img src=\"scanner.PNG\" alt=\"scanner\"></p>\n<p>拿新增專案時的token當成參數去呼叫scanner，分析的結果就會顯示到sonarqube的主畫面上了，呼叫掃描器的代碼大概長這樣</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /D D:\\LeoYang\\Desktop\\Publisher</span><br><span class=\"line\">D:\\LeoYang\\Desktop\\Scanner\\MSBuild.SonarQube.Runner.exe begin /k:&quot;FirstProject&quot; /d:sonar.host.url=&quot;http://localhost:9000&quot; /d:sonar.login=&quot;48a60c2565d9929037d9e168a182deb484ec44e2&quot;</span><br><span class=\"line\">D:\\vs2017\\MSBuild\\15.0\\Bin\\MSBuild.exe /t:Rebuild /consoleloggerparameters:ErrorsOnly</span><br><span class=\"line\">D:\\LeoYang\\Desktop\\Scanner\\MSBuild.SonarQube.Runner.exe end /d:sonar.login=&quot;48a60c2565d9929037d9e168a182deb484ec44e2&quot;</span><br></pre></td></tr></table></figure>\n<p>可以寫成batch，透過githook在push之後去讓它自動分析程式碼，hen方便，在code review之前可以先跑一下，減少一些錯誤</p>\n","site":{"data":{}},"excerpt":"","more":"<h1>用Sonarqube做靜態程式碼分析</h1>\n<h2>環境</h2>\n<p>Sonarqube需要在有java的環境下才能執行，所以要先安裝java<br>\njava18</p>\n<p><img src=\"java18.PNG\" alt=\"environment\"></p>\n<p>安裝Sonarqube Community</p>\n<p><img src=\"sonar.PNG\" alt=\"sonar\"></p>\n<h2>啟動Sonarqube</h2>\n<p>Sonarqube Community 下載完解壓縮，在.sonarqube-8.4.2.36762\\bin\\windows-x86-64目錄下依序用管理員權限去註冊需要的服務(1.2)，然後用管理員權限啟用Sonarqube(3)</p>\n<p><img src=\"run.PNG\" alt=\"run\"></p>\n<p>如果沒有看到例外訊息，看到這幾個關鍵字就代表服務已經啟用了，有例外的話先把作業系統中sonarqube相關的process殺掉再重啟試試看，基本上這樣就可以解決大部分的問題，如果相同的例外訊息一直出現就要上網找一下是發生什麼問題，然後加到這篇文章裡面</p>\n<p><img src=\"running.PNG\" alt=\"running\"></p>\n<h2>登入Sonarqube</h2>\n<p>在瀏覽器打localhost:9000應該就會看到設定畫面，因為我已經設定完了，所以就會顯示登入畫面</p>\n<p><img src=\"login.PNG\" alt=\"login\"></p>\n<p>登入之後會看到目前專案程式碼分析的結果，主要會分成幾個部分</p>\n<p>程式問題(Bug)、漏洞(Vulnerabilities)、安全問題(Hotspots Reviewed)、</p>\n<p>程式不良設計(Code Smells)、測試涵蓋率(Coverage)、重複代碼(Duplications)</p>\n<p>最後面那個2.9K、103K是指目前程式欠了多少技術債， 點專案名稱可以看到專案更詳細的程式碼分析<br>\n<img src=\"main.PNG\" alt=\"main\"></p>\n<h2>主要功能</h2>\n<h3>issue</h3>\n<p>issues 會記錄bug的種類、嚴重程度還有如何修正…e.t.c.<br>\n<img src=\"issue.PNG\" alt=\"issue\"><br>\n<img src=\"issue1.PNG\" alt=\"issue1\"></p>\n<h3>Security Hotspots</h3>\n<p>Security Hotspots是指程式碼資安的漏洞，像我這裡程式碼用了一個正規表示法的檢查去篩選資料，就被判斷裡面可能會有邏輯上的漏洞<br>\n<img src=\"security.PNG\" alt=\"security\"></p>\n<h2>新增專案</h2>\n<p>在主畫面右上角按這個+可以新增專案，他會給你一組token作為分析程式碼的key，這裡還要下載一個Sonarqube的掃描器(Scanner)<br>\n<img src=\"add.PNG\" alt=\"add\"><br>\n<a href=\"https://docs.sonarqube.org/latest/analysis/scan/sonarscanner-for-msbuild/\" target=\"_blank\" rel=\"noopener\">https://docs.sonarqube.org/latest/analysis/scan/sonarscanner-for-msbuild/</a></p>\n<p><img src=\"scanner.PNG\" alt=\"scanner\"></p>\n<p>拿新增專案時的token當成參數去呼叫scanner，分析的結果就會顯示到sonarqube的主畫面上了，呼叫掃描器的代碼大概長這樣</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /D D:\\LeoYang\\Desktop\\Publisher</span><br><span class=\"line\">D:\\LeoYang\\Desktop\\Scanner\\MSBuild.SonarQube.Runner.exe begin /k:&quot;FirstProject&quot; /d:sonar.host.url=&quot;http://localhost:9000&quot; /d:sonar.login=&quot;48a60c2565d9929037d9e168a182deb484ec44e2&quot;</span><br><span class=\"line\">D:\\vs2017\\MSBuild\\15.0\\Bin\\MSBuild.exe /t:Rebuild /consoleloggerparameters:ErrorsOnly</span><br><span class=\"line\">D:\\LeoYang\\Desktop\\Scanner\\MSBuild.SonarQube.Runner.exe end /d:sonar.login=&quot;48a60c2565d9929037d9e168a182deb484ec44e2&quot;</span><br></pre></td></tr></table></figure>\n<p>可以寫成batch，透過githook在push之後去讓它自動分析程式碼，hen方便，在code review之前可以先跑一下，減少一些錯誤</p>\n"},{"title":"當沖券差","catalog":true,"comments":1,"abbrlink":727,"date":"2022-09-12T06:08:57.000Z","_content":"\n### 現金權益補償業務運作原理\n![Result](work.png)\n\n","source":"_posts/當沖券差.md","raw":"---\ntitle: 當沖券差\ncatalog: true\ncomments: true\ntags:\n  - Know How\nabbrlink: 727\ncategories: uncategorized\ndate: 2022-09-12 14:08:57\n---\n\n### 現金權益補償業務運作原理\n![Result](work.png)\n\n","slug":"當沖券差","published":1,"updated":"2024-11-21T02:20:00.278Z","layout":"post","photos":[],"link":"","_id":"cm3xvfyak008zewi9urtg4xhn","content":"<h3><span id=\"現金權益補償業務運作原理\">現金權益補償業務運作原理</span></h3>\n<p><img src=\"work.png\" alt=\"Result\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h3>現金權益補償業務運作原理</h3>\n<p><img src=\"work.png\" alt=\"Result\"></p>\n"},{"title":"發布.Net Core Webapi到IIS","catalog":true,"comments":1,"abbrlink":45832,"date":"2020-09-23T07:28:01.000Z","_content":"# 發布 .net core webapi 到iis\n\n\n\n因為這樣就不會有一個黑黑色的視窗在那邊，如果不清楚這是在做什麼的人不小心關掉的話，API就停止了\n\n可以在IIS裡統一管理目前正在執行的API有哪些，還可以透過window事件檢視器看到api的log\n\n---\n## IIS\n### 建立IIS應用程式集區\n建立一個叫做NetCore的應用程式集區跟.netframework的應用程式集區做區隔\n.NET CLR版本要選沒有 'Managed程式碼'\n![iis](r1.png)\n### 新增IIS站台\n透過http連線的站台，主要設定的有\n- 站台名稱(管理用的)\n- 應用程式集區\n- 實體路徑\n- 類型\n- 連接埠\n  \n![iis-http](r2.png)\n\n如果要設定https的站台，只要把類型改成https，然後選取對應的SSL憑證就可以了\n\n![iis-https](r3.png)\n\n---\n\n## 發布專案\n如果沒有什麼特殊的需求，基本上只要設定發布的位置就可以了，可以設定剛剛IIS站台的實體路徑，或是其他地方在複製到IIS站台實體路徑裡，然後按發布按鈕visual studio就會開始發布API\n\n\n\n如果發布的時候不是選IIS站台設定的實體路徑，發布成功之後要把發布的檔案移到IIS站台實體路徑下\n![publish-success](r5.png)\n\n---\n\n## 安裝 .Net Core Hosting Bundle\n[host bundle 下載連結 ](https://dotnet.microsoft.com/download/dotnet-core/current/runtime)\n\n依照webapi專案的 . net core版本安裝對應的hosting bundle，版本應該是有向下相容吧....吧\n![install host bundle](r6.png)\n\n---\n## 測試\n用postman帶對應的參數打打看API，如果StatusCode是200，也是回應正確的內容就是成功了\n![install host bundle](r7.png)\n\n---\n\n## 常見問題\n\n如果是這幾種錯誤代碼，基本上就是服務已經掛上去了，但是環境有一些問題，如果拿去google會找到一大堆不一樣的解法，照著做了之後api還是不能用，萬用解就是開windows事件檢視器(eventvwr)，看詳細的錯誤訊息是什麼一一解決，會比在網路上隨便找得更精準的解決掉你自己環境的問題\n```\nHTTP Error 500.30 - ANCM In-Process Start Failure\nHTTP Error 500.38 - ANCM Application DLL Not Found\nHTTP Error 500.31 - ANCM Failed to Find Native Dependencies\nHTTP Error 502.5 - ANCM Out-Of-Process Startup Failure (Windows Server)\nThe specified version of Microsoft.NetCore.App or Microsoft.AspNetCore.App was not found.\n```\n![Windows Event Viewer](r8.png)\n\n\n這幾種跟config設定有很大的關係，可能就是google到的解法叫你改config，結果註解掉xml開頭的tag沒有拿掉結束的tag，如果遇到這種問題可以先把IIS站台實體路徑裡面的檔案跟專案發布的檔案都先備份起來然後刪掉環境的檔案，重新發布一次，或是像我一樣開一個全新的. net core web api，發布一次比對排除有可能發生問題的地方\n```\nHTTP Error 500.1X\nHTTP Error 500.19 - Internal Server Error\nHTTP Error 404\n```","source":"_posts/發布-Net-Core-Webapi到IIS.md","raw":"---\ntitle: 發布.Net Core Webapi到IIS\ncatalog: true\ncomments: true\ntags:\n  - C#\n  - .Net Core\n  - IIS\n  - WebAPI\n  - Publish\nabbrlink: 45832\ncategories: uncategorized\ndate: 2020-09-23 15:28:01\n---\n# 發布 .net core webapi 到iis\n\n\n\n因為這樣就不會有一個黑黑色的視窗在那邊，如果不清楚這是在做什麼的人不小心關掉的話，API就停止了\n\n可以在IIS裡統一管理目前正在執行的API有哪些，還可以透過window事件檢視器看到api的log\n\n---\n## IIS\n### 建立IIS應用程式集區\n建立一個叫做NetCore的應用程式集區跟.netframework的應用程式集區做區隔\n.NET CLR版本要選沒有 'Managed程式碼'\n![iis](r1.png)\n### 新增IIS站台\n透過http連線的站台，主要設定的有\n- 站台名稱(管理用的)\n- 應用程式集區\n- 實體路徑\n- 類型\n- 連接埠\n  \n![iis-http](r2.png)\n\n如果要設定https的站台，只要把類型改成https，然後選取對應的SSL憑證就可以了\n\n![iis-https](r3.png)\n\n---\n\n## 發布專案\n如果沒有什麼特殊的需求，基本上只要設定發布的位置就可以了，可以設定剛剛IIS站台的實體路徑，或是其他地方在複製到IIS站台實體路徑裡，然後按發布按鈕visual studio就會開始發布API\n\n\n\n如果發布的時候不是選IIS站台設定的實體路徑，發布成功之後要把發布的檔案移到IIS站台實體路徑下\n![publish-success](r5.png)\n\n---\n\n## 安裝 .Net Core Hosting Bundle\n[host bundle 下載連結 ](https://dotnet.microsoft.com/download/dotnet-core/current/runtime)\n\n依照webapi專案的 . net core版本安裝對應的hosting bundle，版本應該是有向下相容吧....吧\n![install host bundle](r6.png)\n\n---\n## 測試\n用postman帶對應的參數打打看API，如果StatusCode是200，也是回應正確的內容就是成功了\n![install host bundle](r7.png)\n\n---\n\n## 常見問題\n\n如果是這幾種錯誤代碼，基本上就是服務已經掛上去了，但是環境有一些問題，如果拿去google會找到一大堆不一樣的解法，照著做了之後api還是不能用，萬用解就是開windows事件檢視器(eventvwr)，看詳細的錯誤訊息是什麼一一解決，會比在網路上隨便找得更精準的解決掉你自己環境的問題\n```\nHTTP Error 500.30 - ANCM In-Process Start Failure\nHTTP Error 500.38 - ANCM Application DLL Not Found\nHTTP Error 500.31 - ANCM Failed to Find Native Dependencies\nHTTP Error 502.5 - ANCM Out-Of-Process Startup Failure (Windows Server)\nThe specified version of Microsoft.NetCore.App or Microsoft.AspNetCore.App was not found.\n```\n![Windows Event Viewer](r8.png)\n\n\n這幾種跟config設定有很大的關係，可能就是google到的解法叫你改config，結果註解掉xml開頭的tag沒有拿掉結束的tag，如果遇到這種問題可以先把IIS站台實體路徑裡面的檔案跟專案發布的檔案都先備份起來然後刪掉環境的檔案，重新發布一次，或是像我一樣開一個全新的. net core web api，發布一次比對排除有可能發生問題的地方\n```\nHTTP Error 500.1X\nHTTP Error 500.19 - Internal Server Error\nHTTP Error 404\n```","slug":"發布-Net-Core-Webapi到IIS","published":1,"updated":"2024-11-21T02:20:00.280Z","layout":"post","photos":[],"link":"","_id":"cm3xvfyal0091ewi9owx114oq","content":"<h1><span id=\"發布-net-core-webapi-到iis\">發布 .net core webapi 到iis</span></h1>\n<p>因為這樣就不會有一個黑黑色的視窗在那邊，如果不清楚這是在做什麼的人不小心關掉的話，API就停止了</p>\n<p>可以在IIS裡統一管理目前正在執行的API有哪些，還可以透過window事件檢視器看到api的log</p>\n<hr>\n<h2><span id=\"iis\">IIS</span></h2>\n<h3><span id=\"建立iis應用程式集區\">建立IIS應用程式集區</span></h3>\n<p>建立一個叫做NetCore的應用程式集區跟.netframework的應用程式集區做區隔<br>\n.NET CLR版本要選沒有 ‘Managed程式碼’<br>\n<img src=\"r1.png\" alt=\"iis\"></p>\n<h3><span id=\"新增iis站台\">新增IIS站台</span></h3>\n<p>透過http連線的站台，主要設定的有</p>\n<ul>\n<li>站台名稱(管理用的)</li>\n<li>應用程式集區</li>\n<li>實體路徑</li>\n<li>類型</li>\n<li>連接埠</li>\n</ul>\n<p><img src=\"r2.png\" alt=\"iis-http\"></p>\n<p>如果要設定https的站台，只要把類型改成https，然後選取對應的SSL憑證就可以了</p>\n<p><img src=\"r3.png\" alt=\"iis-https\"></p>\n<hr>\n<h2><span id=\"發布專案\">發布專案</span></h2>\n<p>如果沒有什麼特殊的需求，基本上只要設定發布的位置就可以了，可以設定剛剛IIS站台的實體路徑，或是其他地方在複製到IIS站台實體路徑裡，然後按發布按鈕visual studio就會開始發布API</p>\n<p>如果發布的時候不是選IIS站台設定的實體路徑，發布成功之後要把發布的檔案移到IIS站台實體路徑下<br>\n<img src=\"r5.png\" alt=\"publish-success\"></p>\n<hr>\n<h2><span id=\"安裝-net-core-hosting-bundle\">安裝 .Net Core Hosting Bundle</span></h2>\n<p><a href=\"https://dotnet.microsoft.com/download/dotnet-core/current/runtime\" target=\"_blank\" rel=\"noopener\">host bundle 下載連結 </a></p>\n<p>依照webapi專案的 . net core版本安裝對應的hosting bundle，版本應該是有向下相容吧…吧<br>\n<img src=\"r6.png\" alt=\"install host bundle\"></p>\n<hr>\n<h2><span id=\"測試\">測試</span></h2>\n<p>用postman帶對應的參數打打看API，如果StatusCode是200，也是回應正確的內容就是成功了<br>\n<img src=\"r7.png\" alt=\"install host bundle\"></p>\n<hr>\n<h2><span id=\"常見問題\">常見問題</span></h2>\n<p>如果是這幾種錯誤代碼，基本上就是服務已經掛上去了，但是環境有一些問題，如果拿去google會找到一大堆不一樣的解法，照著做了之後api還是不能用，萬用解就是開windows事件檢視器(eventvwr)，看詳細的錯誤訊息是什麼一一解決，會比在網路上隨便找得更精準的解決掉你自己環境的問題</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HTTP Error 500.30 - ANCM In-Process <span class=\"keyword\">Start</span> <span class=\"keyword\">Failure</span></span><br><span class=\"line\"><span class=\"keyword\">HTTP</span> <span class=\"keyword\">Error</span> <span class=\"number\">500.38</span> - ANCM Application DLL <span class=\"keyword\">Not</span> <span class=\"keyword\">Found</span></span><br><span class=\"line\"><span class=\"keyword\">HTTP</span> <span class=\"keyword\">Error</span> <span class=\"number\">500.31</span> - ANCM <span class=\"keyword\">Failed</span> <span class=\"keyword\">to</span> Find <span class=\"keyword\">Native</span> Dependencies</span><br><span class=\"line\"><span class=\"keyword\">HTTP</span> <span class=\"keyword\">Error</span> <span class=\"number\">502.5</span> - ANCM <span class=\"keyword\">Out</span>-<span class=\"keyword\">Of</span>-Process <span class=\"keyword\">Startup</span> <span class=\"keyword\">Failure</span> (Windows <span class=\"keyword\">Server</span>)</span><br><span class=\"line\">The specified <span class=\"keyword\">version</span> <span class=\"keyword\">of</span> Microsoft.NetCore.App <span class=\"keyword\">or</span> Microsoft.AspNetCore.App was <span class=\"keyword\">not</span> found.</span><br></pre></td></tr></table></figure>\n<p><img src=\"r8.png\" alt=\"Windows Event Viewer\"></p>\n<p>這幾種跟config設定有很大的關係，可能就是google到的解法叫你改config，結果註解掉xml開頭的tag沒有拿掉結束的tag，如果遇到這種問題可以先把IIS站台實體路徑裡面的檔案跟專案發布的檔案都先備份起來然後刪掉環境的檔案，重新發布一次，或是像我一樣開一個全新的. net core web api，發布一次比對排除有可能發生問題的地方</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HTTP <span class=\"builtin-name\">Error</span> 500.1X</span><br><span class=\"line\">HTTP <span class=\"builtin-name\">Error</span> 500.19 - Internal<span class=\"built_in\"> Server </span>Error</span><br><span class=\"line\">HTTP <span class=\"builtin-name\">Error</span> 404</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1>發布 .net core webapi 到iis</h1>\n<p>因為這樣就不會有一個黑黑色的視窗在那邊，如果不清楚這是在做什麼的人不小心關掉的話，API就停止了</p>\n<p>可以在IIS裡統一管理目前正在執行的API有哪些，還可以透過window事件檢視器看到api的log</p>\n<hr>\n<h2>IIS</h2>\n<h3>建立IIS應用程式集區</h3>\n<p>建立一個叫做NetCore的應用程式集區跟.netframework的應用程式集區做區隔<br>\n.NET CLR版本要選沒有 ‘Managed程式碼’<br>\n<img src=\"r1.png\" alt=\"iis\"></p>\n<h3>新增IIS站台</h3>\n<p>透過http連線的站台，主要設定的有</p>\n<ul>\n<li>站台名稱(管理用的)</li>\n<li>應用程式集區</li>\n<li>實體路徑</li>\n<li>類型</li>\n<li>連接埠</li>\n</ul>\n<p><img src=\"r2.png\" alt=\"iis-http\"></p>\n<p>如果要設定https的站台，只要把類型改成https，然後選取對應的SSL憑證就可以了</p>\n<p><img src=\"r3.png\" alt=\"iis-https\"></p>\n<hr>\n<h2>發布專案</h2>\n<p>如果沒有什麼特殊的需求，基本上只要設定發布的位置就可以了，可以設定剛剛IIS站台的實體路徑，或是其他地方在複製到IIS站台實體路徑裡，然後按發布按鈕visual studio就會開始發布API</p>\n<p>如果發布的時候不是選IIS站台設定的實體路徑，發布成功之後要把發布的檔案移到IIS站台實體路徑下<br>\n<img src=\"r5.png\" alt=\"publish-success\"></p>\n<hr>\n<h2>安裝 .Net Core Hosting Bundle</h2>\n<p><a href=\"https://dotnet.microsoft.com/download/dotnet-core/current/runtime\" target=\"_blank\" rel=\"noopener\">host bundle 下載連結 </a></p>\n<p>依照webapi專案的 . net core版本安裝對應的hosting bundle，版本應該是有向下相容吧…吧<br>\n<img src=\"r6.png\" alt=\"install host bundle\"></p>\n<hr>\n<h2>測試</h2>\n<p>用postman帶對應的參數打打看API，如果StatusCode是200，也是回應正確的內容就是成功了<br>\n<img src=\"r7.png\" alt=\"install host bundle\"></p>\n<hr>\n<h2>常見問題</h2>\n<p>如果是這幾種錯誤代碼，基本上就是服務已經掛上去了，但是環境有一些問題，如果拿去google會找到一大堆不一樣的解法，照著做了之後api還是不能用，萬用解就是開windows事件檢視器(eventvwr)，看詳細的錯誤訊息是什麼一一解決，會比在網路上隨便找得更精準的解決掉你自己環境的問題</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HTTP Error 500.30 - ANCM In-Process <span class=\"keyword\">Start</span> <span class=\"keyword\">Failure</span></span><br><span class=\"line\"><span class=\"keyword\">HTTP</span> <span class=\"keyword\">Error</span> <span class=\"number\">500.38</span> - ANCM Application DLL <span class=\"keyword\">Not</span> <span class=\"keyword\">Found</span></span><br><span class=\"line\"><span class=\"keyword\">HTTP</span> <span class=\"keyword\">Error</span> <span class=\"number\">500.31</span> - ANCM <span class=\"keyword\">Failed</span> <span class=\"keyword\">to</span> Find <span class=\"keyword\">Native</span> Dependencies</span><br><span class=\"line\"><span class=\"keyword\">HTTP</span> <span class=\"keyword\">Error</span> <span class=\"number\">502.5</span> - ANCM <span class=\"keyword\">Out</span>-<span class=\"keyword\">Of</span>-Process <span class=\"keyword\">Startup</span> <span class=\"keyword\">Failure</span> (Windows <span class=\"keyword\">Server</span>)</span><br><span class=\"line\">The specified <span class=\"keyword\">version</span> <span class=\"keyword\">of</span> Microsoft.NetCore.App <span class=\"keyword\">or</span> Microsoft.AspNetCore.App was <span class=\"keyword\">not</span> found.</span><br></pre></td></tr></table></figure>\n<p><img src=\"r8.png\" alt=\"Windows Event Viewer\"></p>\n<p>這幾種跟config設定有很大的關係，可能就是google到的解法叫你改config，結果註解掉xml開頭的tag沒有拿掉結束的tag，如果遇到這種問題可以先把IIS站台實體路徑裡面的檔案跟專案發布的檔案都先備份起來然後刪掉環境的檔案，重新發布一次，或是像我一樣開一個全新的. net core web api，發布一次比對排除有可能發生問題的地方</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HTTP <span class=\"builtin-name\">Error</span> 500.1X</span><br><span class=\"line\">HTTP <span class=\"builtin-name\">Error</span> 500.19 - Internal<span class=\"built_in\"> Server </span>Error</span><br><span class=\"line\">HTTP <span class=\"builtin-name\">Error</span> 404</span><br></pre></td></tr></table></figure>"},{"title":"資料結構","catalog":true,"comments":1,"abbrlink":4994,"date":"2020-09-04T09:23:10.000Z","_content":"","source":"_posts/資料結構.md","raw":"---\ntitle: 資料結構\ncatalog: true\ncomments: true\nabbrlink: 4994\ncategories: uncategorized\ndate: 2020-09-04 17:23:10\ntags:\n---\n","slug":"資料結構","published":1,"updated":"2024-11-21T02:20:00.286Z","layout":"post","photos":[],"link":"","_id":"cm3xvfyam0093ewi91ibfnykc","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"透過Git Hook，push時部屬程式(pre-push)","catalog":true,"abbrlink":"adfed306","date":"2020-07-02T08:17:26.000Z","subtitle":null,"header-img":null,"_content":"\n### 透過GitHook Prepush機制，Push時部屬程式\n#### 環境準備\n- Git\n- Python\n用Python主要是因為不用編譯，拿來做一些Script很方便\n\n#### 準備githook - Prepush\ngit hook 機制可以讓我們在commit、pull、push….e.t.c.時執行特定的動作，例如執行測試、寄信通知更新、檢查編譯是否通過等…..hen方便\n\n在開發的專案下，githook目錄中把pre-prepush.sample副檔名移除 > pre-push\n\n*盡量用改的，因為githook裡面有一些特殊的編碼，如果自己寫可能會有問題\n\n路徑 : Project\\ProjectName.git\\hooks\\\n\n在prepush中增加下面內容，也可以視情況移除掉不需要的指令或是更改路徑、命名\n\n```batch\n#!/bin/sh\n\n# 取得最後一次commit內容到文字檔\ngit log -n 1 > \"D:\\NeverRemove.txt\"\n\n# 通知\n## Notify通知重啟服務\npython .git/hooks/LineNotifyReboot.py\n## Mail通知重啟服務\npython .git/hooks/MailNotifyReboot.py\n\n# 停用服務\n.git/hooks/StartOrStopService.exe\n\n# 備份 && 發布\n.git/hooks/backup.bat\n\n# 啟用服務\n.git/hooks/StartOrStop.exe\n\n# 通知\n## Notify通知更新完成\npython .git/hooks/LineNotifyRelease.py\n## Mail通知更新完成\npython .git/hooks/MailNotifyRelease.py\n```\n\n#### 準備通知程式\n##### MailNotifyReboot.py – 信件通知重啟程式\n```python\n# -*- coding: utf-8 -*-\nimport json\nfrom email.mime.text import MIMEText\nimport smtplib\n\n\n# Account infomation load\ngmailUser = 'yourmail@gmail.com'\ngmailPasswd = 'yourpassword'\nto = ['receiver1@gmail.com', 'receiver2@gmail.com', 'receiverˇ@gmail.com']\n\n# Create message\nemails = [t.split(',') for t in to]\nmessage = MIMEText('Dear all,\\n\\nOO系統服務將在幾分鐘內重新啟動，請盡快將正在操作的資料儲存避免資料遺失。\\n如果有任何問題需要協助請隨時與我聯繫，感謝 !\\n\\nRegards,\\n', 'plain', 'utf-8')\nmessage['Subject'] = 'OO系統更新'\nmessage['From'] = gmailUser\nmessage['To'] = ','.join(to)\n\n# Set smtp\nsmtp = smtplib.SMTP(\"mail.com.tw:25\")\nsmtp.ehlo()\nsmtp.starttls()\nsmtp.login(gmailUser, gmailPasswd)\n\n# Send msil\nsmtp.sendmail(message['From'], message['To'], message.as_string())\nprint('Send mails OK!')\n```\n![Mail Notify](Mail.png)\n##### LineNotifyReboot.py – LineNotify通知重啟程式\n```python\nimport requests\nimport sys\n\ndef lineNotifyMessage(token, msg, url):\n      headers = {\n          \"Authorization\": \"Bearer \" + token, \n          \"Content-Type\" : \"application/x-www-form-urlencoded\"\n      }\n\t\n      payload = {'message': msg,  'imageThumbnail': url,'imageFullsize': url}\n      r = requests.post(\"https://notify-api.line.me/api/notify\", headers = headers, params = payload)\n      return r.status_code\n\t\n\nf = open(\"D:/NeverRemove.txt\", \"r\",encoding=\"utf-8\")\nmessage = \"Dear all,\\n\\nOOO system service will be rebooted in a few minutes, please save important data to avoid data loss.\\nIf you have any questions, please feel free to contact me, thank you!\\n\\n128 Leo\\n\\nRegards,\\n\"\n\nurl = \"https://e23882.github.io/img/maybe.PNG\"\n# 修改為你的權杖內容\ntoken= 'yourlinenotifytoken'\n#lineNotifyMessage(token, message, url)\n```\n![Mail Notify](Line.png)\n\n#### 準備備份、發布批次檔\nbackup.bat :\n```batch\n:: 產生備份目錄\nset Date_folder=%date:~0,4%%date:~5,2%%date:~8,2%_%time:~0,2%%time:~3,2%%time:~6,2%\n:: 產生備份目錄\nmd \"\\\\Server\\備份\\\"%Date_folder%\n:: 備份 client 64/32bits\nxcopy \"\\\\Server\\Deploy\" \"\\\\Server\\備份\\\"%Date_folder% /E /H /C /I /Y\n\n:: 備份 service\nxcopy \"\\\\Server\\ApServices\" \"\\\\Server\\備份\\\"%Date_folder%\"\\Service\" /E /H /C /I /Y\n\n:: 更新Client檔案\nxcopy \"D:\\Backup\\Project\\bin\\Debug\" \"\\\\Server\\JepunShare_IMS\\JepunIMSDeploy\\32\" /E /H /C /I /Y /exclude:D:\\Backup\\Project\\.git\\hooks\\Exclude.txt\nxcopy \"D:\\Backup\\Project\\bin\\Debug\" \"\\\\Server\\JepunShare_IMS\\JepunIMSDeploy\\64\" /E /H /C /I /Y /exclude:D:\\Backup\\Project\\.git\\hooks\\Exclude.txt\n\n:: 更新服務\nxcopy \"D:\\Backup\\Project\\Service\\bin\\Debug\" \"\\\\Server\\Services\" /E /H /C /I /Y /exclude:D:\\Backup\\Project\\.git\\hooks\\Exclude.txt\n```\nExclude.txt – 不複製檔案清單\n```\n.pdb\n.xml\nApp_Data\n.txt\n```\n\n[完整程式碼](https://github.com/e23882/GitHook/tree/master/Depoly)","source":"_posts/透過Git-Hook，push時部屬程式-pre-push.md","raw":"---\ntitle: 透過Git Hook，push時部屬程式(pre-push)\ncatalog: true\ntags:\n  - Git\n  - Python\n  - CI\nabbrlink: adfed306\ncategories: uncategorized\ndate: 2020-07-02 16:17:26\nsubtitle:\nheader-img:\n---\n\n### 透過GitHook Prepush機制，Push時部屬程式\n#### 環境準備\n- Git\n- Python\n用Python主要是因為不用編譯，拿來做一些Script很方便\n\n#### 準備githook - Prepush\ngit hook 機制可以讓我們在commit、pull、push….e.t.c.時執行特定的動作，例如執行測試、寄信通知更新、檢查編譯是否通過等…..hen方便\n\n在開發的專案下，githook目錄中把pre-prepush.sample副檔名移除 > pre-push\n\n*盡量用改的，因為githook裡面有一些特殊的編碼，如果自己寫可能會有問題\n\n路徑 : Project\\ProjectName.git\\hooks\\\n\n在prepush中增加下面內容，也可以視情況移除掉不需要的指令或是更改路徑、命名\n\n```batch\n#!/bin/sh\n\n# 取得最後一次commit內容到文字檔\ngit log -n 1 > \"D:\\NeverRemove.txt\"\n\n# 通知\n## Notify通知重啟服務\npython .git/hooks/LineNotifyReboot.py\n## Mail通知重啟服務\npython .git/hooks/MailNotifyReboot.py\n\n# 停用服務\n.git/hooks/StartOrStopService.exe\n\n# 備份 && 發布\n.git/hooks/backup.bat\n\n# 啟用服務\n.git/hooks/StartOrStop.exe\n\n# 通知\n## Notify通知更新完成\npython .git/hooks/LineNotifyRelease.py\n## Mail通知更新完成\npython .git/hooks/MailNotifyRelease.py\n```\n\n#### 準備通知程式\n##### MailNotifyReboot.py – 信件通知重啟程式\n```python\n# -*- coding: utf-8 -*-\nimport json\nfrom email.mime.text import MIMEText\nimport smtplib\n\n\n# Account infomation load\ngmailUser = 'yourmail@gmail.com'\ngmailPasswd = 'yourpassword'\nto = ['receiver1@gmail.com', 'receiver2@gmail.com', 'receiverˇ@gmail.com']\n\n# Create message\nemails = [t.split(',') for t in to]\nmessage = MIMEText('Dear all,\\n\\nOO系統服務將在幾分鐘內重新啟動，請盡快將正在操作的資料儲存避免資料遺失。\\n如果有任何問題需要協助請隨時與我聯繫，感謝 !\\n\\nRegards,\\n', 'plain', 'utf-8')\nmessage['Subject'] = 'OO系統更新'\nmessage['From'] = gmailUser\nmessage['To'] = ','.join(to)\n\n# Set smtp\nsmtp = smtplib.SMTP(\"mail.com.tw:25\")\nsmtp.ehlo()\nsmtp.starttls()\nsmtp.login(gmailUser, gmailPasswd)\n\n# Send msil\nsmtp.sendmail(message['From'], message['To'], message.as_string())\nprint('Send mails OK!')\n```\n![Mail Notify](Mail.png)\n##### LineNotifyReboot.py – LineNotify通知重啟程式\n```python\nimport requests\nimport sys\n\ndef lineNotifyMessage(token, msg, url):\n      headers = {\n          \"Authorization\": \"Bearer \" + token, \n          \"Content-Type\" : \"application/x-www-form-urlencoded\"\n      }\n\t\n      payload = {'message': msg,  'imageThumbnail': url,'imageFullsize': url}\n      r = requests.post(\"https://notify-api.line.me/api/notify\", headers = headers, params = payload)\n      return r.status_code\n\t\n\nf = open(\"D:/NeverRemove.txt\", \"r\",encoding=\"utf-8\")\nmessage = \"Dear all,\\n\\nOOO system service will be rebooted in a few minutes, please save important data to avoid data loss.\\nIf you have any questions, please feel free to contact me, thank you!\\n\\n128 Leo\\n\\nRegards,\\n\"\n\nurl = \"https://e23882.github.io/img/maybe.PNG\"\n# 修改為你的權杖內容\ntoken= 'yourlinenotifytoken'\n#lineNotifyMessage(token, message, url)\n```\n![Mail Notify](Line.png)\n\n#### 準備備份、發布批次檔\nbackup.bat :\n```batch\n:: 產生備份目錄\nset Date_folder=%date:~0,4%%date:~5,2%%date:~8,2%_%time:~0,2%%time:~3,2%%time:~6,2%\n:: 產生備份目錄\nmd \"\\\\Server\\備份\\\"%Date_folder%\n:: 備份 client 64/32bits\nxcopy \"\\\\Server\\Deploy\" \"\\\\Server\\備份\\\"%Date_folder% /E /H /C /I /Y\n\n:: 備份 service\nxcopy \"\\\\Server\\ApServices\" \"\\\\Server\\備份\\\"%Date_folder%\"\\Service\" /E /H /C /I /Y\n\n:: 更新Client檔案\nxcopy \"D:\\Backup\\Project\\bin\\Debug\" \"\\\\Server\\JepunShare_IMS\\JepunIMSDeploy\\32\" /E /H /C /I /Y /exclude:D:\\Backup\\Project\\.git\\hooks\\Exclude.txt\nxcopy \"D:\\Backup\\Project\\bin\\Debug\" \"\\\\Server\\JepunShare_IMS\\JepunIMSDeploy\\64\" /E /H /C /I /Y /exclude:D:\\Backup\\Project\\.git\\hooks\\Exclude.txt\n\n:: 更新服務\nxcopy \"D:\\Backup\\Project\\Service\\bin\\Debug\" \"\\\\Server\\Services\" /E /H /C /I /Y /exclude:D:\\Backup\\Project\\.git\\hooks\\Exclude.txt\n```\nExclude.txt – 不複製檔案清單\n```\n.pdb\n.xml\nApp_Data\n.txt\n```\n\n[完整程式碼](https://github.com/e23882/GitHook/tree/master/Depoly)","slug":"透過Git-Hook，push時部屬程式-pre-push","published":1,"updated":"2024-11-21T02:20:00.287Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cm3xvfyat0095ewi9762gygei","content":"<h3><span id=\"透過githook-prepush機制push時部屬程式\">透過GitHook Prepush機制，Push時部屬程式</span></h3>\n<h4><span id=\"環境準備\">環境準備</span></h4>\n<ul>\n<li>Git</li>\n<li>Python<br>\n用Python主要是因為不用編譯，拿來做一些Script很方便</li>\n</ul>\n<h4><span id=\"準備githook-prepush\">準備githook - Prepush</span></h4>\n<p>git hook 機制可以讓我們在commit、pull、push….e.t.c.時執行特定的動作，例如執行測試、寄信通知更新、檢查編譯是否通過等……hen方便</p>\n<p>在開發的專案下，githook目錄中把pre-prepush.sample副檔名移除 &gt; pre-push</p>\n<p>*盡量用改的，因為githook裡面有一些特殊的編碼，如果自己寫可能會有問題</p>\n<p>路徑 : Project\\ProjectName.git\\hooks\\</p>\n<p>在prepush中增加下面內容，也可以視情況移除掉不需要的指令或是更改路徑、命名</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/bin/sh</span><br><span class=\"line\"></span><br><span class=\"line\"># 取得最後一次commit內容到文字檔</span><br><span class=\"line\">git log -n 1 &gt; &quot;D:\\NeverRemove.txt&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"># 通知</span><br><span class=\"line\">## Notify通知重啟服務</span><br><span class=\"line\">python .git/hooks/LineNotifyReboot.py</span><br><span class=\"line\">## Mail通知重啟服務</span><br><span class=\"line\">python .git/hooks/MailNotifyReboot.py</span><br><span class=\"line\"></span><br><span class=\"line\"># 停用服務</span><br><span class=\"line\">.git/hooks/StartOrStopService.exe</span><br><span class=\"line\"></span><br><span class=\"line\"># 備份 &amp;&amp; 發布</span><br><span class=\"line\">.git/hooks/backup.bat</span><br><span class=\"line\"></span><br><span class=\"line\"># 啟用服務</span><br><span class=\"line\">.git/hooks/StartOrStop.exe</span><br><span class=\"line\"></span><br><span class=\"line\"># 通知</span><br><span class=\"line\">## Notify通知更新完成</span><br><span class=\"line\">python .git/hooks/LineNotifyRelease.py</span><br><span class=\"line\">## Mail通知更新完成</span><br><span class=\"line\">python .git/hooks/MailNotifyRelease.py</span><br></pre></td></tr></table></figure>\n<h4><span id=\"準備通知程式\">準備通知程式</span></h4>\n<h5><span id=\"mailnotifyrebootpy-信件通知重啟程式\"> – 信件通知重啟程式</span></h5>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> json</span><br><span class=\"line\"><span class=\"keyword\">from</span> email.mime.text <span class=\"keyword\">import</span> MIMEText</span><br><span class=\"line\"><span class=\"keyword\">import</span> smtplib</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Account infomation load</span></span><br><span class=\"line\">gmailUser = <span class=\"string\">'yourmail@gmail.com'</span></span><br><span class=\"line\">gmailPasswd = <span class=\"string\">'yourpassword'</span></span><br><span class=\"line\">to = [<span class=\"string\">'receiver1@gmail.com'</span>, <span class=\"string\">'receiver2@gmail.com'</span>, <span class=\"string\">'receiverˇ@gmail.com'</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Create message</span></span><br><span class=\"line\">emails = [t.split(<span class=\"string\">','</span>) <span class=\"keyword\">for</span> t <span class=\"keyword\">in</span> to]</span><br><span class=\"line\">message = MIMEText(<span class=\"string\">'Dear all,\\n\\nOO系統服務將在幾分鐘內重新啟動，請盡快將正在操作的資料儲存避免資料遺失。\\n如果有任何問題需要協助請隨時與我聯繫，感謝 !\\n\\nRegards,\\n'</span>, <span class=\"string\">'plain'</span>, <span class=\"string\">'utf-8'</span>)</span><br><span class=\"line\">message[<span class=\"string\">'Subject'</span>] = <span class=\"string\">'OO系統更新'</span></span><br><span class=\"line\">message[<span class=\"string\">'From'</span>] = gmailUser</span><br><span class=\"line\">message[<span class=\"string\">'To'</span>] = <span class=\"string\">','</span>.join(to)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Set smtp</span></span><br><span class=\"line\">smtp = smtplib.SMTP(<span class=\"string\">\"mail.com.tw:25\"</span>)</span><br><span class=\"line\">smtp.ehlo()</span><br><span class=\"line\">smtp.starttls()</span><br><span class=\"line\">smtp.login(gmailUser, gmailPasswd)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Send msil</span></span><br><span class=\"line\">smtp.sendmail(message[<span class=\"string\">'From'</span>], message[<span class=\"string\">'To'</span>], message.as_string())</span><br><span class=\"line\">print(<span class=\"string\">'Send mails OK!'</span>)</span><br></pre></td></tr></table></figure>\n<p><img src=\"Mail.png\" alt=\"Mail Notify\"></p>\n<h5><span id=\"linenotifyrebootpy-linenotify通知重啟程式\"> – LineNotify通知重啟程式</span></h5>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">lineNotifyMessage</span><span class=\"params\">(token, msg, url)</span>:</span></span><br><span class=\"line\">      headers = &#123;</span><br><span class=\"line\">          <span class=\"string\">\"Authorization\"</span>: <span class=\"string\">\"Bearer \"</span> + token, </span><br><span class=\"line\">          <span class=\"string\">\"Content-Type\"</span> : <span class=\"string\">\"application/x-www-form-urlencoded\"</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">      payload = &#123;<span class=\"string\">'message'</span>: msg,  <span class=\"string\">'imageThumbnail'</span>: url,<span class=\"string\">'imageFullsize'</span>: url&#125;</span><br><span class=\"line\">      r = requests.post(<span class=\"string\">\"https://notify-api.line.me/api/notify\"</span>, headers = headers, params = payload)</span><br><span class=\"line\">      <span class=\"keyword\">return</span> r.status_code</span><br><span class=\"line\">\t</span><br><span class=\"line\"></span><br><span class=\"line\">f = open(<span class=\"string\">\"D:/NeverRemove.txt\"</span>, <span class=\"string\">\"r\"</span>,encoding=<span class=\"string\">\"utf-8\"</span>)</span><br><span class=\"line\">message = <span class=\"string\">\"Dear all,\\n\\nOOO system service will be rebooted in a few minutes, please save important data to avoid data loss.\\nIf you have any questions, please feel free to contact me, thank you!\\n\\n128 Leo\\n\\nRegards,\\n\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">url = <span class=\"string\">\"https://e23882.github.io/img/maybe.PNG\"</span></span><br><span class=\"line\"><span class=\"comment\"># 修改為你的權杖內容</span></span><br><span class=\"line\">token= <span class=\"string\">'yourlinenotifytoken'</span></span><br><span class=\"line\"><span class=\"comment\">#lineNotifyMessage(token, message, url)</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"Line.png\" alt=\"Mail Notify\"></p>\n<h4><span id=\"準備備份-發布批次檔\">準備備份、發布批次檔</span></h4>\n<p>backup.bat :</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:: 產生備份目錄</span><br><span class=\"line\">set Date_folder=%date:~0,4%%date:~5,2%%date:~8,2%_%time:~0,2%%time:~3,2%%time:~6,2%</span><br><span class=\"line\">:: 產生備份目錄</span><br><span class=\"line\">md &quot;\\\\Server\\備份\\&quot;%Date_folder%</span><br><span class=\"line\">:: 備份 client 64/32bits</span><br><span class=\"line\">xcopy &quot;\\\\Server\\Deploy&quot; &quot;\\\\Server\\備份\\&quot;%Date_folder% /E /H /C /I /Y</span><br><span class=\"line\"></span><br><span class=\"line\">:: 備份 service</span><br><span class=\"line\">xcopy &quot;\\\\Server\\ApServices&quot; &quot;\\\\Server\\備份\\&quot;%Date_folder%&quot;\\Service&quot; /E /H /C /I /Y</span><br><span class=\"line\"></span><br><span class=\"line\">:: 更新Client檔案</span><br><span class=\"line\">xcopy &quot;D:\\Backup\\Project\\bin\\Debug&quot; &quot;\\\\Server\\JepunShare_IMS\\JepunIMSDeploy\\32&quot; /E /H /C /I /Y /exclude:D:\\Backup\\Project\\.git\\hooks\\Exclude.txt</span><br><span class=\"line\">xcopy &quot;D:\\Backup\\Project\\bin\\Debug&quot; &quot;\\\\Server\\JepunShare_IMS\\JepunIMSDeploy\\64&quot; /E /H /C /I /Y /exclude:D:\\Backup\\Project\\.git\\hooks\\Exclude.txt</span><br><span class=\"line\"></span><br><span class=\"line\">:: 更新服務</span><br><span class=\"line\">xcopy &quot;D:\\Backup\\Project\\Service\\bin\\Debug&quot; &quot;\\\\Server\\Services&quot; /E /H /C /I /Y /exclude:D:\\Backup\\Project\\.git\\hooks\\Exclude.txt</span><br></pre></td></tr></table></figure>\n<p>Exclude.txt – 不複製檔案清單</p>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.pdb</span><br><span class=\"line\">.xml</span><br><span class=\"line\">App_Data</span><br><span class=\"line\">.txt</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://github.com/e23882/GitHook/tree/master/Depoly\" target=\"_blank\" rel=\"noopener\">完整程式碼</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h3>透過GitHook Prepush機制，Push時部屬程式</h3>\n<h4>環境準備</h4>\n<ul>\n<li>Git</li>\n<li>Python<br>\n用Python主要是因為不用編譯，拿來做一些Script很方便</li>\n</ul>\n<h4>準備githook - Prepush</h4>\n<p>git hook 機制可以讓我們在commit、pull、push….e.t.c.時執行特定的動作，例如執行測試、寄信通知更新、檢查編譯是否通過等……hen方便</p>\n<p>在開發的專案下，githook目錄中把pre-prepush.sample副檔名移除 &gt; pre-push</p>\n<p>*盡量用改的，因為githook裡面有一些特殊的編碼，如果自己寫可能會有問題</p>\n<p>路徑 : Project\\ProjectName.git\\hooks\\</p>\n<p>在prepush中增加下面內容，也可以視情況移除掉不需要的指令或是更改路徑、命名</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/bin/sh</span><br><span class=\"line\"></span><br><span class=\"line\"># 取得最後一次commit內容到文字檔</span><br><span class=\"line\">git log -n 1 &gt; &quot;D:\\NeverRemove.txt&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"># 通知</span><br><span class=\"line\">## Notify通知重啟服務</span><br><span class=\"line\">python .git/hooks/LineNotifyReboot.py</span><br><span class=\"line\">## Mail通知重啟服務</span><br><span class=\"line\">python .git/hooks/MailNotifyReboot.py</span><br><span class=\"line\"></span><br><span class=\"line\"># 停用服務</span><br><span class=\"line\">.git/hooks/StartOrStopService.exe</span><br><span class=\"line\"></span><br><span class=\"line\"># 備份 &amp;&amp; 發布</span><br><span class=\"line\">.git/hooks/backup.bat</span><br><span class=\"line\"></span><br><span class=\"line\"># 啟用服務</span><br><span class=\"line\">.git/hooks/StartOrStop.exe</span><br><span class=\"line\"></span><br><span class=\"line\"># 通知</span><br><span class=\"line\">## Notify通知更新完成</span><br><span class=\"line\">python .git/hooks/LineNotifyRelease.py</span><br><span class=\"line\">## Mail通知更新完成</span><br><span class=\"line\">python .git/hooks/MailNotifyRelease.py</span><br></pre></td></tr></table></figure>\n<h4>準備通知程式</h4>\n<h5><a href=\"http://MailNotifyReboot.py\" target=\"_blank\" rel=\"noopener\">MailNotifyReboot.py</a> – 信件通知重啟程式</h5>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> json</span><br><span class=\"line\"><span class=\"keyword\">from</span> email.mime.text <span class=\"keyword\">import</span> MIMEText</span><br><span class=\"line\"><span class=\"keyword\">import</span> smtplib</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Account infomation load</span></span><br><span class=\"line\">gmailUser = <span class=\"string\">'yourmail@gmail.com'</span></span><br><span class=\"line\">gmailPasswd = <span class=\"string\">'yourpassword'</span></span><br><span class=\"line\">to = [<span class=\"string\">'receiver1@gmail.com'</span>, <span class=\"string\">'receiver2@gmail.com'</span>, <span class=\"string\">'receiverˇ@gmail.com'</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Create message</span></span><br><span class=\"line\">emails = [t.split(<span class=\"string\">','</span>) <span class=\"keyword\">for</span> t <span class=\"keyword\">in</span> to]</span><br><span class=\"line\">message = MIMEText(<span class=\"string\">'Dear all,\\n\\nOO系統服務將在幾分鐘內重新啟動，請盡快將正在操作的資料儲存避免資料遺失。\\n如果有任何問題需要協助請隨時與我聯繫，感謝 !\\n\\nRegards,\\n'</span>, <span class=\"string\">'plain'</span>, <span class=\"string\">'utf-8'</span>)</span><br><span class=\"line\">message[<span class=\"string\">'Subject'</span>] = <span class=\"string\">'OO系統更新'</span></span><br><span class=\"line\">message[<span class=\"string\">'From'</span>] = gmailUser</span><br><span class=\"line\">message[<span class=\"string\">'To'</span>] = <span class=\"string\">','</span>.join(to)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Set smtp</span></span><br><span class=\"line\">smtp = smtplib.SMTP(<span class=\"string\">\"mail.com.tw:25\"</span>)</span><br><span class=\"line\">smtp.ehlo()</span><br><span class=\"line\">smtp.starttls()</span><br><span class=\"line\">smtp.login(gmailUser, gmailPasswd)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Send msil</span></span><br><span class=\"line\">smtp.sendmail(message[<span class=\"string\">'From'</span>], message[<span class=\"string\">'To'</span>], message.as_string())</span><br><span class=\"line\">print(<span class=\"string\">'Send mails OK!'</span>)</span><br></pre></td></tr></table></figure>\n<p><img src=\"Mail.png\" alt=\"Mail Notify\"></p>\n<h5><a href=\"http://LineNotifyReboot.py\" target=\"_blank\" rel=\"noopener\">LineNotifyReboot.py</a> – LineNotify通知重啟程式</h5>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">lineNotifyMessage</span><span class=\"params\">(token, msg, url)</span>:</span></span><br><span class=\"line\">      headers = &#123;</span><br><span class=\"line\">          <span class=\"string\">\"Authorization\"</span>: <span class=\"string\">\"Bearer \"</span> + token, </span><br><span class=\"line\">          <span class=\"string\">\"Content-Type\"</span> : <span class=\"string\">\"application/x-www-form-urlencoded\"</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">      payload = &#123;<span class=\"string\">'message'</span>: msg,  <span class=\"string\">'imageThumbnail'</span>: url,<span class=\"string\">'imageFullsize'</span>: url&#125;</span><br><span class=\"line\">      r = requests.post(<span class=\"string\">\"https://notify-api.line.me/api/notify\"</span>, headers = headers, params = payload)</span><br><span class=\"line\">      <span class=\"keyword\">return</span> r.status_code</span><br><span class=\"line\">\t</span><br><span class=\"line\"></span><br><span class=\"line\">f = open(<span class=\"string\">\"D:/NeverRemove.txt\"</span>, <span class=\"string\">\"r\"</span>,encoding=<span class=\"string\">\"utf-8\"</span>)</span><br><span class=\"line\">message = <span class=\"string\">\"Dear all,\\n\\nOOO system service will be rebooted in a few minutes, please save important data to avoid data loss.\\nIf you have any questions, please feel free to contact me, thank you!\\n\\n128 Leo\\n\\nRegards,\\n\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">url = <span class=\"string\">\"https://e23882.github.io/img/maybe.PNG\"</span></span><br><span class=\"line\"><span class=\"comment\"># 修改為你的權杖內容</span></span><br><span class=\"line\">token= <span class=\"string\">'yourlinenotifytoken'</span></span><br><span class=\"line\"><span class=\"comment\">#lineNotifyMessage(token, message, url)</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"Line.png\" alt=\"Mail Notify\"></p>\n<h4>準備備份、發布批次檔</h4>\n<p>backup.bat :</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:: 產生備份目錄</span><br><span class=\"line\">set Date_folder=%date:~0,4%%date:~5,2%%date:~8,2%_%time:~0,2%%time:~3,2%%time:~6,2%</span><br><span class=\"line\">:: 產生備份目錄</span><br><span class=\"line\">md &quot;\\\\Server\\備份\\&quot;%Date_folder%</span><br><span class=\"line\">:: 備份 client 64/32bits</span><br><span class=\"line\">xcopy &quot;\\\\Server\\Deploy&quot; &quot;\\\\Server\\備份\\&quot;%Date_folder% /E /H /C /I /Y</span><br><span class=\"line\"></span><br><span class=\"line\">:: 備份 service</span><br><span class=\"line\">xcopy &quot;\\\\Server\\ApServices&quot; &quot;\\\\Server\\備份\\&quot;%Date_folder%&quot;\\Service&quot; /E /H /C /I /Y</span><br><span class=\"line\"></span><br><span class=\"line\">:: 更新Client檔案</span><br><span class=\"line\">xcopy &quot;D:\\Backup\\Project\\bin\\Debug&quot; &quot;\\\\Server\\JepunShare_IMS\\JepunIMSDeploy\\32&quot; /E /H /C /I /Y /exclude:D:\\Backup\\Project\\.git\\hooks\\Exclude.txt</span><br><span class=\"line\">xcopy &quot;D:\\Backup\\Project\\bin\\Debug&quot; &quot;\\\\Server\\JepunShare_IMS\\JepunIMSDeploy\\64&quot; /E /H /C /I /Y /exclude:D:\\Backup\\Project\\.git\\hooks\\Exclude.txt</span><br><span class=\"line\"></span><br><span class=\"line\">:: 更新服務</span><br><span class=\"line\">xcopy &quot;D:\\Backup\\Project\\Service\\bin\\Debug&quot; &quot;\\\\Server\\Services&quot; /E /H /C /I /Y /exclude:D:\\Backup\\Project\\.git\\hooks\\Exclude.txt</span><br></pre></td></tr></table></figure>\n<p>Exclude.txt – 不複製檔案清單</p>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.pdb</span><br><span class=\"line\">.xml</span><br><span class=\"line\">App_Data</span><br><span class=\"line\">.txt</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://github.com/e23882/GitHook/tree/master/Depoly\" target=\"_blank\" rel=\"noopener\">完整程式碼</a></p>\n"},{"title":"部屬.Net Core Webapi 到Linux","catalog":true,"comments":1,"abbrlink":7561,"date":"2020-12-31T10:27:58.000Z","_content":"## 下載. Net Core SDK、.Net Core Runtime\n其實只要下載.Net Core Runtime就可以了，SDK是讓你可以在linux上編譯.Net Core的程式\n```bash\n# .Net Core 3.1 SDK\nwget https://download.visualstudio.microsoft.com/download/pr/349f13f0-400e-476c-ba10-fe284b35b932/44a5863469051c5cf103129f1423ddb8/dotnet-sdk-3.1.102-linux-arm.tar.gz\n# .Net Core 3.1 Runtime\nwget https://download.visualstudio.microsoft.com/download/pr/8ccacf09-e5eb-481b-a407-2398b08ac6ac/1cef921566cb9d1ca8c742c9c26a521c/aspnetcore-runtime-3.1.2-linux-arm.tar.gz\n```\n![Download](downlaod.PNG)\n\n## 建立. Net Core Running time、SDK解壓縮目錄\n```bash\nsudo mkdir dotnet-arm32\n```\n![mkdir](mkdir.PNG)\n\n## 解壓縮下載檔案到目錄\n```bash\nsudo tar zxf dotnet-sdk-3.1.102-linux-arm.tar.gz -C $HOME/dotnet-arm32\nsudo tar zxf aspnetcore-runtime-3.1.2-linux-arm.tar.gz -C $HOME/dotnet-arm32\n```\n![Unzip](unzip.PNG)\n\n## 設定環境變數\n```bash\nexport DOTNET_ROOT=$HOME/dotnet-arm32\nexport PATH=$PATH:$HOME/dotnet-arm32\n```\n![Setpath](setPath.PNG)\n\n## 建立發布位置、設定寫入讀取權限\n```bash\n sudo mkdir DotnetRelease\n sudo chmod 777 DotnetRelease/\n```\n![chmod777](chmod777.PNG)\n\n## 使用Filezilla上傳寫好的webapi\n![Upload](upload.PNG)\n\n## 執行\n```bash\ndotnet xxx.dll\n```\n![Run](run.PNG)","source":"_posts/部屬-Net-Core-Webapi-到Linux.md","raw":"---\ntitle: 部屬.Net Core Webapi 到Linux\ncatalog: true\ncomments: true\ntags:\n  - Linux\n  - .Net Core\n  - Raspberry PI\nabbrlink: 7561\ncategories: uncategorized\ndate: 2020-12-31 18:27:58\n---\n## 下載. Net Core SDK、.Net Core Runtime\n其實只要下載.Net Core Runtime就可以了，SDK是讓你可以在linux上編譯.Net Core的程式\n```bash\n# .Net Core 3.1 SDK\nwget https://download.visualstudio.microsoft.com/download/pr/349f13f0-400e-476c-ba10-fe284b35b932/44a5863469051c5cf103129f1423ddb8/dotnet-sdk-3.1.102-linux-arm.tar.gz\n# .Net Core 3.1 Runtime\nwget https://download.visualstudio.microsoft.com/download/pr/8ccacf09-e5eb-481b-a407-2398b08ac6ac/1cef921566cb9d1ca8c742c9c26a521c/aspnetcore-runtime-3.1.2-linux-arm.tar.gz\n```\n![Download](downlaod.PNG)\n\n## 建立. Net Core Running time、SDK解壓縮目錄\n```bash\nsudo mkdir dotnet-arm32\n```\n![mkdir](mkdir.PNG)\n\n## 解壓縮下載檔案到目錄\n```bash\nsudo tar zxf dotnet-sdk-3.1.102-linux-arm.tar.gz -C $HOME/dotnet-arm32\nsudo tar zxf aspnetcore-runtime-3.1.2-linux-arm.tar.gz -C $HOME/dotnet-arm32\n```\n![Unzip](unzip.PNG)\n\n## 設定環境變數\n```bash\nexport DOTNET_ROOT=$HOME/dotnet-arm32\nexport PATH=$PATH:$HOME/dotnet-arm32\n```\n![Setpath](setPath.PNG)\n\n## 建立發布位置、設定寫入讀取權限\n```bash\n sudo mkdir DotnetRelease\n sudo chmod 777 DotnetRelease/\n```\n![chmod777](chmod777.PNG)\n\n## 使用Filezilla上傳寫好的webapi\n![Upload](upload.PNG)\n\n## 執行\n```bash\ndotnet xxx.dll\n```\n![Run](run.PNG)","slug":"部屬-Net-Core-Webapi-到Linux","published":1,"updated":"2024-11-21T02:20:00.291Z","layout":"post","photos":[],"link":"","_id":"cm3xvfyaz0097ewi9ke91x3s6","content":"<h2><span id=\"下載-net-core-sdk-net-core-runtime\">下載. Net Core SDK、.Net Core Runtime</span></h2>\n<p><a href=\"http://xn--ghq16f3tcu3m5p3d16g.Net\" target=\"_blank\" rel=\"noopener\">其實只要下載.Net</a> Core Runtime就可以了，<a href=\"http://xn--SDKlinux-s39lo4ewvbe25aqgky46c9m9ddi1bfra.Net\" target=\"_blank\" rel=\"noopener\">SDK是讓你可以在linux上編譯.Net</a> Core的程式</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># .Net Core 3.1 SDK</span></span><br><span class=\"line\">wget https://download.visualstudio.microsoft.com/download/pr/349f13f0-400e-476c-ba10-fe284b35b932/44a5863469051c5cf103129f1423ddb8/dotnet-sdk-3.1.102-linux-arm.tar.gz</span><br><span class=\"line\"><span class=\"comment\"># .Net Core 3.1 Runtime</span></span><br><span class=\"line\">wget https://download.visualstudio.microsoft.com/download/pr/8ccacf09-e5eb-481b-a407-2398b08ac6ac/1cef921566cb9d1ca8c742c9c26a521c/aspnetcore-runtime-3.1.2-linux-arm.tar.gz</span><br></pre></td></tr></table></figure>\n<p><img src=\"downlaod.PNG\" alt=\"Download\"></p>\n<h2><span id=\"建立-net-core-running-time-sdk解壓縮目錄\">建立. Net Core Running time、SDK解壓縮目錄</span></h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mkdir dotnet-arm32</span><br></pre></td></tr></table></figure>\n<p><img src=\"mkdir.PNG\" alt=\"mkdir\"></p>\n<h2><span id=\"解壓縮下載檔案到目錄\">解壓縮下載檔案到目錄</span></h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo tar zxf dotnet-sdk-3.1.102-linux-arm.tar.gz -C <span class=\"variable\">$HOME</span>/dotnet-arm32</span><br><span class=\"line\">sudo tar zxf aspnetcore-runtime-3.1.2-linux-arm.tar.gz -C <span class=\"variable\">$HOME</span>/dotnet-arm32</span><br></pre></td></tr></table></figure>\n<p><img src=\"unzip.PNG\" alt=\"Unzip\"></p>\n<h2><span id=\"設定環境變數\">設定環境變數</span></h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> DOTNET_ROOT=<span class=\"variable\">$HOME</span>/dotnet-arm32</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:<span class=\"variable\">$HOME</span>/dotnet-arm32</span><br></pre></td></tr></table></figure>\n<p><img src=\"setPath.PNG\" alt=\"Setpath\"></p>\n<h2><span id=\"建立發布位置-設定寫入讀取權限\">建立發布位置、設定寫入讀取權限</span></h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mkdir DotnetRelease</span><br><span class=\"line\">sudo chmod 777 DotnetRelease/</span><br></pre></td></tr></table></figure>\n<p><img src=\"chmod777.PNG\" alt=\"chmod777\"></p>\n<h2><span id=\"使用filezilla上傳寫好的webapi\">使用Filezilla上傳寫好的webapi</span></h2>\n<p><img src=\"upload.PNG\" alt=\"Upload\"></p>\n<h2><span id=\"執行\">執行</span></h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dotnet xxx.dll</span><br></pre></td></tr></table></figure>\n<p><img src=\"run.PNG\" alt=\"Run\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h2>下載. Net Core SDK、.Net Core Runtime</h2>\n<p><a href=\"http://xn--ghq16f3tcu3m5p3d16g.Net\" target=\"_blank\" rel=\"noopener\">其實只要下載.Net</a> Core Runtime就可以了，<a href=\"http://xn--SDKlinux-s39lo4ewvbe25aqgky46c9m9ddi1bfra.Net\" target=\"_blank\" rel=\"noopener\">SDK是讓你可以在linux上編譯.Net</a> Core的程式</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># .Net Core 3.1 SDK</span></span><br><span class=\"line\">wget https://download.visualstudio.microsoft.com/download/pr/349f13f0-400e-476c-ba10-fe284b35b932/44a5863469051c5cf103129f1423ddb8/dotnet-sdk-3.1.102-linux-arm.tar.gz</span><br><span class=\"line\"><span class=\"comment\"># .Net Core 3.1 Runtime</span></span><br><span class=\"line\">wget https://download.visualstudio.microsoft.com/download/pr/8ccacf09-e5eb-481b-a407-2398b08ac6ac/1cef921566cb9d1ca8c742c9c26a521c/aspnetcore-runtime-3.1.2-linux-arm.tar.gz</span><br></pre></td></tr></table></figure>\n<p><img src=\"downlaod.PNG\" alt=\"Download\"></p>\n<h2>建立. Net Core Running time、SDK解壓縮目錄</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mkdir dotnet-arm32</span><br></pre></td></tr></table></figure>\n<p><img src=\"mkdir.PNG\" alt=\"mkdir\"></p>\n<h2>解壓縮下載檔案到目錄</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo tar zxf dotnet-sdk-3.1.102-linux-arm.tar.gz -C <span class=\"variable\">$HOME</span>/dotnet-arm32</span><br><span class=\"line\">sudo tar zxf aspnetcore-runtime-3.1.2-linux-arm.tar.gz -C <span class=\"variable\">$HOME</span>/dotnet-arm32</span><br></pre></td></tr></table></figure>\n<p><img src=\"unzip.PNG\" alt=\"Unzip\"></p>\n<h2>設定環境變數</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> DOTNET_ROOT=<span class=\"variable\">$HOME</span>/dotnet-arm32</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:<span class=\"variable\">$HOME</span>/dotnet-arm32</span><br></pre></td></tr></table></figure>\n<p><img src=\"setPath.PNG\" alt=\"Setpath\"></p>\n<h2>建立發布位置、設定寫入讀取權限</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mkdir DotnetRelease</span><br><span class=\"line\">sudo chmod 777 DotnetRelease/</span><br></pre></td></tr></table></figure>\n<p><img src=\"chmod777.PNG\" alt=\"chmod777\"></p>\n<h2>使用Filezilla上傳寫好的webapi</h2>\n<p><img src=\"upload.PNG\" alt=\"Upload\"></p>\n<h2>執行</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dotnet xxx.dll</span><br></pre></td></tr></table></figure>\n<p><img src=\"run.PNG\" alt=\"Run\"></p>\n"}],"PostAsset":[{"_id":"source/_posts/透過Git-Hook，push時部屬程式-pre-push/Mail.png","slug":"Mail.png","post":"cm3xvfyat0095ewi9762gygei","modified":1,"renderable":0},{"_id":"source/_posts/hexo-theme-beantech/home_posts_tag-true.png","slug":"home_posts_tag-true.png","post":"cm3xvfy8v003uewi9aquf56ll","modified":1,"renderable":0},{"_id":"source/_posts/用Sonarqube做靜態程式碼分析/issue.PNG","slug":"issue.PNG","post":"cm3xvfy99004wewi94x335a8k","modified":1,"renderable":0},{"_id":"source/_posts/用Sonarqube做靜態程式碼分析/login.PNG","slug":"login.PNG","post":"cm3xvfy99004wewi94x335a8k","modified":1,"renderable":0},{"_id":"source/_posts/用Sonarqube做靜態程式碼分析/main.PNG","slug":"main.PNG","post":"cm3xvfy99004wewi94x335a8k","modified":1,"renderable":0},{"_id":"source/_posts/C-Dynamic-Linq/dynamicLinq.png","post":"cm3xvfy730005ewi97jobbms8","slug":"dynamicLinq.png","modified":1,"renderable":1},{"_id":"source/_posts/WPF-TextBox浮水印/result.PNG","post":"cm3xvfy8p003dewi9ihpifvxm","slug":"result.PNG","modified":1,"renderable":1},{"_id":"source/_posts/WPF-套用Metro樣式/Mahapps.PNG","post":"cm3xvfy8r003kewi9tdqdj4gs","slug":"Mahapps.PNG","modified":1,"renderable":1},{"_id":"source/_posts/net-framework-注入依賴/ninject.PNG","post":"cm3xvfy8z0044ewi9a7ms7jnq","slug":"ninject.PNG","modified":1,"renderable":1},{"_id":"source/_posts/使用HierarchicalDataTemplate讓TreeView自動長整棵樹/Result.PNG","post":"cm3xvfy92004eewi9a2zmod5m","slug":"Result.PNG","modified":1,"renderable":1},{"_id":"source/_posts/現金權益補償/work.png","post":"cm3xvfy97004sewi9bb8d85xn","slug":"work.png","modified":1,"renderable":1},{"_id":"source/_posts/Powerful-Commit-Message/powerfulCommit.png","post":"cm3xvfy81001hewi9zmrhmof5","slug":"powerfulCommit.png","modified":1,"renderable":1},{"_id":"source/_posts/Powerful-Commit-Message/powerfulD.jpg","post":"cm3xvfy81001hewi9zmrhmof5","slug":"powerfulD.jpg","modified":1,"renderable":1},{"_id":"source/_posts/WPF-Chart/result.PNG","post":"cm3xvfy8a0029ewi9tuqu2yae","slug":"result.PNG","modified":1,"renderable":1},{"_id":"source/_posts/WPF-Chart/result2.PNG","post":"cm3xvfy8a0029ewi9tuqu2yae","slug":"result2.PNG","modified":1,"renderable":1},{"_id":"source/_posts/WPF-DataTemplate-ControlTemplate/ControlTemplate.PNG","post":"cm3xvfy8g002qewi9ec3oyq84","slug":"ControlTemplate.PNG","modified":1,"renderable":1},{"_id":"source/_posts/WPF-DataTemplate-ControlTemplate/DataResult.PNG","post":"cm3xvfy8g002qewi9ec3oyq84","slug":"DataResult.PNG","modified":1,"renderable":1},{"_id":"source/_posts/Rider-Live-Templates/demo.png","post":"cm3xvfy85001uewi9w9788wyq","slug":"demo.png","modified":1,"renderable":1},{"_id":"source/_posts/Rider-Live-Templates/setting.png","post":"cm3xvfy85001uewi9w9788wyq","slug":"setting.png","modified":1,"renderable":1},{"_id":"source/_posts/Rider-Live-Templates/show.png","post":"cm3xvfy85001uewi9w9788wyq","slug":"show.png","modified":1,"renderable":1},{"_id":"source/_posts/SQL-Server-Replication-發布資料庫失敗/ReplicationQ.PNG","post":"cm3xvfy86001wewi9jag9ai54","slug":"ReplicationQ.PNG","modified":1,"renderable":1},{"_id":"source/_posts/SQL-Server-Replication-發布資料庫失敗/ReplicationResult.PNG","post":"cm3xvfy86001wewi9jag9ai54","slug":"ReplicationResult.PNG","modified":1,"renderable":1},{"_id":"source/_posts/SQL-Server-Replication-發布資料庫失敗/ReplicationSolution.PNG","post":"cm3xvfy86001wewi9jag9ai54","slug":"ReplicationSolution.PNG","modified":1,"renderable":1},{"_id":"source/_posts/WPF-AutoComplete-textbox/AutoComplete.png","post":"cm3xvfy880022ewi9tczgpbhu","slug":"AutoComplete.png","modified":1,"renderable":1},{"_id":"source/_posts/WPF-AutoComplete-textbox/AutoComplete2.png","post":"cm3xvfy880022ewi9tczgpbhu","slug":"AutoComplete2.png","modified":1,"renderable":1},{"_id":"source/_posts/WPF-AutoComplete-textbox/AutoNuget.png","post":"cm3xvfy880022ewi9tczgpbhu","slug":"AutoNuget.png","modified":1,"renderable":1},{"_id":"source/_posts/WPF-Dockable/avalondock.png","post":"cm3xvfy8i002tewi9xb8j7mux","slug":"avalondock.png","modified":1,"renderable":1},{"_id":"source/_posts/WPF-Dockable/nuget.PNG","post":"cm3xvfy8i002tewi9xb8j7mux","slug":"nuget.PNG","modified":1,"renderable":1},{"_id":"source/_posts/WPF-Dockable/result.PNG","post":"cm3xvfy8i002tewi9xb8j7mux","slug":"result.PNG","modified":1,"renderable":1},{"_id":"source/_posts/hexo-theme-beantech/Demo.png","slug":"Demo.png","post":"cm3xvfy8v003uewi9aquf56ll","modified":1,"renderable":0},{"_id":"source/_posts/hexo-theme-beantech/home_posts_tag-false.png","post":"cm3xvfy8v003uewi9aquf56ll","slug":"home_posts_tag-false.png","modified":1,"renderable":1},{"_id":"source/_posts/AppCenter/AddAppCenter.PNG","post":"cm3xvfy6z0003ewi99qu8na82","slug":"AddAppCenter.PNG","modified":1,"renderable":1},{"_id":"source/_posts/AppCenter/Error.PNG","post":"cm3xvfy6z0003ewi99qu8na82","slug":"Error.PNG","modified":1,"renderable":1},{"_id":"source/_posts/AppCenter/Nuget.PNG","post":"cm3xvfy6z0003ewi99qu8na82","slug":"Nuget.PNG","modified":1,"renderable":1},{"_id":"source/_posts/AppCenter/infomation.PNG","post":"cm3xvfy6z0003ewi99qu8na82","slug":"infomation.PNG","modified":1,"renderable":1},{"_id":"source/_posts/WPF-DataGrid/DataGridNoHeader.PNG","post":"cm3xvfy8b002cewi9x4a9ngsq","slug":"DataGridNoHeader.PNG","modified":1,"renderable":1},{"_id":"source/_posts/WPF-DataGrid/DataGridSample.PNG","post":"cm3xvfy8b002cewi9x4a9ngsq","slug":"DataGridSample.PNG","modified":1,"renderable":1},{"_id":"source/_posts/WPF-DataGrid/DataGridTemplateHeader.PNG","post":"cm3xvfy8b002cewi9x4a9ngsq","slug":"DataGridTemplateHeader.PNG","modified":1,"renderable":1},{"_id":"source/_posts/WPF-DataGrid/DataGridWithHeader.PNG","post":"cm3xvfy8b002cewi9x4a9ngsq","slug":"DataGridWithHeader.PNG","modified":1,"renderable":1},{"_id":"source/_posts/StyleCop/extension.PNG","post":"cm3xvfy87001zewi913pbqhb1","slug":"extension.PNG","modified":1,"renderable":1},{"_id":"source/_posts/StyleCop/result.PNG","post":"cm3xvfy87001zewi913pbqhb1","slug":"result.PNG","modified":1,"renderable":1},{"_id":"source/_posts/StyleCop/result2.PNG","post":"cm3xvfy87001zewi913pbqhb1","slug":"result2.PNG","modified":1,"renderable":1},{"_id":"source/_posts/StyleCop/run.PNG","post":"cm3xvfy87001zewi913pbqhb1","slug":"run.PNG","modified":1,"renderable":1},{"_id":"source/_posts/StyleCop/run2.PNG","post":"cm3xvfy87001zewi913pbqhb1","slug":"run2.PNG","modified":1,"renderable":1},{"_id":"source/_posts/visual-studio-2019-測試涵蓋率工具-Fine-Code-Coverage/EXTENSION.PNG","post":"cm3xvfy94004iewi9u8bxudmg","slug":"EXTENSION.PNG","modified":1,"renderable":1},{"_id":"source/_posts/visual-studio-2019-測試涵蓋率工具-Fine-Code-Coverage/RESULT.PNG","post":"cm3xvfy94004iewi9u8bxudmg","slug":"RESULT.PNG","modified":1,"renderable":1},{"_id":"source/_posts/visual-studio-2019-測試涵蓋率工具-Fine-Code-Coverage/RUNTEST.PNG","post":"cm3xvfy94004iewi9u8bxudmg","slug":"RUNTEST.PNG","modified":1,"renderable":1},{"_id":"source/_posts/visual-studio-2019-測試涵蓋率工具-Fine-Code-Coverage/SOURCECODE.PNG","post":"cm3xvfy94004iewi9u8bxudmg","slug":"SOURCECODE.PNG","modified":1,"renderable":1},{"_id":"source/_posts/visual-studio-2019-測試涵蓋率工具-Fine-Code-Coverage/TESTCODE.PNG","post":"cm3xvfy94004iewi9u8bxudmg","slug":"TESTCODE.PNG","modified":1,"renderable":1},{"_id":"source/_posts/NUnit/NUnitAttrNewResult.PNG","post":"cm3xvfy7z001dewi9n48xsoix","slug":"NUnitAttrNewResult.PNG","modified":1,"renderable":1},{"_id":"source/_posts/NUnit/Report.PNG","post":"cm3xvfy7z001dewi9n48xsoix","slug":"Report.PNG","modified":1,"renderable":1},{"_id":"source/_posts/NUnit/attribute.PNG","post":"cm3xvfy7z001dewi9n48xsoix","slug":"attribute.PNG","modified":1,"renderable":1},{"_id":"source/_posts/NUnit/axo.PNG","post":"cm3xvfy7z001dewi9n48xsoix","slug":"axo.PNG","modified":1,"renderable":1},{"_id":"source/_posts/NUnit/axoCover.PNG","post":"cm3xvfy7z001dewi9n48xsoix","slug":"axoCover.PNG","modified":1,"renderable":1},{"_id":"source/_posts/NUnit/axoResult.PNG","post":"cm3xvfy7z001dewi9n48xsoix","slug":"axoResult.PNG","modified":1,"renderable":1},{"_id":"source/_posts/NUnit/cover.PNG","post":"cm3xvfy7z001dewi9n48xsoix","slug":"cover.PNG","modified":1,"renderable":1},{"_id":"source/_posts/NUnit/nunitResult.PNG","post":"cm3xvfy7z001dewi9n48xsoix","slug":"nunitResult.PNG","modified":1,"renderable":1},{"_id":"source/_posts/NUnit/nunittestadapter.PNG","post":"cm3xvfy7z001dewi9n48xsoix","slug":"nunittestadapter.PNG","modified":1,"renderable":1},{"_id":"source/_posts/NUnit/testExplorer.PNG","post":"cm3xvfy7z001dewi9n48xsoix","slug":"testExplorer.PNG","modified":1,"renderable":1},{"_id":"source/_posts/用Sonarqube做靜態程式碼分析/add.PNG","post":"cm3xvfy99004wewi94x335a8k","slug":"add.PNG","modified":1,"renderable":1},{"_id":"source/_posts/用Sonarqube做靜態程式碼分析/issue1.PNG","slug":"issue1.PNG","post":"cm3xvfy99004wewi94x335a8k","modified":1,"renderable":0},{"_id":"source/_posts/用Sonarqube做靜態程式碼分析/java18.PNG","post":"cm3xvfy99004wewi94x335a8k","slug":"java18.PNG","modified":1,"renderable":1},{"_id":"source/_posts/用Sonarqube做靜態程式碼分析/run.PNG","post":"cm3xvfy99004wewi94x335a8k","slug":"run.PNG","modified":1,"renderable":1},{"_id":"source/_posts/用Sonarqube做靜態程式碼分析/running.PNG","slug":"running.PNG","post":"cm3xvfy99004wewi94x335a8k","modified":1,"renderable":0},{"_id":"source/_posts/用Sonarqube做靜態程式碼分析/scanner.PNG","slug":"scanner.PNG","post":"cm3xvfy99004wewi94x335a8k","modified":1,"renderable":0},{"_id":"source/_posts/用Sonarqube做靜態程式碼分析/security.PNG","post":"cm3xvfy99004wewi94x335a8k","slug":"security.PNG","modified":1,"renderable":1},{"_id":"source/_posts/用Sonarqube做靜態程式碼分析/sonar.PNG","post":"cm3xvfy99004wewi94x335a8k","slug":"sonar.PNG","modified":1,"renderable":1},{"_id":"source/_posts/jenkins自動部屬WPF/FTPError.png","post":"cm3xvfy8x0041ewi9tqzbek71","slug":"FTPError.png","modified":1,"renderable":1},{"_id":"source/_posts/jenkins自動部屬WPF/Step1.PNG","post":"cm3xvfy8x0041ewi9tqzbek71","slug":"Step1.PNG","modified":1,"renderable":1},{"_id":"source/_posts/jenkins自動部屬WPF/Step2.PNG","post":"cm3xvfy8x0041ewi9tqzbek71","slug":"Step2.PNG","modified":1,"renderable":1},{"_id":"source/_posts/jenkins自動部屬WPF/Step3.PNG","post":"cm3xvfy8x0041ewi9tqzbek71","slug":"Step3.PNG","modified":1,"renderable":1},{"_id":"source/_posts/jenkins自動部屬WPF/Step4.PNG","post":"cm3xvfy8x0041ewi9tqzbek71","slug":"Step4.PNG","modified":1,"renderable":1},{"_id":"source/_posts/jenkins自動部屬WPF/Step5.PNG","post":"cm3xvfy8x0041ewi9tqzbek71","slug":"Step5.PNG","modified":1,"renderable":1},{"_id":"source/_posts/jenkins自動部屬WPF/chkPID.PNG","post":"cm3xvfy8x0041ewi9tqzbek71","slug":"chkPID.PNG","modified":1,"renderable":1},{"_id":"source/_posts/jenkins自動部屬WPF/chkService.PNG","post":"cm3xvfy8x0041ewi9tqzbek71","slug":"chkService.PNG","modified":1,"renderable":1},{"_id":"source/_posts/jenkins自動部屬WPF/globalTool.PNG","post":"cm3xvfy8x0041ewi9tqzbek71","slug":"globalTool.PNG","modified":1,"renderable":1},{"_id":"source/_posts/jenkins自動部屬WPF/install.PNG","post":"cm3xvfy8x0041ewi9tqzbek71","slug":"install.PNG","modified":1,"renderable":1},{"_id":"source/_posts/jenkins自動部屬WPF/localhost.PNG","post":"cm3xvfy8x0041ewi9tqzbek71","slug":"localhost.PNG","modified":1,"renderable":1},{"_id":"source/_posts/jenkins自動部屬WPF/main.PNG","post":"cm3xvfy8x0041ewi9tqzbek71","slug":"main.PNG","modified":1,"renderable":1},{"_id":"source/_posts/jenkins自動部屬WPF/managePlugin.PNG","post":"cm3xvfy8x0041ewi9tqzbek71","slug":"managePlugin.PNG","modified":1,"renderable":1},{"_id":"source/_posts/jenkins自動部屬WPF/new1.PNG","post":"cm3xvfy8x0041ewi9tqzbek71","slug":"new1.PNG","modified":1,"renderable":1},{"_id":"source/_posts/jenkins自動部屬WPF/publish.PNG","post":"cm3xvfy8x0041ewi9tqzbek71","slug":"publish.PNG","modified":1,"renderable":1},{"_id":"source/_posts/jenkins自動部屬WPF/setGit.PNG","post":"cm3xvfy8x0041ewi9tqzbek71","slug":"setGit.PNG","modified":1,"renderable":1},{"_id":"source/_posts/jenkins自動部屬WPF/setMSBuild.PNG","post":"cm3xvfy8x0041ewi9tqzbek71","slug":"setMSBuild.PNG","modified":1,"renderable":1},{"_id":"source/_posts/當沖券差/work.png","post":"cm3xvfyak008zewi9urtg4xhn","slug":"work.png","modified":1,"renderable":1},{"_id":"source/_posts/透過Git-Hook，push時部屬程式-pre-push/Line.png","post":"cm3xvfyat0095ewi9762gygei","slug":"Line.png","modified":1,"renderable":1},{"_id":"source/_posts/部屬-Net-Core-Webapi-到Linux/chmod777.PNG","post":"cm3xvfyaz0097ewi9ke91x3s6","slug":"chmod777.PNG","modified":1,"renderable":1},{"_id":"source/_posts/部屬-Net-Core-Webapi-到Linux/downlaod.PNG","post":"cm3xvfyaz0097ewi9ke91x3s6","slug":"downlaod.PNG","modified":1,"renderable":1},{"_id":"source/_posts/部屬-Net-Core-Webapi-到Linux/mkdir.PNG","post":"cm3xvfyaz0097ewi9ke91x3s6","slug":"mkdir.PNG","modified":1,"renderable":1},{"_id":"source/_posts/部屬-Net-Core-Webapi-到Linux/run.PNG","post":"cm3xvfyaz0097ewi9ke91x3s6","slug":"run.PNG","modified":1,"renderable":1},{"_id":"source/_posts/部屬-Net-Core-Webapi-到Linux/setPath.PNG","post":"cm3xvfyaz0097ewi9ke91x3s6","slug":"setPath.PNG","modified":1,"renderable":1},{"_id":"source/_posts/部屬-Net-Core-Webapi-到Linux/unzip.PNG","post":"cm3xvfyaz0097ewi9ke91x3s6","slug":"unzip.PNG","modified":1,"renderable":1},{"_id":"source/_posts/部屬-Net-Core-Webapi-到Linux/upload.PNG","post":"cm3xvfyaz0097ewi9ke91x3s6","slug":"upload.PNG","modified":1,"renderable":1},{"_id":"source/_posts/發布-Net-Core-Webapi到IIS/r1.png","post":"cm3xvfyal0091ewi9owx114oq","slug":"r1.png","modified":1,"renderable":1},{"_id":"source/_posts/發布-Net-Core-Webapi到IIS/r2.png","post":"cm3xvfyal0091ewi9owx114oq","slug":"r2.png","modified":1,"renderable":1},{"_id":"source/_posts/發布-Net-Core-Webapi到IIS/r3.png","post":"cm3xvfyal0091ewi9owx114oq","slug":"r3.png","modified":1,"renderable":1},{"_id":"source/_posts/發布-Net-Core-Webapi到IIS/r4.png","post":"cm3xvfyal0091ewi9owx114oq","slug":"r4.png","modified":1,"renderable":1},{"_id":"source/_posts/發布-Net-Core-Webapi到IIS/r5.png","post":"cm3xvfyal0091ewi9owx114oq","slug":"r5.png","modified":1,"renderable":1},{"_id":"source/_posts/發布-Net-Core-Webapi到IIS/r6.png","post":"cm3xvfyal0091ewi9owx114oq","slug":"r6.png","modified":1,"renderable":1},{"_id":"source/_posts/發布-Net-Core-Webapi到IIS/r7.png","post":"cm3xvfyal0091ewi9owx114oq","slug":"r7.png","modified":1,"renderable":1},{"_id":"source/_posts/發布-Net-Core-Webapi到IIS/r8.png","post":"cm3xvfyal0091ewi9owx114oq","slug":"r8.png","modified":1,"renderable":1}],"PostCategory":[{"post_id":"cm3xvfy790009ewi95y8gke83","category_id":"cm3xvfy750006ewi9brm94co1","_id":"cm3xvfy7f000gewi918ayn7zy"},{"post_id":"cm3xvfy6z0003ewi99qu8na82","category_id":"cm3xvfy750006ewi9brm94co1","_id":"cm3xvfy7h000kewi9wj87h40z"},{"post_id":"cm3xvfy7a000aewi9pa2oidf8","category_id":"cm3xvfy750006ewi9brm94co1","_id":"cm3xvfy7i000mewi9hkxyh3qv"},{"post_id":"cm3xvfy7d000dewi9ppqyp0ry","category_id":"cm3xvfy750006ewi9brm94co1","_id":"cm3xvfy7k000pewi9u9f1xs3n"},{"post_id":"cm3xvfy730005ewi97jobbms8","category_id":"cm3xvfy750006ewi9brm94co1","_id":"cm3xvfy7l000sewi926kumuwt"},{"post_id":"cm3xvfy7e000fewi9rxxartnx","category_id":"cm3xvfy750006ewi9brm94co1","_id":"cm3xvfy7p000wewi9vmd98thx"},{"post_id":"cm3xvfy7g000jewi91lsls3wn","category_id":"cm3xvfy750006ewi9brm94co1","_id":"cm3xvfy7r000zewi96i9ok3j8"},{"post_id":"cm3xvfy770008ewi9lkw512qs","category_id":"cm3xvfy750006ewi9brm94co1","_id":"cm3xvfy7w0013ewi9me79ye4s"},{"post_id":"cm3xvfy7i000lewi9317j0jpx","category_id":"cm3xvfy750006ewi9brm94co1","_id":"cm3xvfy7x0016ewi9p2g9l3wd"},{"post_id":"cm3xvfy7j000oewi9cgvwbkng","category_id":"cm3xvfy750006ewi9brm94co1","_id":"cm3xvfy7y001aewi9rsn5w3x2"},{"post_id":"cm3xvfy7l000rewi9fkvg4oy4","category_id":"cm3xvfy750006ewi9brm94co1","_id":"cm3xvfy7z001cewi9j22rxti1"},{"post_id":"cm3xvfy7o000vewi9invt5h6v","category_id":"cm3xvfy750006ewi9brm94co1","_id":"cm3xvfy80001eewi9dusoxl0v"},{"post_id":"cm3xvfy7r000yewi9p7t6qrrj","category_id":"cm3xvfy750006ewi9brm94co1","_id":"cm3xvfy81001iewi9vjxyjuuc"},{"post_id":"cm3xvfy7v0012ewi9cs0vc7h4","category_id":"cm3xvfy750006ewi9brm94co1","_id":"cm3xvfy82001lewi9cimt3xo3"},{"post_id":"cm3xvfy7w0015ewi9cj04gxa0","category_id":"cm3xvfy750006ewi9brm94co1","_id":"cm3xvfy84001pewi9g4v88qtz"},{"post_id":"cm3xvfy7y0019ewi964kigk5x","category_id":"cm3xvfy750006ewi9brm94co1","_id":"cm3xvfy85001sewi9jcaji7qz"},{"post_id":"cm3xvfy7y001bewi9usde59wn","category_id":"cm3xvfy750006ewi9brm94co1","_id":"cm3xvfy86001vewi9eb92490q"},{"post_id":"cm3xvfy7z001dewi9n48xsoix","category_id":"cm3xvfy750006ewi9brm94co1","_id":"cm3xvfy87001xewi9k8zo4m1i"},{"post_id":"cm3xvfy81001hewi9zmrhmof5","category_id":"cm3xvfy750006ewi9brm94co1","_id":"cm3xvfy880020ewi9jq825l8k"},{"post_id":"cm3xvfy82001kewi97fugqhzn","category_id":"cm3xvfy750006ewi9brm94co1","_id":"cm3xvfy890023ewi9kf84nyrq"},{"post_id":"cm3xvfy83001oewi9i5llxh3o","category_id":"cm3xvfy750006ewi9brm94co1","_id":"cm3xvfy8a0026ewi9chvrj8bp"},{"post_id":"cm3xvfy84001rewi97pap1201","category_id":"cm3xvfy750006ewi9brm94co1","_id":"cm3xvfy8b002aewi9n8u93406"},{"post_id":"cm3xvfy85001uewi9w9788wyq","category_id":"cm3xvfy750006ewi9brm94co1","_id":"cm3xvfy8c002dewi9iy55mrlq"},{"post_id":"cm3xvfy86001wewi9jag9ai54","category_id":"cm3xvfy750006ewi9brm94co1","_id":"cm3xvfy8d002hewi9s1rw66ym"},{"post_id":"cm3xvfy87001zewi913pbqhb1","category_id":"cm3xvfy750006ewi9brm94co1","_id":"cm3xvfy8e002kewi9hwxz4ccr"},{"post_id":"cm3xvfy880022ewi9tczgpbhu","category_id":"cm3xvfy750006ewi9brm94co1","_id":"cm3xvfy8g002oewi99xmqvzg5"},{"post_id":"cm3xvfy890025ewi9l99oobdl","category_id":"cm3xvfy750006ewi9brm94co1","_id":"cm3xvfy8h002rewi9q07a0blp"},{"post_id":"cm3xvfy8a0029ewi9tuqu2yae","category_id":"cm3xvfy750006ewi9brm94co1","_id":"cm3xvfy8i002uewi9lwj4bo6p"},{"post_id":"cm3xvfy8b002cewi9x4a9ngsq","category_id":"cm3xvfy750006ewi9brm94co1","_id":"cm3xvfy8k002xewi9129zlg71"},{"post_id":"cm3xvfy8d002gewi91u36a9my","category_id":"cm3xvfy750006ewi9brm94co1","_id":"cm3xvfy8l0030ewi9auqsrfoc"},{"post_id":"cm3xvfy8e002jewi9k8flopif","category_id":"cm3xvfy750006ewi9brm94co1","_id":"cm3xvfy8m0034ewi9sxugj1bh"},{"post_id":"cm3xvfy8f002newi9qnykgw31","category_id":"cm3xvfy750006ewi9brm94co1","_id":"cm3xvfy8n0037ewi9xsabua9g"},{"post_id":"cm3xvfy8g002qewi9ec3oyq84","category_id":"cm3xvfy750006ewi9brm94co1","_id":"cm3xvfy8o003bewi9dul50mpa"},{"post_id":"cm3xvfy8i002tewi9xb8j7mux","category_id":"cm3xvfy750006ewi9brm94co1","_id":"cm3xvfy8q003eewi9jju0w2xy"},{"post_id":"cm3xvfy8j002wewi9pvnau0p9","category_id":"cm3xvfy750006ewi9brm94co1","_id":"cm3xvfy8r003iewi9ojdusg85"},{"post_id":"cm3xvfy8k002zewi9beizf4t6","category_id":"cm3xvfy750006ewi9brm94co1","_id":"cm3xvfy8s003lewi9mta2y29i"},{"post_id":"cm3xvfy8m0033ewi9niq309h3","category_id":"cm3xvfy750006ewi9brm94co1","_id":"cm3xvfy8t003pewi9tcu5wqh4"},{"post_id":"cm3xvfy8n0036ewi9mvxlxhtr","category_id":"cm3xvfy750006ewi9brm94co1","_id":"cm3xvfy8u003sewi9f1idujp2"},{"post_id":"cm3xvfy8o003aewi940kc1ju3","category_id":"cm3xvfy750006ewi9brm94co1","_id":"cm3xvfy8v003vewi9d1psgn74"},{"post_id":"cm3xvfy8p003dewi9ihpifvxm","category_id":"cm3xvfy750006ewi9brm94co1","_id":"cm3xvfy8x003zewi9pu8p33t5"},{"post_id":"cm3xvfy8q003hewi9hfts0qx3","category_id":"cm3xvfy750006ewi9brm94co1","_id":"cm3xvfy8y0042ewi9sau8trmb"},{"post_id":"cm3xvfy8r003kewi9tdqdj4gs","category_id":"cm3xvfy750006ewi9brm94co1","_id":"cm3xvfy8z0045ewi9mai1jddu"},{"post_id":"cm3xvfy8t003oewi9mdthgvef","category_id":"cm3xvfy750006ewi9brm94co1","_id":"cm3xvfy910048ewi9q8nn0f31"},{"post_id":"cm3xvfy8u003rewi9qfqco5if","category_id":"cm3xvfy750006ewi9brm94co1","_id":"cm3xvfy92004cewi90vmqwy0t"},{"post_id":"cm3xvfy8v003uewi9aquf56ll","category_id":"cm3xvfy750006ewi9brm94co1","_id":"cm3xvfy93004fewi9dimu26sh"},{"post_id":"cm3xvfy8w003yewi93vwncekh","category_id":"cm3xvfy750006ewi9brm94co1","_id":"cm3xvfy94004jewi9lyrgwvkw"},{"post_id":"cm3xvfy8x0041ewi9tqzbek71","category_id":"cm3xvfy750006ewi9brm94co1","_id":"cm3xvfy95004lewi9ceilx1wb"},{"post_id":"cm3xvfy8z0044ewi9a7ms7jnq","category_id":"cm3xvfy750006ewi9brm94co1","_id":"cm3xvfy96004oewi9dlotzgse"},{"post_id":"cm3xvfy900047ewi91e4c7fvj","category_id":"cm3xvfy750006ewi9brm94co1","_id":"cm3xvfy97004qewi9o471534r"},{"post_id":"cm3xvfy91004bewi9wyloc58f","category_id":"cm3xvfy750006ewi9brm94co1","_id":"cm3xvfy98004tewi9b0smfgrq"},{"post_id":"cm3xvfy92004eewi9a2zmod5m","category_id":"cm3xvfy750006ewi9brm94co1","_id":"cm3xvfy99004xewi96vurtd0m"},{"post_id":"cm3xvfy94004iewi9u8bxudmg","category_id":"cm3xvfy750006ewi9brm94co1","_id":"cm3xvfy9a004zewi97q9frq49"},{"post_id":"cm3xvfy94004kewi9ug1np98c","category_id":"cm3xvfy750006ewi9brm94co1","_id":"cm3xvfy9a0052ewi9mxrgpmwu"},{"post_id":"cm3xvfy95004newi9vaszan53","category_id":"cm3xvfy750006ewi9brm94co1","_id":"cm3xvfy9b0054ewi9pkawfkfx"},{"post_id":"cm3xvfy96004pewi9gblkc1r7","category_id":"cm3xvfy750006ewi9brm94co1","_id":"cm3xvfy9b0057ewi91hv1gwch"},{"post_id":"cm3xvfy97004sewi9bb8d85xn","category_id":"cm3xvfy750006ewi9brm94co1","_id":"cm3xvfy9b0059ewi9iciyw3j1"},{"post_id":"cm3xvfy99004wewi94x335a8k","category_id":"cm3xvfy750006ewi9brm94co1","_id":"cm3xvfy9c005cewi9orsd24uh"},{"post_id":"cm3xvfyak008zewi9urtg4xhn","category_id":"cm3xvfy750006ewi9brm94co1","_id":"cm3xvfyau0096ewi9awqdbakd"},{"post_id":"cm3xvfyal0091ewi9owx114oq","category_id":"cm3xvfy750006ewi9brm94co1","_id":"cm3xvfyb00098ewi9e28juurn"},{"post_id":"cm3xvfyam0093ewi91ibfnykc","category_id":"cm3xvfy750006ewi9brm94co1","_id":"cm3xvfyb1009aewi9f8fujx60"},{"post_id":"cm3xvfyat0095ewi9762gygei","category_id":"cm3xvfy750006ewi9brm94co1","_id":"cm3xvfyb2009bewi9hygwbute"},{"post_id":"cm3xvfyaz0097ewi9ke91x3s6","category_id":"cm3xvfy750006ewi9brm94co1","_id":"cm3xvfyb2009cewi9pxnrvvsc"}],"PostTag":[{"post_id":"cm3xvfy7a000aewi9pa2oidf8","tag_id":"cm3xvfy770007ewi9jen2u8io","_id":"cm3xvfy7e000eewi9ho3ybl18"},{"post_id":"cm3xvfy6z0003ewi99qu8na82","tag_id":"cm3xvfy770007ewi9jen2u8io","_id":"cm3xvfy7k000qewi9mtsgysen"},{"post_id":"cm3xvfy6z0003ewi99qu8na82","tag_id":"cm3xvfy7b000cewi9737k5ctn","_id":"cm3xvfy7m000tewi9t9qyfaf9"},{"post_id":"cm3xvfy6z0003ewi99qu8na82","tag_id":"cm3xvfy7g000iewi93gcfdn4d","_id":"cm3xvfy7p000xewi9sihi9oa4"},{"post_id":"cm3xvfy730005ewi97jobbms8","tag_id":"cm3xvfy770007ewi9jen2u8io","_id":"cm3xvfy7r0010ewi9zl80v7n2"},{"post_id":"cm3xvfy770008ewi9lkw512qs","tag_id":"cm3xvfy770007ewi9jen2u8io","_id":"cm3xvfy7w0014ewi92ms13ems"},{"post_id":"cm3xvfy7r000yewi9p7t6qrrj","tag_id":"cm3xvfy770007ewi9jen2u8io","_id":"cm3xvfy7x0017ewi9jsrj964s"},{"post_id":"cm3xvfy790009ewi95y8gke83","tag_id":"cm3xvfy770007ewi9jen2u8io","_id":"cm3xvfy80001gewi96hpqtwy5"},{"post_id":"cm3xvfy790009ewi95y8gke83","tag_id":"cm3xvfy7u0011ewi93n93jx1c","_id":"cm3xvfy82001jewi9h571hp9l"},{"post_id":"cm3xvfy790009ewi95y8gke83","tag_id":"cm3xvfy7x0018ewi9s50ydr5j","_id":"cm3xvfy83001newi9jri9j389"},{"post_id":"cm3xvfy7d000dewi9ppqyp0ry","tag_id":"cm3xvfy80001fewi9fa3losfu","_id":"cm3xvfy84001qewi92mrv22l5"},{"post_id":"cm3xvfy7e000fewi9rxxartnx","tag_id":"cm3xvfy770007ewi9jen2u8io","_id":"cm3xvfy880021ewi924upto70"},{"post_id":"cm3xvfy7e000fewi9rxxartnx","tag_id":"cm3xvfy83001mewi98536txal","_id":"cm3xvfy890024ewi9ykmwsbhb"},{"post_id":"cm3xvfy7e000fewi9rxxartnx","tag_id":"cm3xvfy85001tewi9a7c94feg","_id":"cm3xvfy8a0028ewi9dqmm9cf3"},{"post_id":"cm3xvfy7g000jewi91lsls3wn","tag_id":"cm3xvfy770007ewi9jen2u8io","_id":"cm3xvfy8b002bewi98pgrevxf"},{"post_id":"cm3xvfy7g000jewi91lsls3wn","tag_id":"cm3xvfy87001yewi9ap97a4x6","_id":"cm3xvfy8c002fewi9qtpsouvt"},{"post_id":"cm3xvfy890025ewi9l99oobdl","tag_id":"cm3xvfy770007ewi9jen2u8io","_id":"cm3xvfy8e002iewi9n2qshul9"},{"post_id":"cm3xvfy890025ewi9l99oobdl","tag_id":"cm3xvfy7b000cewi9737k5ctn","_id":"cm3xvfy8f002mewi92sf317om"},{"post_id":"cm3xvfy7i000lewi9317j0jpx","tag_id":"cm3xvfy8a0027ewi9l6jj6zwv","_id":"cm3xvfy8g002pewi9kejhxlyn"},{"post_id":"cm3xvfy7j000oewi9cgvwbkng","tag_id":"cm3xvfy8c002eewi9t8secitn","_id":"cm3xvfy8j002vewi9uwk5etmr"},{"post_id":"cm3xvfy7j000oewi9cgvwbkng","tag_id":"cm3xvfy8f002lewi9i1edf9a6","_id":"cm3xvfy8k002yewi90gv4vu51"},{"post_id":"cm3xvfy8j002wewi9pvnau0p9","tag_id":"cm3xvfy770007ewi9jen2u8io","_id":"cm3xvfy8l0032ewi9m3pjqmcq"},{"post_id":"cm3xvfy8j002wewi9pvnau0p9","tag_id":"cm3xvfy7b000cewi9737k5ctn","_id":"cm3xvfy8m0035ewi9kq4k68rz"},{"post_id":"cm3xvfy7l000rewi9fkvg4oy4","tag_id":"cm3xvfy770007ewi9jen2u8io","_id":"cm3xvfy8o0039ewi9qrbdi09f"},{"post_id":"cm3xvfy7l000rewi9fkvg4oy4","tag_id":"cm3xvfy8h002sewi9eyhfm5q4","_id":"cm3xvfy8p003cewi93l4ig1ot"},{"post_id":"cm3xvfy7o000vewi9invt5h6v","tag_id":"cm3xvfy8l0031ewi9o9am7juu","_id":"cm3xvfy8q003gewi9yn24oytc"},{"post_id":"cm3xvfy8n0036ewi9mvxlxhtr","tag_id":"cm3xvfy7b000cewi9737k5ctn","_id":"cm3xvfy8r003jewi9cj5zfdgh"},{"post_id":"cm3xvfy8o003aewi940kc1ju3","tag_id":"cm3xvfy7b000cewi9737k5ctn","_id":"cm3xvfy8s003mewi9aunxgp80"},{"post_id":"cm3xvfy8p003dewi9ihpifvxm","tag_id":"cm3xvfy770007ewi9jen2u8io","_id":"cm3xvfy8t003qewi93ct801wu"},{"post_id":"cm3xvfy8p003dewi9ihpifvxm","tag_id":"cm3xvfy7b000cewi9737k5ctn","_id":"cm3xvfy8v003tewi9fbcdfldg"},{"post_id":"cm3xvfy8t003oewi9mdthgvef","tag_id":"cm3xvfy770007ewi9jen2u8io","_id":"cm3xvfy8w003xewi9c2vdlkgg"},{"post_id":"cm3xvfy8t003oewi9mdthgvef","tag_id":"cm3xvfy7b000cewi9737k5ctn","_id":"cm3xvfy8x0040ewi9k2ya7l1u"},{"post_id":"cm3xvfy7v0012ewi9cs0vc7h4","tag_id":"cm3xvfy8n0038ewi9a51b0mn8","_id":"cm3xvfy900046ewi9vxrq5ghf"},{"post_id":"cm3xvfy7v0012ewi9cs0vc7h4","tag_id":"cm3xvfy8q003fewi9lpma69zs","_id":"cm3xvfy910049ewi93djy5yc7"},{"post_id":"cm3xvfy7v0012ewi9cs0vc7h4","tag_id":"cm3xvfy8s003newi946jvvv05","_id":"cm3xvfy92004dewi9puhf2eyi"},{"post_id":"cm3xvfy7v0012ewi9cs0vc7h4","tag_id":"cm3xvfy8w003wewi9erg46sqa","_id":"cm3xvfy93004gewi9lj1pfp3z"},{"post_id":"cm3xvfy95004newi9vaszan53","tag_id":"cm3xvfy770007ewi9jen2u8io","_id":"cm3xvfy97004rewi9apkk40mj"},{"post_id":"cm3xvfy95004newi9vaszan53","tag_id":"cm3xvfy7b000cewi9737k5ctn","_id":"cm3xvfy98004vewi91d1xtqc8"},{"post_id":"cm3xvfy7w0015ewi9cj04gxa0","tag_id":"cm3xvfy8l0031ewi9o9am7juu","_id":"cm3xvfy99004yewi9rm3c5f6x"},{"post_id":"cm3xvfy7w0015ewi9cj04gxa0","tag_id":"cm3xvfy91004aewi9nlkbaio4","_id":"cm3xvfy9a0051ewi9t2a9eqp5"},{"post_id":"cm3xvfy7w0015ewi9cj04gxa0","tag_id":"cm3xvfy93004hewi9dgwhcv3j","_id":"cm3xvfy9a0053ewi91hiwhyjy"},{"post_id":"cm3xvfy7w0015ewi9cj04gxa0","tag_id":"cm3xvfy95004mewi924d51e6x","_id":"cm3xvfy9b0056ewi9pjuy3baq"},{"post_id":"cm3xvfy7y0019ewi964kigk5x","tag_id":"cm3xvfy98004uewi9kpl76023","_id":"cm3xvfy9b0058ewi9u2thkt6o"},{"post_id":"cm3xvfy7y001bewi9usde59wn","tag_id":"cm3xvfy9a0050ewi92wdtlepl","_id":"cm3xvfy9c005aewi98p7fzlxh"},{"post_id":"cm3xvfy7z001dewi9n48xsoix","tag_id":"cm3xvfy770007ewi9jen2u8io","_id":"cm3xvfy9d005gewi9dwd4muxg"},{"post_id":"cm3xvfy7z001dewi9n48xsoix","tag_id":"cm3xvfy9b0055ewi9xd0i50p7","_id":"cm3xvfy9d005hewi93qomc8mk"},{"post_id":"cm3xvfy7z001dewi9n48xsoix","tag_id":"cm3xvfy9c005bewi9gm1v5xci","_id":"cm3xvfy9e005jewi9ympct4t2"},{"post_id":"cm3xvfy7z001dewi9n48xsoix","tag_id":"cm3xvfy9c005dewi9lulmf4sf","_id":"cm3xvfy9e005kewi9j1hjlnh3"},{"post_id":"cm3xvfy7z001dewi9n48xsoix","tag_id":"cm3xvfy9c005eewi9ive9earp","_id":"cm3xvfy9e005mewi9fpanemp3"},{"post_id":"cm3xvfy81001hewi9zmrhmof5","tag_id":"cm3xvfy9d005fewi9aqyvtmy3","_id":"cm3xvfy9e005newi9myes4g97"},{"post_id":"cm3xvfy82001kewi97fugqhzn","tag_id":"cm3xvfy9d005iewi90gzxbh1b","_id":"cm3xvfy9f005pewi98kfjihnx"},{"post_id":"cm3xvfy82001kewi97fugqhzn","tag_id":"cm3xvfy9e005lewi9puz5pub8","_id":"cm3xvfy9f005qewi9gra1pvod"},{"post_id":"cm3xvfy83001oewi9i5llxh3o","tag_id":"cm3xvfy9d005iewi90gzxbh1b","_id":"cm3xvfy9g005sewi9si83zzzc"},{"post_id":"cm3xvfy84001rewi97pap1201","tag_id":"cm3xvfy9d005iewi90gzxbh1b","_id":"cm3xvfy9g005uewi94ohlf6bc"},{"post_id":"cm3xvfy85001uewi9w9788wyq","tag_id":"cm3xvfy9g005tewi919bw2m5p","_id":"cm3xvfy9h005yewi9lpqe0j5g"},{"post_id":"cm3xvfy85001uewi9w9788wyq","tag_id":"cm3xvfy9g005vewi978n0ij86","_id":"cm3xvfy9h005zewi9avbku5iv"},{"post_id":"cm3xvfy85001uewi9w9788wyq","tag_id":"cm3xvfy9h005wewi975swfb01","_id":"cm3xvfy9i0061ewi91zr4lidi"},{"post_id":"cm3xvfy86001wewi9jag9ai54","tag_id":"cm3xvfy9a0050ewi92wdtlepl","_id":"cm3xvfy9i0062ewi9qfopppf7"},{"post_id":"cm3xvfy87001zewi913pbqhb1","tag_id":"cm3xvfy770007ewi9jen2u8io","_id":"cm3xvfy9j0064ewi931zlvqx9"},{"post_id":"cm3xvfy87001zewi913pbqhb1","tag_id":"cm3xvfy9i0060ewi9fmrlph2j","_id":"cm3xvfy9j0065ewi9ouqtw315"},{"post_id":"cm3xvfy880022ewi9tczgpbhu","tag_id":"cm3xvfy770007ewi9jen2u8io","_id":"cm3xvfy9j0067ewi9ntjbm9ex"},{"post_id":"cm3xvfy880022ewi9tczgpbhu","tag_id":"cm3xvfy7b000cewi9737k5ctn","_id":"cm3xvfy9j0068ewi9353a17zd"},{"post_id":"cm3xvfy880022ewi9tczgpbhu","tag_id":"cm3xvfy9i0063ewi9n2ibqys3","_id":"cm3xvfy9k006aewi9zajl5998"},{"post_id":"cm3xvfy8a0029ewi9tuqu2yae","tag_id":"cm3xvfy770007ewi9jen2u8io","_id":"cm3xvfy9k006bewi90su9ovob"},{"post_id":"cm3xvfy8a0029ewi9tuqu2yae","tag_id":"cm3xvfy7b000cewi9737k5ctn","_id":"cm3xvfy9l006dewi98nlo6n6e"},{"post_id":"cm3xvfy8a0029ewi9tuqu2yae","tag_id":"cm3xvfy9i0063ewi9n2ibqys3","_id":"cm3xvfy9l006eewi92q5tpro4"},{"post_id":"cm3xvfy8b002cewi9x4a9ngsq","tag_id":"cm3xvfy770007ewi9jen2u8io","_id":"cm3xvfy9l006gewi9eysir038"},{"post_id":"cm3xvfy8b002cewi9x4a9ngsq","tag_id":"cm3xvfy7b000cewi9737k5ctn","_id":"cm3xvfy9m006hewi9a5rqay7u"},{"post_id":"cm3xvfy8b002cewi9x4a9ngsq","tag_id":"cm3xvfy9k0069ewi9199aq8wz","_id":"cm3xvfy9m006jewi9qn057aob"},{"post_id":"cm3xvfy8d002gewi91u36a9my","tag_id":"cm3xvfy770007ewi9jen2u8io","_id":"cm3xvfy9m006kewi9bp5kujs5"},{"post_id":"cm3xvfy8d002gewi91u36a9my","tag_id":"cm3xvfy7b000cewi9737k5ctn","_id":"cm3xvfy9o006mewi9wq9hrg8l"},{"post_id":"cm3xvfy8d002gewi91u36a9my","tag_id":"cm3xvfy9k006cewi9wbciahn4","_id":"cm3xvfy9o006newi9cwp34j5u"},{"post_id":"cm3xvfy8e002jewi9k8flopif","tag_id":"cm3xvfy770007ewi9jen2u8io","_id":"cm3xvfy9p006pewi9g7b8arxs"},{"post_id":"cm3xvfy8e002jewi9k8flopif","tag_id":"cm3xvfy7b000cewi9737k5ctn","_id":"cm3xvfy9p006qewi9t3ooczfa"},{"post_id":"cm3xvfy8e002jewi9k8flopif","tag_id":"cm3xvfy9k0069ewi9199aq8wz","_id":"cm3xvfy9p006rewi9df9ix44k"},{"post_id":"cm3xvfy8f002newi9qnykgw31","tag_id":"cm3xvfy770007ewi9jen2u8io","_id":"cm3xvfy9q006tewi9ong9mj18"},{"post_id":"cm3xvfy8f002newi9qnykgw31","tag_id":"cm3xvfy7b000cewi9737k5ctn","_id":"cm3xvfy9q006uewi9bgjfxvqj"},{"post_id":"cm3xvfy8f002newi9qnykgw31","tag_id":"cm3xvfy9k0069ewi9199aq8wz","_id":"cm3xvfy9r006wewi9ydlenvia"},{"post_id":"cm3xvfy8g002qewi9ec3oyq84","tag_id":"cm3xvfy770007ewi9jen2u8io","_id":"cm3xvfy9r006xewi9rv5vuswt"},{"post_id":"cm3xvfy8g002qewi9ec3oyq84","tag_id":"cm3xvfy7b000cewi9737k5ctn","_id":"cm3xvfy9r006zewi95s5hl2jm"},{"post_id":"cm3xvfy8g002qewi9ec3oyq84","tag_id":"cm3xvfy9n006lewi96hd546j6","_id":"cm3xvfy9s0070ewi925l8n4wa"},{"post_id":"cm3xvfy8g002qewi9ec3oyq84","tag_id":"cm3xvfy9p006oewi9blf7ifju","_id":"cm3xvfy9s0072ewi9t65gvmjw"},{"post_id":"cm3xvfy8i002tewi9xb8j7mux","tag_id":"cm3xvfy770007ewi9jen2u8io","_id":"cm3xvfy9s0073ewi9gmyb5ooz"},{"post_id":"cm3xvfy8i002tewi9xb8j7mux","tag_id":"cm3xvfy7b000cewi9737k5ctn","_id":"cm3xvfy9t0075ewi92q7673bo"},{"post_id":"cm3xvfy8i002tewi9xb8j7mux","tag_id":"cm3xvfy9p006sewi9z31eerzx","_id":"cm3xvfy9t0076ewi9o35wtj20"},{"post_id":"cm3xvfy8k002zewi9beizf4t6","tag_id":"cm3xvfy7b000cewi9737k5ctn","_id":"cm3xvfy9t0077ewi9bit2xjtk"},{"post_id":"cm3xvfy8k002zewi9beizf4t6","tag_id":"cm3xvfy770007ewi9jen2u8io","_id":"cm3xvfy9t0079ewi97250kxvb"},{"post_id":"cm3xvfy8k002zewi9beizf4t6","tag_id":"cm3xvfy9q006vewi9t1bvy197","_id":"cm3xvfy9u007aewi9tknfgfaf"},{"post_id":"cm3xvfy8m0033ewi9niq309h3","tag_id":"cm3xvfy7b000cewi9737k5ctn","_id":"cm3xvfy9u007cewi903w31nkv"},{"post_id":"cm3xvfy8m0033ewi9niq309h3","tag_id":"cm3xvfy9k006cewi9wbciahn4","_id":"cm3xvfy9u007dewi9kad4zo2e"},{"post_id":"cm3xvfy8q003hewi9hfts0qx3","tag_id":"cm3xvfy770007ewi9jen2u8io","_id":"cm3xvfy9v007fewi9ofcfff3c"},{"post_id":"cm3xvfy8q003hewi9hfts0qx3","tag_id":"cm3xvfy7b000cewi9737k5ctn","_id":"cm3xvfy9v007gewi9a9epmxxl"},{"post_id":"cm3xvfy8q003hewi9hfts0qx3","tag_id":"cm3xvfy9s0071ewi9cwxntq55","_id":"cm3xvfy9w007iewi9s6wnis1g"},{"post_id":"cm3xvfy8r003kewi9tdqdj4gs","tag_id":"cm3xvfy770007ewi9jen2u8io","_id":"cm3xvfy9w007jewi9xcxfexii"},{"post_id":"cm3xvfy8r003kewi9tdqdj4gs","tag_id":"cm3xvfy7b000cewi9737k5ctn","_id":"cm3xvfy9w007lewi9fhiuwrn8"},{"post_id":"cm3xvfy8r003kewi9tdqdj4gs","tag_id":"cm3xvfy9s0074ewi90ygscrvq","_id":"cm3xvfy9w007mewi9meb9lzfq"},{"post_id":"cm3xvfy8r003kewi9tdqdj4gs","tag_id":"cm3xvfy9t0078ewi9r93i7p0l","_id":"cm3xvfy9x007newi9awc81j8j"},{"post_id":"cm3xvfy8u003rewi9qfqco5if","tag_id":"cm3xvfy7b000cewi9737k5ctn","_id":"cm3xvfy9x007pewi92bxygaz3"},{"post_id":"cm3xvfy8u003rewi9qfqco5if","tag_id":"cm3xvfy9k006cewi9wbciahn4","_id":"cm3xvfy9x007qewi90d6so2lk"},{"post_id":"cm3xvfy8u003rewi9qfqco5if","tag_id":"cm3xvfy9v007eewi9004rcd0q","_id":"cm3xvfy9y007sewi9abe9vuov"},{"post_id":"cm3xvfy8u003rewi9qfqco5if","tag_id":"cm3xvfy9v007hewi9hv6cjaop","_id":"cm3xvfy9y007tewi9q7rqpc9j"},{"post_id":"cm3xvfy8v003uewi9aquf56ll","tag_id":"cm3xvfy9w007kewi99rg1p38q","_id":"cm3xvfy9y007vewi9yzc4c1ln"},{"post_id":"cm3xvfy8v003uewi9aquf56ll","tag_id":"cm3xvfy9x007oewi9snyeef7h","_id":"cm3xvfy9y007wewi98u16p37k"},{"post_id":"cm3xvfy8w003yewi93vwncekh","tag_id":"cm3xvfy7b000cewi9737k5ctn","_id":"cm3xvfy9z007yewi9wkf06x9i"},{"post_id":"cm3xvfy8w003yewi93vwncekh","tag_id":"cm3xvfy9x007rewi90vi3gr58","_id":"cm3xvfy9z007zewi9n2vtr5be"},{"post_id":"cm3xvfy8w003yewi93vwncekh","tag_id":"cm3xvfy9k006cewi9wbciahn4","_id":"cm3xvfy9z0081ewi9l0gvpgq1"},{"post_id":"cm3xvfy8x0041ewi9tqzbek71","tag_id":"cm3xvfy9z007xewi9zubzy1m2","_id":"cm3xvfya00083ewi9kggwpolj"},{"post_id":"cm3xvfy8x0041ewi9tqzbek71","tag_id":"cm3xvfy7b000cewi9737k5ctn","_id":"cm3xvfya00084ewi9ybm4dto6"},{"post_id":"cm3xvfy8x0041ewi9tqzbek71","tag_id":"cm3xvfy9z0080ewi908dd51sd","_id":"cm3xvfya10086ewi9c9fmygy0"},{"post_id":"cm3xvfy8z0044ewi9a7ms7jnq","tag_id":"cm3xvfy770007ewi9jen2u8io","_id":"cm3xvfya10087ewi9u0fs6xab"},{"post_id":"cm3xvfy8z0044ewi9a7ms7jnq","tag_id":"cm3xvfy8f002lewi9i1edf9a6","_id":"cm3xvfya10089ewi9learwa41"},{"post_id":"cm3xvfy8z0044ewi9a7ms7jnq","tag_id":"cm3xvfya00082ewi9wch38pa9","_id":"cm3xvfya1008aewi9lrid5ygo"},{"post_id":"cm3xvfy900047ewi91e4c7fvj","tag_id":"cm3xvfya00085ewi9hid0du0x","_id":"cm3xvfya2008dewi9hw3ximbw"},{"post_id":"cm3xvfy900047ewi91e4c7fvj","tag_id":"cm3xvfya10088ewi9ko3ejnez","_id":"cm3xvfya2008eewi99qoyj8ni"},{"post_id":"cm3xvfy900047ewi91e4c7fvj","tag_id":"cm3xvfya2008bewi95rzf2mj8","_id":"cm3xvfya3008gewi9g4hqewqf"},{"post_id":"cm3xvfy91004bewi9wyloc58f","tag_id":"cm3xvfya2008cewi90eiecly9","_id":"cm3xvfya3008iewi9m3rlwcy3"},{"post_id":"cm3xvfy91004bewi9wyloc58f","tag_id":"cm3xvfya3008fewi9agalzfk5","_id":"cm3xvfya3008jewi9isy746kb"},{"post_id":"cm3xvfy92004eewi9a2zmod5m","tag_id":"cm3xvfy770007ewi9jen2u8io","_id":"cm3xvfya4008mewi9tuhzdzw7"},{"post_id":"cm3xvfy92004eewi9a2zmod5m","tag_id":"cm3xvfy7b000cewi9737k5ctn","_id":"cm3xvfya5008newi9v0t8upjw"},{"post_id":"cm3xvfy92004eewi9a2zmod5m","tag_id":"cm3xvfya3008hewi9k9v59f1g","_id":"cm3xvfya5008pewi9nmo1a09p"},{"post_id":"cm3xvfy92004eewi9a2zmod5m","tag_id":"cm3xvfya4008kewi9n78xsly0","_id":"cm3xvfya5008qewi9qng4xlpz"},{"post_id":"cm3xvfy94004iewi9u8bxudmg","tag_id":"cm3xvfy9c005bewi9gm1v5xci","_id":"cm3xvfya6008sewi9a78wcc2i"},{"post_id":"cm3xvfy94004iewi9u8bxudmg","tag_id":"cm3xvfya5008oewi9hxvjro6g","_id":"cm3xvfya6008tewi924d2edcm"},{"post_id":"cm3xvfy94004kewi9ug1np98c","tag_id":"cm3xvfy9d005fewi9aqyvtmy3","_id":"cm3xvfya6008vewi95e4ty73o"},{"post_id":"cm3xvfy96004pewi9gblkc1r7","tag_id":"cm3xvfy9d005iewi90gzxbh1b","_id":"cm3xvfya7008xewi9idruu52y"},{"post_id":"cm3xvfy97004sewi9bb8d85xn","tag_id":"cm3xvfya7008wewi99d32d6db","_id":"cm3xvfya7008yewi9igeogj2i"},{"post_id":"cm3xvfyak008zewi9urtg4xhn","tag_id":"cm3xvfya7008wewi99d32d6db","_id":"cm3xvfyam0092ewi9u5gukqea"},{"post_id":"cm3xvfyal0091ewi9owx114oq","tag_id":"cm3xvfy770007ewi9jen2u8io","_id":"cm3xvfyba009fewi9bux2yit8"},{"post_id":"cm3xvfyal0091ewi9owx114oq","tag_id":"cm3xvfy8c002eewi9t8secitn","_id":"cm3xvfybi009gewi9pq0xochw"},{"post_id":"cm3xvfyal0091ewi9owx114oq","tag_id":"cm3xvfyat0094ewi9dg4i0320","_id":"cm3xvfybn009iewi9t3d2vdhc"},{"post_id":"cm3xvfyal0091ewi9owx114oq","tag_id":"cm3xvfyb10099ewi92z6vswec","_id":"cm3xvfybs009jewi9h7enm68k"},{"post_id":"cm3xvfyal0091ewi9owx114oq","tag_id":"cm3xvfyb2009dewi9diaktdod","_id":"cm3xvfybt009lewi9r39uurxj"},{"post_id":"cm3xvfyat0095ewi9762gygei","tag_id":"cm3xvfyb3009eewi9qu1uv7mv","_id":"cm3xvfybt009mewi9nvyae4la"},{"post_id":"cm3xvfyat0095ewi9762gygei","tag_id":"cm3xvfy9d005iewi90gzxbh1b","_id":"cm3xvfybt009newi9865pfih4"},{"post_id":"cm3xvfyat0095ewi9762gygei","tag_id":"cm3xvfybn009hewi9sgpxxzpb","_id":"cm3xvfybu009oewi9r4oht0u2"},{"post_id":"cm3xvfyaz0097ewi9ke91x3s6","tag_id":"cm3xvfy98004uewi9kpl76023","_id":"cm3xvfybu009pewi95ap4740z"},{"post_id":"cm3xvfyaz0097ewi9ke91x3s6","tag_id":"cm3xvfy8c002eewi9t8secitn","_id":"cm3xvfybu009qewi9yu6wpniv"},{"post_id":"cm3xvfyaz0097ewi9ke91x3s6","tag_id":"cm3xvfybt009kewi9mrlznfkv","_id":"cm3xvfybu009rewi9mmp0q77d"}],"Tag":[{"name":"C#","_id":"cm3xvfy770007ewi9jen2u8io"},{"name":"WPF","_id":"cm3xvfy7b000cewi9737k5ctn"},{"name":"AppCenter","_id":"cm3xvfy7g000iewi93gcfdn4d"},{"name":"async","_id":"cm3xvfy7u0011ewi93n93jx1c"},{"name":"await","_id":"cm3xvfy7x0018ewi9s50ydr5j"},{"name":"-Linux -CentOS","_id":"cm3xvfy80001fewi9fa3losfu"},{"name":".net core","_id":"cm3xvfy83001mewi98536txal"},{"name":"Command","_id":"cm3xvfy85001tewi9a7c94feg"},{"name":"SOLID","_id":"cm3xvfy87001yewi9ap97a4x6"},{"name":"knowhow","_id":"cm3xvfy8a0027ewi9l6jj6zwv"},{"name":".Net Core","_id":"cm3xvfy8c002eewi9t8secitn"},{"name":"DI","_id":"cm3xvfy8f002lewi9i1edf9a6"},{"name":"Nuget","_id":"cm3xvfy8h002sewi9eyhfm5q4"},{"name":"Jetbrains","_id":"cm3xvfy8l0031ewi9o9am7juu"},{"name":"ubuntu","_id":"cm3xvfy8n0038ewi9a51b0mn8"},{"name":"linux","_id":"cm3xvfy8q003fewi9lpma69zs"},{"name":"mysql","_id":"cm3xvfy8s003newi946jvvv05"},{"name":"phpmyadmin","_id":"cm3xvfy8w003wewi9erg46sqa"},{"name":"Rider","_id":"cm3xvfy91004aewi9nlkbaio4"},{"name":"Pycharm","_id":"cm3xvfy93004hewi9dgwhcv3j"},{"name":"DataGrip","_id":"cm3xvfy95004mewi924d51e6x"},{"name":"Linux","_id":"cm3xvfy98004uewi9kpl76023"},{"name":"SQL","_id":"cm3xvfy9a0050ewi92wdtlepl"},{"name":"NUnit","_id":"cm3xvfy9b0055ewi9xd0i50p7"},{"name":"UnitTest","_id":"cm3xvfy9c005bewi9gm1v5xci"},{"name":"單元測試","_id":"cm3xvfy9c005dewi9lulmf4sf"},{"name":"AXOCover","_id":"cm3xvfy9c005eewi9ive9earp"},{"name":"git","_id":"cm3xvfy9d005fewi9aqyvtmy3"},{"name":"Python","_id":"cm3xvfy9d005iewi90gzxbh1b"},{"name":"Request","_id":"cm3xvfy9e005lewi9puz5pub8"},{"name":"jetbrains","_id":"cm3xvfy9g005tewi919bw2m5p"},{"name":"rider","_id":"cm3xvfy9g005vewi978n0ij86"},{"name":"live templates","_id":"cm3xvfy9h005wewi975swfb01"},{"name":"StyleCop","_id":"cm3xvfy9i0060ewi9fmrlph2j"},{"name":"Chart","_id":"cm3xvfy9i0063ewi9n2ibqys3"},{"name":"DataGrid","_id":"cm3xvfy9k0069ewi9199aq8wz"},{"name":"DataBinding","_id":"cm3xvfy9k006cewi9wbciahn4"},{"name":"DataTemplate","_id":"cm3xvfy9n006lewi96hd546j6"},{"name":"ControlTemplate","_id":"cm3xvfy9p006oewi9blf7ifju"},{"name":"Dockable","_id":"cm3xvfy9p006sewi9z31eerzx"},{"name":"xaml","_id":"cm3xvfy9q006vewi9t1bvy197"},{"name":"Resource","_id":"cm3xvfy9s0071ewi9cwxntq55"},{"name":"MahApps","_id":"cm3xvfy9s0074ewi90ygscrvq"},{"name":"Metro Style","_id":"cm3xvfy9t0078ewi9r93i7p0l"},{"name":"UserControl","_id":"cm3xvfy9v007eewi9004rcd0q"},{"name":"DependencyProperty","_id":"cm3xvfy9v007hewi9hv6cjaop"},{"name":"Hexo","_id":"cm3xvfy9w007kewi99rg1p38q"},{"name":"Blog","_id":"cm3xvfy9x007oewi9snyeef7h"},{"name":"引動過程的目標傳回例外狀況","_id":"cm3xvfy9x007rewi90vi3gr58"},{"name":"CICD","_id":"cm3xvfy9z007xewi9zubzy1m2"},{"name":"Jenkins","_id":"cm3xvfy9z0080ewi908dd51sd"},{"name":".net framework","_id":"cm3xvfya00082ewi9wch38pa9"},{"name":"npm","_id":"cm3xvfya00085ewi9hid0du0x"},{"name":"yarn","_id":"cm3xvfya10088ewi9ko3ejnez"},{"name":"hexo","_id":"cm3xvfya2008bewi95rzf2mj8"},{"name":"python","_id":"cm3xvfya2008cewi90eiecly9"},{"name":"yolo","_id":"cm3xvfya3008fewi9agalzfk5"},{"name":"HierarchicalDataTemplate","_id":"cm3xvfya3008hewi9k9v59f1g"},{"name":"TreeView","_id":"cm3xvfya4008kewi9n78xsly0"},{"name":"Tool","_id":"cm3xvfya5008oewi9hxvjro6g"},{"name":"Know How","_id":"cm3xvfya7008wewi99d32d6db"},{"name":"IIS","_id":"cm3xvfyat0094ewi9dg4i0320"},{"name":"WebAPI","_id":"cm3xvfyb10099ewi92z6vswec"},{"name":"Publish","_id":"cm3xvfyb2009dewi9diaktdod"},{"name":"Git","_id":"cm3xvfyb3009eewi9qu1uv7mv"},{"name":"CI","_id":"cm3xvfybn009hewi9sgpxxzpb"},{"name":"Raspberry PI","_id":"cm3xvfybt009kewi9mrlznfkv"}]}}